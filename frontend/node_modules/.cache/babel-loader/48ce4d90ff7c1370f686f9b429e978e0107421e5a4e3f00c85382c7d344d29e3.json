{"ast":null,"code":"import * as THREE from 'three';\nfunction createCylinder(x, y, z) {\n  // create a geometry\n  const geometryCylinder = new THREE.CylinderGeometry(1, 1, 1, 32);\n  const cylinder = new THREE.Mesh(geometryCylinder, [new THREE.MeshPhongMaterial({\n    color: 'blue',\n    shininess: 200\n  }), new THREE.MeshPhongMaterial({\n    color: 'red',\n    shininess: 200\n  })]);\n  cylinder.rotation.set(Math.PI / 2, 0, 0);\n  cylinder.position.set(x, y, z);\n  return cylinder;\n}\nexport { createCylinder };","map":{"version":3,"names":["THREE","createCylinder","x","y","z","geometryCylinder","CylinderGeometry","cylinder","Mesh","MeshPhongMaterial","color","shininess","rotation","set","Math","PI","position"],"sources":["/Users/cabrera/Documents/PortfolioWebiste/frontend/src/gyroscopeRenderer/components/cylinder.js"],"sourcesContent":["import * as THREE from 'three';\n\nfunction createCylinder(x,y,z) {\n  // create a geometry\n  const geometryCylinder = new THREE.CylinderGeometry(1, 1, 1, 32 ); \n\n  const cylinder = new THREE.Mesh(geometryCylinder, [new THREE.MeshPhongMaterial({ color: 'blue', shininess: 200 }),new THREE.MeshPhongMaterial({ color: 'red', shininess: 200 })]);\n  cylinder.rotation.set(Math.PI/2,0,0)\n  cylinder.position.set(x,y,z)\n\n  return cylinder;\n}\n\nexport { createCylinder };"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,cAAcA,CAACC,CAAC,EAACC,CAAC,EAACC,CAAC,EAAE;EAC7B;EACA,MAAMC,gBAAgB,GAAG,IAAIL,KAAK,CAACM,gBAAgB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAG,CAAC;EAEjE,MAAMC,QAAQ,GAAG,IAAIP,KAAK,CAACQ,IAAI,CAACH,gBAAgB,EAAE,CAAC,IAAIL,KAAK,CAACS,iBAAiB,CAAC;IAAEC,KAAK,EAAE,MAAM;IAAEC,SAAS,EAAE;EAAI,CAAC,CAAC,EAAC,IAAIX,KAAK,CAACS,iBAAiB,CAAC;IAAEC,KAAK,EAAE,KAAK;IAAEC,SAAS,EAAE;EAAI,CAAC,CAAC,CAAC,CAAC;EACjLJ,QAAQ,CAACK,QAAQ,CAACC,GAAG,CAACC,IAAI,CAACC,EAAE,GAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EACpCR,QAAQ,CAACS,QAAQ,CAACH,GAAG,CAACX,CAAC,EAACC,CAAC,EAACC,CAAC,CAAC;EAE5B,OAAOG,QAAQ;AACjB;AAEA,SAASN,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}