{"ast":null,"code":"import TempNode from '../core/TempNode.js';\nimport { texture } from '../accessors/TextureNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { normalView } from '../accessors/NormalNode.js';\nimport { positionView } from '../accessors/PositionNode.js';\nimport { faceDirection } from './FrontFacingNode.js';\nimport { tslFn, nodeProxy, vec2 } from '../shadernode/ShaderNode.js';\n\n// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n// https://mmikk.github.io/papers3d/mm_sfgrad_bump.pdf\n\n// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\nconst dHdxy_fwd = tslFn(({\n  bumpTexture,\n  bumpScale\n}) => {\n  const uvNode = uv();\n  const Hll = texture(bumpTexture, uvNode).x;\n  return vec2(texture(bumpTexture, uvNode.add(uvNode.dFdx())).x.sub(Hll), texture(bumpTexture, uvNode.add(uvNode.dFdy())).x.sub(Hll)).mul(bumpScale);\n});\nconst perturbNormalArb = tslFn(inputs => {\n  const {\n    surf_pos,\n    surf_norm,\n    dHdxy\n  } = inputs;\n  const vSigmaX = surf_pos.dFdx();\n  const vSigmaY = surf_pos.dFdy();\n  const vN = surf_norm; // normalized\n\n  const R1 = vSigmaY.cross(vN);\n  const R2 = vN.cross(vSigmaX);\n  const fDet = vSigmaX.dot(R1).mul(faceDirection);\n  const vGrad = fDet.sign().mul(dHdxy.x.mul(R1).add(dHdxy.y.mul(R2)));\n  return fDet.abs().mul(surf_norm).sub(vGrad).normalize();\n});\nclass BumpMapNode extends TempNode {\n  constructor(texture, scaleNode = null) {\n    super('vec3');\n    this.texture = texture;\n    this.scaleNode = scaleNode;\n  }\n  setup() {\n    const bumpScale = this.scaleNode !== null ? this.scaleNode : 1;\n    const dHdxy = dHdxy_fwd({\n      bumpTexture: this.texture,\n      bumpScale\n    });\n    return perturbNormalArb({\n      surf_pos: positionView.negate(),\n      surf_norm: normalView,\n      dHdxy\n    });\n  }\n}\nexport default BumpMapNode;\nexport const bumpMap = nodeProxy(BumpMapNode);\naddNodeClass('BumpMapNode', BumpMapNode);","map":{"version":3,"names":["TempNode","texture","addNodeClass","uv","normalView","positionView","faceDirection","tslFn","nodeProxy","vec2","dHdxy_fwd","bumpTexture","bumpScale","uvNode","Hll","x","add","dFdx","sub","dFdy","mul","perturbNormalArb","inputs","surf_pos","surf_norm","dHdxy","vSigmaX","vSigmaY","vN","R1","cross","R2","fDet","dot","vGrad","sign","y","abs","normalize","BumpMapNode","constructor","scaleNode","setup","negate","bumpMap"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/display/BumpMapNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport { texture } from '../accessors/TextureNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { normalView } from '../accessors/NormalNode.js';\nimport { positionView } from '../accessors/PositionNode.js';\nimport { faceDirection } from './FrontFacingNode.js';\nimport { tslFn, nodeProxy, vec2 } from '../shadernode/ShaderNode.js';\n\n// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen\n// https://mmikk.github.io/papers3d/mm_sfgrad_bump.pdf\n\n// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\nconst dHdxy_fwd = tslFn( ( { bumpTexture, bumpScale } ) => {\n\n\tconst uvNode = uv();\n\n\tconst Hll = texture( bumpTexture, uvNode ).x;\n\n\treturn vec2(\n\t\ttexture( bumpTexture, uvNode.add( uvNode.dFdx() ) ).x.sub( Hll ),\n\t\ttexture( bumpTexture, uvNode.add( uvNode.dFdy() ) ).x.sub( Hll )\n\t).mul( bumpScale );\n\n} );\n\nconst perturbNormalArb = tslFn( ( inputs ) => {\n\n\tconst { surf_pos, surf_norm, dHdxy } = inputs;\n\n\tconst vSigmaX = surf_pos.dFdx();\n\tconst vSigmaY = surf_pos.dFdy();\n\tconst vN = surf_norm; // normalized\n\n\tconst R1 = vSigmaY.cross( vN );\n\tconst R2 = vN.cross( vSigmaX );\n\n\tconst fDet = vSigmaX.dot( R1 ).mul( faceDirection );\n\n\tconst vGrad = fDet.sign().mul( dHdxy.x.mul( R1 ).add( dHdxy.y.mul( R2 ) ) );\n\n\treturn fDet.abs().mul( surf_norm ).sub( vGrad ).normalize();\n\n} );\n\nclass BumpMapNode extends TempNode {\n\n\tconstructor( texture, scaleNode = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.texture = texture;\n\t\tthis.scaleNode = scaleNode;\n\n\t}\n\n\tsetup() {\n\n\t\tconst bumpScale = this.scaleNode !== null ? this.scaleNode : 1;\n\t\tconst dHdxy = dHdxy_fwd( { bumpTexture: this.texture, bumpScale } );\n\n\t\treturn perturbNormalArb( {\n\t\t\tsurf_pos: positionView.negate(),\n\t\t\tsurf_norm: normalView,\n\t\t\tdHdxy\n\t\t} );\n\n\t}\n\n}\n\nexport default BumpMapNode;\n\nexport const bumpMap = nodeProxy( BumpMapNode );\n\naddNodeClass( 'BumpMapNode', BumpMapNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}