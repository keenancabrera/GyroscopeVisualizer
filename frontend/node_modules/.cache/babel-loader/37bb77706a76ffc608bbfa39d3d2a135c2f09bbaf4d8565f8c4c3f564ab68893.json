{"ast":null,"code":"import Node, { addNodeClass } from './Node.js';\nimport { NodeShaderStage } from './constants.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\nclass VaryingNode extends Node {\n  constructor(node, name = null) {\n    super();\n    this.node = node;\n    this.name = name;\n  }\n  isGlobal() {\n    return true;\n  }\n  getHash(builder) {\n    return this.name || super.getHash(builder);\n  }\n  getNodeType(builder) {\n    // VaryingNode is auto type\n\n    return this.node.getNodeType(builder);\n  }\n  generate(builder) {\n    const {\n      name,\n      node\n    } = this;\n    const type = this.getNodeType(builder);\n    const nodeVarying = builder.getVaryingFromNode(this, type);\n\n    // this property can be used to check if the varying can be optimized for a var\n    nodeVarying.needsInterpolation || (nodeVarying.needsInterpolation = builder.shaderStage === 'fragment');\n    if (name !== null) {\n      nodeVarying.name = name;\n    }\n    const propertyName = builder.getPropertyName(nodeVarying, NodeShaderStage.VERTEX);\n\n    // force node run in vertex stage\n    builder.flowNodeFromShaderStage(NodeShaderStage.VERTEX, node, type, propertyName);\n    return builder.getPropertyName(nodeVarying);\n  }\n}\nexport default VaryingNode;\nexport const varying = nodeProxy(VaryingNode);\naddNodeElement('varying', varying);\naddNodeClass('VaryingNode', VaryingNode);","map":{"version":3,"names":["Node","addNodeClass","NodeShaderStage","addNodeElement","nodeProxy","VaryingNode","constructor","node","name","isGlobal","getHash","builder","getNodeType","generate","type","nodeVarying","getVaryingFromNode","needsInterpolation","shaderStage","propertyName","getPropertyName","VERTEX","flowNodeFromShaderStage","varying"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/core/VaryingNode.js"],"sourcesContent":["import Node, { addNodeClass } from './Node.js';\nimport { NodeShaderStage } from './constants.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass VaryingNode extends Node {\n\n\tconstructor( node, name = null ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.name = name;\n\n\t}\n\n\tisGlobal() {\n\n\t\treturn true;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\t// VaryingNode is auto type\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { name, node } = this;\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst nodeVarying = builder.getVaryingFromNode( this, type );\n\n\t\t// this property can be used to check if the varying can be optimized for a var\n\t\tnodeVarying.needsInterpolation || ( nodeVarying.needsInterpolation = ( builder.shaderStage === 'fragment' ) );\n\n\t\tif ( name !== null ) {\n\n\t\t\tnodeVarying.name = name;\n\n\t\t}\n\n\t\tconst propertyName = builder.getPropertyName( nodeVarying, NodeShaderStage.VERTEX );\n\n\t\t// force node run in vertex stage\n\t\tbuilder.flowNodeFromShaderStage( NodeShaderStage.VERTEX, node, type, propertyName );\n\n\t\treturn builder.getPropertyName( nodeVarying );\n\n\t}\n\n}\n\nexport default VaryingNode;\n\nexport const varying = nodeProxy( VaryingNode );\n\naddNodeElement( 'varying', varying );\n\naddNodeClass( 'VaryingNode', VaryingNode );\n"],"mappings":"AAAA,OAAOA,IAAI,IAAIC,YAAY,QAAQ,WAAW;AAC9C,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAASC,cAAc,EAAEC,SAAS,QAAQ,6BAA6B;AAEvE,MAAMC,WAAW,SAASL,IAAI,CAAC;EAE9BM,WAAWA,CAAEC,IAAI,EAAEC,IAAI,GAAG,IAAI,EAAG;IAEhC,KAAK,CAAC,CAAC;IAEP,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;EAEjB;EAEAC,QAAQA,CAAA,EAAG;IAEV,OAAO,IAAI;EAEZ;EAEAC,OAAOA,CAAEC,OAAO,EAAG;IAElB,OAAO,IAAI,CAACH,IAAI,IAAI,KAAK,CAACE,OAAO,CAAEC,OAAQ,CAAC;EAE7C;EAEAC,WAAWA,CAAED,OAAO,EAAG;IAEtB;;IAEA,OAAO,IAAI,CAACJ,IAAI,CAACK,WAAW,CAAED,OAAQ,CAAC;EAExC;EAEAE,QAAQA,CAAEF,OAAO,EAAG;IAEnB,MAAM;MAAEH,IAAI;MAAED;IAAK,CAAC,GAAG,IAAI;IAC3B,MAAMO,IAAI,GAAG,IAAI,CAACF,WAAW,CAAED,OAAQ,CAAC;IAExC,MAAMI,WAAW,GAAGJ,OAAO,CAACK,kBAAkB,CAAE,IAAI,EAAEF,IAAK,CAAC;;IAE5D;IACAC,WAAW,CAACE,kBAAkB,KAAMF,WAAW,CAACE,kBAAkB,GAAKN,OAAO,CAACO,WAAW,KAAK,UAAY,CAAE;IAE7G,IAAKV,IAAI,KAAK,IAAI,EAAG;MAEpBO,WAAW,CAACP,IAAI,GAAGA,IAAI;IAExB;IAEA,MAAMW,YAAY,GAAGR,OAAO,CAACS,eAAe,CAAEL,WAAW,EAAEb,eAAe,CAACmB,MAAO,CAAC;;IAEnF;IACAV,OAAO,CAACW,uBAAuB,CAAEpB,eAAe,CAACmB,MAAM,EAAEd,IAAI,EAAEO,IAAI,EAAEK,YAAa,CAAC;IAEnF,OAAOR,OAAO,CAACS,eAAe,CAAEL,WAAY,CAAC;EAE9C;AAED;AAEA,eAAeV,WAAW;AAE1B,OAAO,MAAMkB,OAAO,GAAGnB,SAAS,CAAEC,WAAY,CAAC;AAE/CF,cAAc,CAAE,SAAS,EAAEoB,OAAQ,CAAC;AAEpCtB,YAAY,CAAE,aAAa,EAAEI,WAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}