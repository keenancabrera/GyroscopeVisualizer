{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { nodeImmutable, vec2 } from '../shadernode/ShaderNode.js';\nimport { Vector2, Vector4 } from 'three';\nlet resolution, viewportResult;\nclass ViewportNode extends Node {\n  constructor(scope) {\n    super();\n    this.scope = scope;\n    this.isViewportNode = true;\n  }\n  getNodeType() {\n    return this.scope === ViewportNode.COORDINATE || this.scope === ViewportNode.VIEWPORT ? 'vec4' : 'vec2';\n  }\n  getUpdateType() {\n    let updateType = NodeUpdateType.NONE;\n    if (this.scope === ViewportNode.RESOLUTION || this.scope === ViewportNode.VIEWPORT) {\n      updateType = NodeUpdateType.FRAME;\n    }\n    this.updateType = updateType;\n    return updateType;\n  }\n  update({\n    renderer\n  }) {\n    if (this.scope === ViewportNode.VIEWPORT) {\n      renderer.getViewport(viewportResult);\n    } else {\n      renderer.getDrawingBufferSize(resolution);\n    }\n  }\n  setup(builder) {\n    const scope = this.scope;\n    if (scope === ViewportNode.COORDINATE) return;\n    let output = null;\n    if (scope === ViewportNode.RESOLUTION) {\n      output = uniform(resolution || (resolution = new Vector2()));\n    } else if (scope === ViewportNode.VIEWPORT) {\n      output = uniform(viewportResult || (viewportResult = new Vector4()));\n    } else {\n      const coordinateNode = vec2(new ViewportNode(ViewportNode.COORDINATE));\n      const resolutionNode = new ViewportNode(ViewportNode.RESOLUTION);\n      output = coordinateNode.div(resolutionNode);\n      let outX = output.x;\n      let outY = output.y;\n      if (/top/i.test(scope) && builder.isFlipY()) outY = outY.oneMinus();else if (/bottom/i.test(scope) && builder.isFlipY() === false) outY = outY.oneMinus();\n      if (/right/i.test(scope)) outX = outX.oneMinus();\n      output = vec2(outX, outY);\n    }\n    return output;\n  }\n  generate(builder) {\n    if (this.scope === ViewportNode.COORDINATE) {\n      return builder.getFragCoord();\n    }\n    return super.generate(builder);\n  }\n}\nViewportNode.COORDINATE = 'coordinate';\nViewportNode.RESOLUTION = 'resolution';\nViewportNode.VIEWPORT = 'viewport';\nViewportNode.TOP_LEFT = 'topLeft';\nViewportNode.BOTTOM_LEFT = 'bottomLeft';\nViewportNode.TOP_RIGHT = 'topRight';\nViewportNode.BOTTOM_RIGHT = 'bottomRight';\nexport default ViewportNode;\nexport const viewportCoordinate = nodeImmutable(ViewportNode, ViewportNode.COORDINATE);\nexport const viewportResolution = nodeImmutable(ViewportNode, ViewportNode.RESOLUTION);\nexport const viewport = nodeImmutable(ViewportNode, ViewportNode.VIEWPORT);\nexport const viewportTopLeft = nodeImmutable(ViewportNode, ViewportNode.TOP_LEFT);\nexport const viewportBottomLeft = nodeImmutable(ViewportNode, ViewportNode.BOTTOM_LEFT);\nexport const viewportTopRight = nodeImmutable(ViewportNode, ViewportNode.TOP_RIGHT);\nexport const viewportBottomRight = nodeImmutable(ViewportNode, ViewportNode.BOTTOM_RIGHT);\naddNodeClass('ViewportNode', ViewportNode);","map":{"version":3,"names":["Node","addNodeClass","NodeUpdateType","uniform","nodeImmutable","vec2","Vector2","Vector4","resolution","viewportResult","ViewportNode","constructor","scope","isViewportNode","getNodeType","COORDINATE","VIEWPORT","getUpdateType","updateType","NONE","RESOLUTION","FRAME","update","renderer","getViewport","getDrawingBufferSize","setup","builder","output","coordinateNode","resolutionNode","div","outX","x","outY","y","test","isFlipY","oneMinus","generate","getFragCoord","TOP_LEFT","BOTTOM_LEFT","TOP_RIGHT","BOTTOM_RIGHT","viewportCoordinate","viewportResolution","viewport","viewportTopLeft","viewportBottomLeft","viewportTopRight","viewportBottomRight"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/display/ViewportNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { uniform } from '../core/UniformNode.js';\nimport { nodeImmutable, vec2 } from '../shadernode/ShaderNode.js';\n\nimport { Vector2, Vector4 } from 'three';\n\nlet resolution, viewportResult;\n\nclass ViewportNode extends Node {\n\n\tconstructor( scope ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\n\t\tthis.isViewportNode = true;\n\n\t}\n\n\tgetNodeType() {\n\n\t\treturn this.scope === ViewportNode.COORDINATE || this.scope === ViewportNode.VIEWPORT ? 'vec4' : 'vec2';\n\n\t}\n\n\tgetUpdateType() {\n\n\t\tlet updateType = NodeUpdateType.NONE;\n\n\t\tif ( this.scope === ViewportNode.RESOLUTION || this.scope === ViewportNode.VIEWPORT ) {\n\n\t\t\tupdateType = NodeUpdateType.FRAME;\n\n\t\t}\n\n\t\tthis.updateType = updateType;\n\n\t\treturn updateType;\n\n\t}\n\n\tupdate( { renderer } ) {\n\n\t\tif ( this.scope === ViewportNode.VIEWPORT ) {\n\n\t\t\trenderer.getViewport( viewportResult );\n\n\t\t} else {\n\n\t\t\trenderer.getDrawingBufferSize( resolution );\n\n\t\t}\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === ViewportNode.COORDINATE ) return;\n\n\t\tlet output = null;\n\n\t\tif ( scope === ViewportNode.RESOLUTION ) {\n\n\t\t\toutput = uniform( resolution || ( resolution = new Vector2() ) );\n\n\t\t} else if ( scope === ViewportNode.VIEWPORT ) {\n\n\t\t\toutput = uniform( viewportResult || ( viewportResult = new Vector4() ) );\n\n\t\t} else {\n\n\t\t\tconst coordinateNode = vec2( new ViewportNode( ViewportNode.COORDINATE ) );\n\t\t\tconst resolutionNode = new ViewportNode( ViewportNode.RESOLUTION );\n\n\t\t\toutput = coordinateNode.div( resolutionNode );\n\n\t\t\tlet outX = output.x;\n\t\t\tlet outY = output.y;\n\n\t\t\tif ( /top/i.test( scope ) && builder.isFlipY() ) outY = outY.oneMinus();\n\t\t\telse if ( /bottom/i.test( scope ) && builder.isFlipY() === false ) outY = outY.oneMinus();\n\n\t\t\tif ( /right/i.test( scope ) ) outX = outX.oneMinus();\n\n\t\t\toutput = vec2( outX, outY );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tif ( this.scope === ViewportNode.COORDINATE ) {\n\n\t\t\treturn builder.getFragCoord();\n\n\t\t}\n\n\t\treturn super.generate( builder );\n\n\t}\n\n}\n\nViewportNode.COORDINATE = 'coordinate';\nViewportNode.RESOLUTION = 'resolution';\nViewportNode.VIEWPORT = 'viewport';\nViewportNode.TOP_LEFT = 'topLeft';\nViewportNode.BOTTOM_LEFT = 'bottomLeft';\nViewportNode.TOP_RIGHT = 'topRight';\nViewportNode.BOTTOM_RIGHT = 'bottomRight';\n\nexport default ViewportNode;\n\nexport const viewportCoordinate = nodeImmutable( ViewportNode, ViewportNode.COORDINATE );\nexport const viewportResolution = nodeImmutable( ViewportNode, ViewportNode.RESOLUTION );\nexport const viewport = nodeImmutable( ViewportNode, ViewportNode.VIEWPORT );\nexport const viewportTopLeft = nodeImmutable( ViewportNode, ViewportNode.TOP_LEFT );\nexport const viewportBottomLeft = nodeImmutable( ViewportNode, ViewportNode.BOTTOM_LEFT );\nexport const viewportTopRight = nodeImmutable( ViewportNode, ViewportNode.TOP_RIGHT );\nexport const viewportBottomRight = nodeImmutable( ViewportNode, ViewportNode.BOTTOM_RIGHT );\n\naddNodeClass( 'ViewportNode', ViewportNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}