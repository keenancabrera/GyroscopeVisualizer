{"ast":null,"code":"import * as THREE from 'three';\nfunction createCylinder(parameters) {\n  // create a geometry\n  const geometry = new THREE.CylinderGeometry(parameters.a.value,\n  // top radius\n  parameters.a.value,\n  // bottom radius\n  parameters.h.value,\n  // height\n  32,\n  // radial segments (default = 32)\n  1,\n  // height segments (default = 1)\n  0,\n  // theta start\n  Math.PI // theta end\n  );\n\n  const material = new THREE.MeshBasicMaterial({\n    color: \"red\",\n    wireframe: true\n  });\n  // const material = [new THREE.MeshPhongMaterial({ color: 'blue', shininess: 200 }),new THREE.MeshPhongMaterial({ color: 'red', shininess: 200 })]\n\n  const cylinder = new THREE.Mesh(geometry, material);\n  cylinder.rotation.set(Math.PI / 2, 0, 0);\n  cylinder.position.set(0, 0, parameters.l.value);\n  return cylinder;\n}\nexport { createCylinder };","map":{"version":3,"names":["THREE","createCylinder","parameters","geometry","CylinderGeometry","a","value","h","Math","PI","material","MeshBasicMaterial","color","wireframe","cylinder","Mesh","rotation","set","position","l"],"sources":["/Users/cabrera/Documents/PortfolioWebiste/frontend/src/gyroscopeRenderer/components/cylinder.js"],"sourcesContent":["import * as THREE from 'three';\n\nfunction createCylinder(parameters) {\n  // create a geometry\n  const geometry = new THREE.CylinderGeometry(\n    parameters.a.value, // top radius\n    parameters.a.value, // bottom radius\n    parameters.h.value, // height\n    32, // radial segments (default = 32)\n    1, // height segments (default = 1)\n    0, // theta start\n    Math.PI // theta end\n    ); \n  const material = new THREE.MeshBasicMaterial({color : \"red\", wireframe : true})\n  // const material = [new THREE.MeshPhongMaterial({ color: 'blue', shininess: 200 }),new THREE.MeshPhongMaterial({ color: 'red', shininess: 200 })]\n  \n  const cylinder = new THREE.Mesh(geometry, material);\n  cylinder.rotation.set(Math.PI/2,0,0)\n  cylinder.position.set(0, 0, parameters.l.value)\n\n  return cylinder;\n}\n\nexport { createCylinder };"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,cAAcA,CAACC,UAAU,EAAE;EAClC;EACA,MAAMC,QAAQ,GAAG,IAAIH,KAAK,CAACI,gBAAgB,CACzCF,UAAU,CAACG,CAAC,CAACC,KAAK;EAAE;EACpBJ,UAAU,CAACG,CAAC,CAACC,KAAK;EAAE;EACpBJ,UAAU,CAACK,CAAC,CAACD,KAAK;EAAE;EACpB,EAAE;EAAE;EACJ,CAAC;EAAE;EACH,CAAC;EAAE;EACHE,IAAI,CAACC,EAAE,CAAC;EACR,CAAC;;EACH,MAAMC,QAAQ,GAAG,IAAIV,KAAK,CAACW,iBAAiB,CAAC;IAACC,KAAK,EAAG,KAAK;IAAEC,SAAS,EAAG;EAAI,CAAC,CAAC;EAC/E;;EAEA,MAAMC,QAAQ,GAAG,IAAId,KAAK,CAACe,IAAI,CAACZ,QAAQ,EAAEO,QAAQ,CAAC;EACnDI,QAAQ,CAACE,QAAQ,CAACC,GAAG,CAACT,IAAI,CAACC,EAAE,GAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EACpCK,QAAQ,CAACI,QAAQ,CAACD,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEf,UAAU,CAACiB,CAAC,CAACb,KAAK,CAAC;EAE/C,OAAOQ,QAAQ;AACjB;AAEA,SAASb,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}