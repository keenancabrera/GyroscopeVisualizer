{"ast":null,"code":"import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBAFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, RGBA_BPTC_Format, _SRGBAFormat, RED_RGTC1_Format, SIGNED_RED_RGTC1_Format, RED_GREEN_RGTC2_Format, SIGNED_RED_GREEN_RGTC2_Format, SRGBColorSpace, NoColorSpace } from 'three';\nclass WebGLUtils {\n  constructor(backend) {\n    this.backend = backend;\n    this.gl = this.backend.gl;\n    this.extensions = backend.extensions;\n  }\n  convert(p, colorSpace = NoColorSpace) {\n    const {\n      gl,\n      extensions\n    } = this;\n    let extension;\n    if (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n    if (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === ByteType) return gl.BYTE;\n    if (p === ShortType) return gl.SHORT;\n    if (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n    if (p === IntType) return gl.INT;\n    if (p === UnsignedIntType) return gl.UNSIGNED_INT;\n    if (p === FloatType) return gl.FLOAT;\n    if (p === HalfFloatType) {\n      return gl.HALF_FLOAT;\n    }\n    if (p === AlphaFormat) return gl.ALPHA;\n    if (p === RGBAFormat) return gl.RGBA;\n    if (p === LuminanceFormat) return gl.LUMINANCE;\n    if (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n    if (p === DepthFormat) return gl.DEPTH_COMPONENT;\n    if (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n\n    // WebGL2 formats.\n\n    if (p === RedFormat) return gl.RED;\n    if (p === RedIntegerFormat) return gl.RED_INTEGER;\n    if (p === RGFormat) return gl.RG;\n    if (p === RGIntegerFormat) return gl.RG_INTEGER;\n    if (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\n\n    // S3TC\n\n    if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n      if (colorSpace === SRGBColorSpace) {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc_srgb');\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n        } else {\n          return null;\n        }\n      } else {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc');\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n        } else {\n          return null;\n        }\n      }\n    }\n\n    // PVRTC\n\n    if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n      if (extension !== null) {\n        if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n        if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n        if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n        if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n      } else {\n        return null;\n      }\n    }\n\n    // ETC1\n\n    if (p === RGB_ETC1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_etc1');\n      if (extension !== null) {\n        return extension.COMPRESSED_RGB_ETC1_WEBGL;\n      } else {\n        return null;\n      }\n    }\n\n    // ETC2\n\n    if (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_etc');\n      if (extension !== null) {\n        if (p === RGB_ETC2_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n        if (p === RGBA_ETC2_EAC_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n      } else {\n        return null;\n      }\n    }\n\n    // ASTC\n\n    if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_astc');\n      if (extension !== null) {\n        if (p === RGBA_ASTC_4x4_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n        if (p === RGBA_ASTC_5x4_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n        if (p === RGBA_ASTC_5x5_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n        if (p === RGBA_ASTC_6x5_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n        if (p === RGBA_ASTC_6x6_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n        if (p === RGBA_ASTC_8x5_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n        if (p === RGBA_ASTC_8x6_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n        if (p === RGBA_ASTC_8x8_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n        if (p === RGBA_ASTC_10x5_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n        if (p === RGBA_ASTC_10x6_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n        if (p === RGBA_ASTC_10x8_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n        if (p === RGBA_ASTC_10x10_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n        if (p === RGBA_ASTC_12x10_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n        if (p === RGBA_ASTC_12x12_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n      } else {\n        return null;\n      }\n    }\n\n    // BPTC\n\n    if (p === RGBA_BPTC_Format) {\n      extension = extensions.get('EXT_texture_compression_bptc');\n      if (extension !== null) {\n        if (p === RGBA_BPTC_Format) return colorSpace === SRGBColorSpace ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n      } else {\n        return null;\n      }\n    }\n\n    // RGTC\n\n    if (p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format) {\n      extension = extensions.get('EXT_texture_compression_rgtc');\n      if (extension !== null) {\n        if (p === RGBA_BPTC_Format) return extension.COMPRESSED_RED_RGTC1_EXT;\n        if (p === SIGNED_RED_RGTC1_Format) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n        if (p === RED_GREEN_RGTC2_Format) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n        if (p === SIGNED_RED_GREEN_RGTC2_Format) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n      } else {\n        return null;\n      }\n    }\n\n    //\n\n    if (p === UnsignedInt248Type) {\n      return gl.UNSIGNED_INT_24_8;\n    }\n\n    // if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n    return gl[p] !== undefined ? gl[p] : null;\n  }\n}\nexport default WebGLUtils;","map":{"version":3,"names":["RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGB_PVRTC_4BPPV1_Format","RGBA_S3TC_DXT5_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT1_Format","RGB_S3TC_DXT1_Format","DepthFormat","DepthStencilFormat","LuminanceAlphaFormat","LuminanceFormat","RedFormat","RGBAFormat","AlphaFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","HalfFloatType","FloatType","UnsignedIntType","IntType","UnsignedShortType","ShortType","ByteType","UnsignedInt248Type","UnsignedShort5551Type","UnsignedShort4444Type","UnsignedByteType","RGBA_BPTC_Format","_SRGBAFormat","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","SRGBColorSpace","NoColorSpace","WebGLUtils","constructor","backend","gl","extensions","convert","p","colorSpace","extension","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT","ALPHA","RGBA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","RED","RED_INTEGER","RG","RG_INTEGER","RGBA_INTEGER","get","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","undefined"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/renderers/webgl/utils/WebGLUtils.js"],"sourcesContent":["import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBAFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, RGBA_BPTC_Format, _SRGBAFormat, RED_RGTC1_Format, SIGNED_RED_RGTC1_Format, RED_GREEN_RGTC2_Format, SIGNED_RED_GREEN_RGTC2_Format, SRGBColorSpace, NoColorSpace } from 'three';\n\nclass WebGLUtils {\n\n\tconstructor( backend ) {\n\n\t\tthis.backend = backend;\n\n\t\tthis.gl = this.backend.gl;\n\t\tthis.extensions = backend.extensions;\n\n\t}\n\n\tconvert( p, colorSpace = NoColorSpace ) {\n\n\t\tconst { gl, extensions } = this;\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\treturn gl.HALF_FLOAT;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( colorSpace === SRGBColorSpace ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( colorSpace === SRGBColorSpace ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\treturn gl.UNSIGNED_INT_24_8;\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n}\n\nexport default WebGLUtils;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}