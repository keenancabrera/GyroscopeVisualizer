{"ast":null,"code":"import BRDF_Lambert from './BSDF/BRDF_Lambert.js';\nimport BRDF_GGX from './BSDF/BRDF_GGX.js';\nimport DFGApprox from './BSDF/DFGApprox.js';\nimport EnvironmentBRDF from './BSDF/EnvironmentBRDF.js';\nimport F_Schlick from './BSDF/F_Schlick.js';\nimport Schlick_to_F0 from './BSDF/Schlick_to_F0.js';\nimport BRDF_Sheen from './BSDF/BRDF_Sheen.js';\nimport LightingModel from '../core/LightingModel.js';\nimport { diffuseColor, specularColor, roughness, clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness } from '../core/PropertyNode.js';\nimport { transformedNormalView, transformedClearcoatNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { float, vec3, mat3 } from '../shadernode/ShaderNode.js';\nimport { cond } from '../math/CondNode.js';\nimport { mix, smoothstep } from '../math/MathNode.js';\n\n//\n// Iridescence\n//\n\n// XYZ to linear-sRGB color space\nconst XYZ_TO_REC709 = mat3(3.2404542, -0.9692660, 0.0556434, -1.5371385, 1.8760108, -0.2040259, -0.4985314, 0.0415560, 1.0572252);\n\n// Assume air interface for top\n// Note: We don't handle the case fresnel0 == 1\nconst Fresnel0ToIor = fresnel0 => {\n  const sqrtF0 = fresnel0.sqrt();\n  return vec3(1.0).add(sqrtF0).div(vec3(1.0).sub(sqrtF0));\n};\n\n// ior is a value between 1.0 and 3.0. 1.0 is air interface\nconst IorToFresnel0 = (transmittedIor, incidentIor) => {\n  return transmittedIor.sub(incidentIor).div(transmittedIor.add(incidentIor)).pow2();\n};\n\n// Fresnel equations for dielectric/dielectric interfaces.\n// Ref: https://belcour.github.io/blog/research/2017/05/01/brdf-thin-film.html\n// Evaluation XYZ sensitivity curves in Fourier space\nconst evalSensitivity = (OPD, shift) => {\n  const phase = OPD.mul(2.0 * Math.PI * 1.0e-9);\n  const val = vec3(5.4856e-13, 4.4201e-13, 5.2481e-13);\n  const pos = vec3(1.6810e+06, 1.7953e+06, 2.2084e+06);\n  const VAR = vec3(4.3278e+09, 9.3046e+09, 6.6121e+09);\n  const x = float(9.7470e-14 * Math.sqrt(2.0 * Math.PI * 4.5282e+09)).mul(phase.mul(2.2399e+06).add(shift.x).cos()).mul(phase.pow2().mul(-4.5282e+09).exp());\n  let xyz = val.mul(VAR.mul(2.0 * Math.PI).sqrt()).mul(pos.mul(phase).add(shift).cos()).mul(phase.pow2().negate().mul(VAR).exp());\n  xyz = vec3(xyz.x.add(x), xyz.y, xyz.z).div(1.0685e-7);\n  const rgb = XYZ_TO_REC709.mul(xyz);\n  return rgb;\n};\nconst evalIridescence = (outsideIOR, eta2, cosTheta1, thinFilmThickness, baseF0) => {\n  // Force iridescenceIOR -> outsideIOR when thinFilmThickness -> 0.0\n  const iridescenceIOR = mix(outsideIOR, eta2, smoothstep(0.0, 0.03, thinFilmThickness));\n  // Evaluate the cosTheta on the base layer (Snell law)\n  const sinTheta2Sq = outsideIOR.div(iridescenceIOR).pow2().mul(float(1).sub(cosTheta1.pow2()));\n\n  // Handle TIR:\n  const cosTheta2Sq = float(1).sub(sinTheta2Sq);\n  /*if ( cosTheta2Sq < 0.0 ) {\n  \t\t\treturn vec3( 1.0 );\n  \t}*/\n\n  const cosTheta2 = cosTheta2Sq.sqrt();\n\n  // First interface\n  const R0 = IorToFresnel0(iridescenceIOR, outsideIOR);\n  const R12 = F_Schlick({\n    f0: R0,\n    f90: 1.0,\n    dotVH: cosTheta1\n  });\n  //const R21 = R12;\n  const T121 = R12.oneMinus();\n  const phi12 = iridescenceIOR.lessThan(outsideIOR).cond(Math.PI, 0.0);\n  const phi21 = float(Math.PI).sub(phi12);\n\n  // Second interface\n  const baseIOR = Fresnel0ToIor(baseF0.clamp(0.0, 0.9999)); // guard against 1.0\n  const R1 = IorToFresnel0(baseIOR, iridescenceIOR.vec3());\n  const R23 = F_Schlick({\n    f0: R1,\n    f90: 1.0,\n    dotVH: cosTheta2\n  });\n  const phi23 = vec3(baseIOR.x.lessThan(iridescenceIOR).cond(Math.PI, 0.0), baseIOR.y.lessThan(iridescenceIOR).cond(Math.PI, 0.0), baseIOR.z.lessThan(iridescenceIOR).cond(Math.PI, 0.0));\n\n  // Phase shift\n  const OPD = iridescenceIOR.mul(thinFilmThickness, cosTheta2, 2.0);\n  const phi = vec3(phi21).add(phi23);\n\n  // Compound terms\n  const R123 = R12.mul(R23).clamp(1e-5, 0.9999);\n  const r123 = R123.sqrt();\n  const Rs = T121.pow2().mul(R23).div(vec3(1.0).sub(R123));\n\n  // Reflectance term for m = 0 (DC term amplitude)\n  const C0 = R12.add(Rs);\n  let I = C0;\n\n  // Reflectance term for m > 0 (pairs of diracs)\n  let Cm = Rs.sub(T121);\n  for (let m = 1; m <= 2; ++m) {\n    Cm = Cm.mul(r123);\n    const Sm = evalSensitivity(float(m).mul(OPD), float(m).mul(phi)).mul(2.0);\n    I = I.add(Cm.mul(Sm));\n  }\n\n  // Since out of gamut colors might be produced, negative color values are clamped to 0.\n  return I.max(vec3(0.0));\n};\n\n//\n//\tSheen\n//\n\n// This is a curve-fit approxmation to the \"Charlie sheen\" BRDF integrated over the hemisphere from\n// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\". The analysis can be found\n// in the Sheen section of https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\nconst IBLSheenBRDF = (normal, viewDir, roughness) => {\n  const dotNV = normal.dot(viewDir).saturate();\n  const r2 = roughness.pow2();\n  const a = cond(roughness.lessThan(0.25), float(-339.2).mul(r2).add(float(161.4).mul(roughness)).sub(25.9), float(-8.48).mul(r2).add(float(14.3).mul(roughness)).sub(9.95));\n  const b = cond(roughness.lessThan(0.25), float(44.0).mul(r2).sub(float(23.7).mul(roughness)).add(3.26), float(1.97).mul(r2).sub(float(3.27).mul(roughness)).add(0.72));\n  const DG = cond(roughness.lessThan(0.25), 0.0, float(0.1).mul(roughness).sub(0.025)).add(a.mul(dotNV).add(b).exp());\n  return DG.mul(1.0 / Math.PI).saturate();\n};\nconst clearcoatF0 = vec3(0.04);\nconst clearcoatF90 = vec3(1);\n\n//\n\nclass PhysicalLightingModel extends LightingModel {\n  constructor(clearcoat = true, sheen = true, iridescence = true) {\n    super();\n    this.clearcoat = clearcoat;\n    this.sheen = sheen;\n    this.iridescence = iridescence;\n    this.clearcoatRadiance = null;\n    this.clearcoatSpecular = null;\n    this.sheenSpecular = null;\n    this.iridescenceFresnel = null;\n    this.iridescenceF0 = null;\n  }\n  init({\n    reflectedLight\n  }) {\n    if (this.clearcoat === true) {\n      this.clearcoatRadiance = vec3().temp();\n      this.clearcoatSpecular = vec3().temp();\n      const dotNVcc = transformedClearcoatNormalView.dot(positionViewDirection).clamp();\n      const Fcc = F_Schlick({\n        dotVH: dotNVcc,\n        f0: clearcoatF0,\n        f90: clearcoatF90\n      });\n      const outgoingLight = reflectedLight.total;\n      const clearcoatLight = outgoingLight.mul(clearcoat.mul(Fcc).oneMinus()).add(this.clearcoatSpecular.mul(clearcoat));\n      outgoingLight.assign(clearcoatLight);\n    }\n    if (this.sheen === true) {\n      this.sheenSpecular = vec3().temp();\n      const outgoingLight = reflectedLight.total;\n      const sheenEnergyComp = sheen.r.max(sheen.g).max(sheen.b).mul(0.157).oneMinus();\n      const sheenLight = outgoingLight.mul(sheenEnergyComp).add(this.sheenSpecular);\n      outgoingLight.assign(sheenLight);\n    }\n    if (this.iridescence === true) {\n      const dotNVi = transformedNormalView.dot(positionViewDirection).clamp();\n      this.iridescenceFresnel = evalIridescence(float(1.0), iridescenceIOR, dotNVi, iridescenceThickness, specularColor);\n      this.iridescenceF0 = Schlick_to_F0({\n        f: this.iridescenceFresnel,\n        f90: 1.0,\n        dotVH: dotNVi\n      });\n    }\n  }\n\n  // Fdez-Ag√ºera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n  // Approximates multiscattering in order to preserve energy.\n  // http://www.jcgt.org/published/0008/01/03/\n\n  computeMultiscattering(singleScatter, multiScatter, specularF90 = float(1)) {\n    const fab = DFGApprox({\n      roughness\n    });\n    const Fr = this.iridescenceF0 ? iridescence.mix(specularColor, this.iridescenceF0) : specularColor;\n    const FssEss = Fr.mul(fab.x).add(specularF90.mul(fab.y));\n    const Ess = fab.x.add(fab.y);\n    const Ems = Ess.oneMinus();\n    const Favg = specularColor.add(specularColor.oneMinus().mul(0.047619)); // 1/21\n    const Fms = FssEss.mul(Favg).div(Ems.mul(Favg).oneMinus());\n    singleScatter.addAssign(FssEss);\n    multiScatter.addAssign(Fms.mul(Ems));\n  }\n  direct({\n    lightDirection,\n    lightColor,\n    reflectedLight\n  }) {\n    const dotNL = transformedNormalView.dot(lightDirection).clamp();\n    const irradiance = dotNL.mul(lightColor);\n    if (this.sheen === true) {\n      this.sheenSpecular.addAssign(irradiance.mul(BRDF_Sheen({\n        lightDirection\n      })));\n    }\n    if (this.clearcoat === true) {\n      const dotNLcc = transformedClearcoatNormalView.dot(lightDirection).clamp();\n      const ccIrradiance = dotNLcc.mul(lightColor);\n      this.clearcoatSpecular.addAssign(ccIrradiance.mul(BRDF_GGX({\n        lightDirection,\n        f0: clearcoatF0,\n        f90: clearcoatF90,\n        roughness: clearcoatRoughness,\n        normalView: transformedClearcoatNormalView\n      })));\n    }\n    reflectedLight.directDiffuse.addAssign(irradiance.mul(BRDF_Lambert({\n      diffuseColor: diffuseColor.rgb\n    })));\n    reflectedLight.directSpecular.addAssign(irradiance.mul(BRDF_GGX({\n      lightDirection,\n      f0: specularColor,\n      f90: 1,\n      roughness,\n      iridescence: this.iridescence,\n      iridescenceFresnel: this.iridescenceFresnel\n    })));\n  }\n  indirectDiffuse({\n    irradiance,\n    reflectedLight\n  }) {\n    reflectedLight.indirectDiffuse.addAssign(irradiance.mul(BRDF_Lambert({\n      diffuseColor\n    })));\n  }\n  indirectSpecular({\n    radiance,\n    iblIrradiance,\n    reflectedLight\n  }) {\n    if (this.sheen === true) {\n      this.sheenSpecular.addAssign(iblIrradiance.mul(sheen, IBLSheenBRDF(transformedNormalView, positionViewDirection, sheenRoughness)));\n    }\n    if (this.clearcoat === true) {\n      const dotNVcc = transformedClearcoatNormalView.dot(positionViewDirection).clamp();\n      const clearcoatEnv = EnvironmentBRDF({\n        dotNV: dotNVcc,\n        specularColor: clearcoatF0,\n        specularF90: clearcoatF90,\n        roughness: clearcoatRoughness\n      });\n      this.clearcoatSpecular.addAssign(this.clearcoatRadiance.mul(clearcoatEnv));\n    }\n\n    // Both indirect specular and indirect diffuse light accumulate here\n\n    const singleScattering = vec3().temp();\n    const multiScattering = vec3().temp();\n    const cosineWeightedIrradiance = iblIrradiance.mul(1 / Math.PI);\n    this.computeMultiscattering(singleScattering, multiScattering);\n    const totalScattering = singleScattering.add(multiScattering);\n    const diffuse = diffuseColor.mul(totalScattering.r.max(totalScattering.g).max(totalScattering.b).oneMinus());\n    reflectedLight.indirectSpecular.addAssign(radiance.mul(singleScattering));\n    reflectedLight.indirectSpecular.addAssign(multiScattering.mul(cosineWeightedIrradiance));\n    reflectedLight.indirectDiffuse.addAssign(diffuse.mul(cosineWeightedIrradiance));\n  }\n  ambientOcclusion({\n    ambientOcclusion,\n    reflectedLight\n  }) {\n    const dotNV = transformedNormalView.dot(positionViewDirection).clamp(); // @ TODO: Move to core dotNV\n\n    const aoNV = dotNV.add(ambientOcclusion);\n    const aoExp = roughness.mul(-16.0).oneMinus().negate().exp2();\n    const aoNode = ambientOcclusion.sub(aoNV.pow(aoExp).oneMinus()).clamp();\n    reflectedLight.indirectDiffuse.mulAssign(ambientOcclusion);\n    reflectedLight.indirectSpecular.mulAssign(aoNode);\n  }\n}\nexport default PhysicalLightingModel;","map":{"version":3,"names":["BRDF_Lambert","BRDF_GGX","DFGApprox","EnvironmentBRDF","F_Schlick","Schlick_to_F0","BRDF_Sheen","LightingModel","diffuseColor","specularColor","roughness","clearcoat","clearcoatRoughness","sheen","sheenRoughness","iridescence","iridescenceIOR","iridescenceThickness","transformedNormalView","transformedClearcoatNormalView","positionViewDirection","float","vec3","mat3","cond","mix","smoothstep","XYZ_TO_REC709","Fresnel0ToIor","fresnel0","sqrtF0","sqrt","add","div","sub","IorToFresnel0","transmittedIor","incidentIor","pow2","evalSensitivity","OPD","shift","phase","mul","Math","PI","val","pos","VAR","x","cos","exp","xyz","negate","y","z","rgb","evalIridescence","outsideIOR","eta2","cosTheta1","thinFilmThickness","baseF0","sinTheta2Sq","cosTheta2Sq","cosTheta2","R0","R12","f0","f90","dotVH","T121","oneMinus","phi12","lessThan","phi21","baseIOR","clamp","R1","R23","phi23","phi","R123","r123","Rs","C0","I","Cm","m","Sm","max","IBLSheenBRDF","normal","viewDir","dotNV","dot","saturate","r2","a","b","DG","clearcoatF0","clearcoatF90","PhysicalLightingModel","constructor","clearcoatRadiance","clearcoatSpecular","sheenSpecular","iridescenceFresnel","iridescenceF0","init","reflectedLight","temp","dotNVcc","Fcc","outgoingLight","total","clearcoatLight","assign","sheenEnergyComp","r","g","sheenLight","dotNVi","f","computeMultiscattering","singleScatter","multiScatter","specularF90","fab","Fr","FssEss","Ess","Ems","Favg","Fms","addAssign","direct","lightDirection","lightColor","dotNL","irradiance","dotNLcc","ccIrradiance","normalView","directDiffuse","directSpecular","indirectDiffuse","indirectSpecular","radiance","iblIrradiance","clearcoatEnv","singleScattering","multiScattering","cosineWeightedIrradiance","totalScattering","diffuse","ambientOcclusion","aoNV","aoExp","exp2","aoNode","pow","mulAssign"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/functions/PhysicalLightingModel.js"],"sourcesContent":["import BRDF_Lambert from './BSDF/BRDF_Lambert.js';\nimport BRDF_GGX from './BSDF/BRDF_GGX.js';\nimport DFGApprox from './BSDF/DFGApprox.js';\nimport EnvironmentBRDF from './BSDF/EnvironmentBRDF.js';\nimport F_Schlick from './BSDF/F_Schlick.js';\nimport Schlick_to_F0 from './BSDF/Schlick_to_F0.js';\nimport BRDF_Sheen from './BSDF/BRDF_Sheen.js';\nimport LightingModel from '../core/LightingModel.js';\nimport { diffuseColor, specularColor, roughness, clearcoat, clearcoatRoughness, sheen, sheenRoughness, iridescence, iridescenceIOR, iridescenceThickness } from '../core/PropertyNode.js';\nimport { transformedNormalView, transformedClearcoatNormalView } from '../accessors/NormalNode.js';\nimport { positionViewDirection } from '../accessors/PositionNode.js';\nimport { float, vec3, mat3 } from '../shadernode/ShaderNode.js';\nimport { cond } from '../math/CondNode.js';\nimport { mix, smoothstep } from '../math/MathNode.js';\n\n//\n// Iridescence\n//\n\n// XYZ to linear-sRGB color space\nconst XYZ_TO_REC709 = mat3(\n\t3.2404542, - 0.9692660, 0.0556434,\n\t- 1.5371385, 1.8760108, - 0.2040259,\n\t- 0.4985314, 0.0415560, 1.0572252\n);\n\n// Assume air interface for top\n// Note: We don't handle the case fresnel0 == 1\nconst Fresnel0ToIor = ( fresnel0 ) => {\n\n\tconst sqrtF0 = fresnel0.sqrt();\n\treturn vec3( 1.0 ).add( sqrtF0 ).div( vec3( 1.0 ).sub( sqrtF0 ) );\n\n};\n\n// ior is a value between 1.0 and 3.0. 1.0 is air interface\nconst IorToFresnel0 = ( transmittedIor, incidentIor ) => {\n\n\treturn transmittedIor.sub( incidentIor ).div( transmittedIor.add( incidentIor ) ).pow2();\n\n};\n\n// Fresnel equations for dielectric/dielectric interfaces.\n// Ref: https://belcour.github.io/blog/research/2017/05/01/brdf-thin-film.html\n// Evaluation XYZ sensitivity curves in Fourier space\nconst evalSensitivity = ( OPD, shift ) => {\n\n\tconst phase = OPD.mul( 2.0 * Math.PI * 1.0e-9 );\n\tconst val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\tconst pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\tconst VAR = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\n\tconst x = float( 9.7470e-14 * Math.sqrt( 2.0 * Math.PI * 4.5282e+09 ) ).mul( phase.mul( 2.2399e+06 ).add( shift.x ).cos() ).mul( phase.pow2().mul( - 4.5282e+09 ).exp() );\n\n\tlet xyz = val.mul( VAR.mul( 2.0 * Math.PI ).sqrt() ).mul( pos.mul( phase ).add( shift ).cos() ).mul( phase.pow2().negate().mul( VAR ).exp() );\n\txyz = vec3( xyz.x.add( x ), xyz.y, xyz.z ).div( 1.0685e-7 );\n\n\tconst rgb = XYZ_TO_REC709.mul( xyz );\n\treturn rgb;\n\n};\n\nconst evalIridescence = ( outsideIOR, eta2, cosTheta1, thinFilmThickness, baseF0 ) => {\n\n\t// Force iridescenceIOR -> outsideIOR when thinFilmThickness -> 0.0\n\tconst iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t// Evaluate the cosTheta on the base layer (Snell law)\n\tconst sinTheta2Sq = outsideIOR.div( iridescenceIOR ).pow2().mul( float( 1 ).sub( cosTheta1.pow2() ) );\n\n\t// Handle TIR:\n\tconst cosTheta2Sq = float( 1 ).sub( sinTheta2Sq );\n\t/*if ( cosTheta2Sq < 0.0 ) {\n\n\t\t\treturn vec3( 1.0 );\n\n\t}*/\n\n\tconst cosTheta2 = cosTheta2Sq.sqrt();\n\n\t// First interface\n\tconst R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\tconst R12 = F_Schlick( { f0: R0, f90: 1.0, dotVH: cosTheta1 } );\n\t//const R21 = R12;\n\tconst T121 = R12.oneMinus();\n\tconst phi12 = iridescenceIOR.lessThan( outsideIOR ).cond( Math.PI, 0.0 );\n\tconst phi21 = float( Math.PI ).sub( phi12 );\n\n\t// Second interface\n\tconst baseIOR = Fresnel0ToIor( baseF0.clamp( 0.0, 0.9999 ) ); // guard against 1.0\n\tconst R1 = IorToFresnel0( baseIOR, iridescenceIOR.vec3() );\n\tconst R23 = F_Schlick( { f0: R1, f90: 1.0, dotVH: cosTheta2 } );\n\tconst phi23 = vec3(\n\t\tbaseIOR.x.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 ),\n\t\tbaseIOR.y.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 ),\n\t\tbaseIOR.z.lessThan( iridescenceIOR ).cond( Math.PI, 0.0 )\n\t);\n\n\t// Phase shift\n\tconst OPD = iridescenceIOR.mul( thinFilmThickness, cosTheta2, 2.0 );\n\tconst phi = vec3( phi21 ).add( phi23 );\n\n\t// Compound terms\n\tconst R123 = R12.mul( R23 ).clamp( 1e-5, 0.9999 );\n\tconst r123 = R123.sqrt();\n\tconst Rs = T121.pow2().mul( R23 ).div( vec3( 1.0 ).sub( R123 ) );\n\n\t// Reflectance term for m = 0 (DC term amplitude)\n\tconst C0 = R12.add( Rs );\n\tlet I = C0;\n\n\t// Reflectance term for m > 0 (pairs of diracs)\n\tlet Cm = Rs.sub( T121 );\n\tfor ( let m = 1; m <= 2; ++ m ) {\n\n\t\tCm = Cm.mul( r123 );\n\t\tconst Sm = evalSensitivity( float( m ).mul( OPD ), float( m ).mul( phi ) ).mul( 2.0 );\n\t\tI = I.add( Cm.mul( Sm ) );\n\n\t}\n\n\t// Since out of gamut colors might be produced, negative color values are clamped to 0.\n\treturn I.max( vec3( 0.0 ) );\n\n};\n\n//\n//\tSheen\n//\n\n// This is a curve-fit approxmation to the \"Charlie sheen\" BRDF integrated over the hemisphere from\n// Estevez and Kulla 2017, \"Production Friendly Microfacet Sheen BRDF\". The analysis can be found\n// in the Sheen section of https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing\nconst IBLSheenBRDF = ( normal, viewDir, roughness ) => {\n\n\tconst dotNV = normal.dot( viewDir ).saturate();\n\n\tconst r2 = roughness.pow2();\n\n\tconst a = cond(\n\t\troughness.lessThan( 0.25 ),\n\t\tfloat( - 339.2 ).mul( r2 ).add( float( 161.4 ).mul( roughness ) ).sub( 25.9 ),\n\t\tfloat( - 8.48 ).mul( r2 ).add( float( 14.3 ).mul( roughness ) ).sub( 9.95 )\n\t);\n\n\tconst b = cond(\n\t\troughness.lessThan( 0.25 ),\n\t\tfloat( 44.0 ).mul( r2 ).sub( float( 23.7 ).mul( roughness ) ).add( 3.26 ),\n\t\tfloat( 1.97 ).mul( r2 ).sub( float( 3.27 ).mul( roughness ) ).add( 0.72 )\n\t);\n\n\tconst DG = cond( roughness.lessThan( 0.25 ), 0.0, float( 0.1 ).mul( roughness ).sub( 0.025 ) ).add( a.mul( dotNV ).add( b ).exp() );\n\n\treturn DG.mul( 1.0 / Math.PI ).saturate();\n\n};\n\nconst clearcoatF0 = vec3( 0.04 );\nconst clearcoatF90 = vec3( 1 );\n\n//\n\nclass PhysicalLightingModel extends LightingModel {\n\n\tconstructor( clearcoat = true, sheen = true, iridescence = true ) {\n\n\t\tsuper();\n\n\t\tthis.clearcoat = clearcoat;\n\t\tthis.sheen = sheen;\n\t\tthis.iridescence = iridescence;\n\n\t\tthis.clearcoatRadiance = null;\n\t\tthis.clearcoatSpecular = null;\n\t\tthis.sheenSpecular = null;\n\t\tthis.iridescenceFresnel = null;\n\t\tthis.iridescenceF0 = null;\n\n\t}\n\n\tinit( { reflectedLight } ) {\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tthis.clearcoatRadiance = vec3().temp();\n\t\t\tthis.clearcoatSpecular = vec3().temp();\n\n\t\t\tconst dotNVcc = transformedClearcoatNormalView.dot( positionViewDirection ).clamp();\n\n\t\t\tconst Fcc = F_Schlick( {\n\t\t\t\tdotVH: dotNVcc,\n\t\t\t\tf0: clearcoatF0,\n\t\t\t\tf90: clearcoatF90\n\t\t\t} );\n\n\t\t\tconst outgoingLight = reflectedLight.total;\n\t\t\tconst clearcoatLight = outgoingLight.mul( clearcoat.mul( Fcc ).oneMinus() ).add( this.clearcoatSpecular.mul( clearcoat ) );\n\n\t\t\toutgoingLight.assign( clearcoatLight );\n\n\t\t}\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecular = vec3().temp();\n\n\t\t\tconst outgoingLight = reflectedLight.total;\n\n\t\t\tconst sheenEnergyComp = sheen.r.max( sheen.g ).max( sheen.b ).mul( 0.157 ).oneMinus();\n\t\t\tconst sheenLight = outgoingLight.mul( sheenEnergyComp ).add( this.sheenSpecular );\n\n\t\t\toutgoingLight.assign( sheenLight );\n\n\t\t}\n\n\t\tif ( this.iridescence === true ) {\n\n\t\t\tconst dotNVi = transformedNormalView.dot( positionViewDirection ).clamp();\n\n\t\t\tthis.iridescenceFresnel = evalIridescence( float( 1.0 ), iridescenceIOR, dotNVi, iridescenceThickness, specularColor );\n\t\t\tthis.iridescenceF0 = Schlick_to_F0( { f: this.iridescenceFresnel, f90: 1.0, dotVH: dotNVi } );\n\n\t\t}\n\n\t}\n\n\t// Fdez-Ag√ºera's \"Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting\"\n\t// Approximates multiscattering in order to preserve energy.\n\t// http://www.jcgt.org/published/0008/01/03/\n\n\tcomputeMultiscattering( singleScatter, multiScatter, specularF90 = float( 1 ) ) {\n\n\t\tconst fab = DFGApprox( { roughness } );\n\n\t\tconst Fr = this.iridescenceF0 ? iridescence.mix( specularColor, this.iridescenceF0 ) : specularColor;\n\n\t\tconst FssEss = Fr.mul( fab.x ).add( specularF90.mul( fab.y ) );\n\n\t\tconst Ess = fab.x.add( fab.y );\n\t\tconst Ems = Ess.oneMinus();\n\n\t\tconst Favg = specularColor.add( specularColor.oneMinus().mul( 0.047619 ) ); // 1/21\n\t\tconst Fms = FssEss.mul( Favg ).div( Ems.mul( Favg ).oneMinus() );\n\n\t\tsingleScatter.addAssign( FssEss );\n\t\tmultiScatter.addAssign( Fms.mul( Ems ) );\n\n\t}\n\n\tdirect( { lightDirection, lightColor, reflectedLight } ) {\n\n\t\tconst dotNL = transformedNormalView.dot( lightDirection ).clamp();\n\t\tconst irradiance = dotNL.mul( lightColor );\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecular.addAssign( irradiance.mul( BRDF_Sheen( { lightDirection } ) ) );\n\n\t\t}\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tconst dotNLcc = transformedClearcoatNormalView.dot( lightDirection ).clamp();\n\t\t\tconst ccIrradiance = dotNLcc.mul( lightColor );\n\n\t\t\tthis.clearcoatSpecular.addAssign( ccIrradiance.mul( BRDF_GGX( { lightDirection, f0: clearcoatF0, f90: clearcoatF90, roughness: clearcoatRoughness, normalView: transformedClearcoatNormalView } ) ) );\n\n\t\t}\n\n\t\treflectedLight.directDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor: diffuseColor.rgb } ) ) );\n\n\t\treflectedLight.directSpecular.addAssign( irradiance.mul( BRDF_GGX( { lightDirection, f0: specularColor, f90: 1, roughness, iridescence: this.iridescence, iridescenceFresnel: this.iridescenceFresnel } ) ) );\n\n\t}\n\n\tindirectDiffuse( { irradiance, reflectedLight } ) {\n\n\t\treflectedLight.indirectDiffuse.addAssign( irradiance.mul( BRDF_Lambert( { diffuseColor } ) ) );\n\n\t}\n\n\tindirectSpecular( { radiance, iblIrradiance, reflectedLight, } ) {\n\n\t\tif ( this.sheen === true ) {\n\n\t\t\tthis.sheenSpecular.addAssign( iblIrradiance.mul(\n\t\t\t\tsheen,\n\t\t\t\tIBLSheenBRDF( transformedNormalView, positionViewDirection, sheenRoughness )\n\t\t\t) );\n\n\t\t}\n\n\t\tif ( this.clearcoat === true ) {\n\n\t\t\tconst dotNVcc = transformedClearcoatNormalView.dot( positionViewDirection ).clamp();\n\n\t\t\tconst clearcoatEnv = EnvironmentBRDF( {\n\t\t\t\tdotNV: dotNVcc,\n\t\t\t\tspecularColor: clearcoatF0,\n\t\t\t\tspecularF90: clearcoatF90,\n\t\t\t\troughness: clearcoatRoughness\n\t\t\t} );\n\n\t\t\tthis.clearcoatSpecular.addAssign( this.clearcoatRadiance.mul( clearcoatEnv ) );\n\n\t\t}\n\n\t\t// Both indirect specular and indirect diffuse light accumulate here\n\n\t\tconst singleScattering = vec3().temp();\n\t\tconst multiScattering = vec3().temp();\n\t\tconst cosineWeightedIrradiance = iblIrradiance.mul( 1 / Math.PI );\n\n\t\tthis.computeMultiscattering( singleScattering, multiScattering );\n\n\t\tconst totalScattering = singleScattering.add( multiScattering );\n\n\t\tconst diffuse = diffuseColor.mul( totalScattering.r.max( totalScattering.g ).max( totalScattering.b ).oneMinus() );\n\n\t\treflectedLight.indirectSpecular.addAssign( radiance.mul( singleScattering ) );\n\t\treflectedLight.indirectSpecular.addAssign( multiScattering.mul( cosineWeightedIrradiance ) );\n\n\t\treflectedLight.indirectDiffuse.addAssign( diffuse.mul( cosineWeightedIrradiance ) );\n\n\t}\n\n\tambientOcclusion( { ambientOcclusion, reflectedLight } ) {\n\n\t\tconst dotNV = transformedNormalView.dot( positionViewDirection ).clamp(); // @ TODO: Move to core dotNV\n\n\t\tconst aoNV = dotNV.add( ambientOcclusion );\n\t\tconst aoExp = roughness.mul( - 16.0 ).oneMinus().negate().exp2();\n\n\t\tconst aoNode = ambientOcclusion.sub( aoNV.pow( aoExp ).oneMinus() ).clamp();\n\n\t\treflectedLight.indirectDiffuse.mulAssign( ambientOcclusion );\n\n\t\treflectedLight.indirectSpecular.mulAssign( aoNode );\n\n\t}\n\n}\n\nexport default PhysicalLightingModel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}