{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { scriptableValue } from './ScriptableValueNode.js';\nimport { addNodeElement, nodeProxy, float } from '../shadernode/ShaderNode.js';\nclass Resources extends Map {\n  get(key, callback = null, ...params) {\n    if (this.has(key)) return super.get(key);\n    if (callback !== null) {\n      const value = callback(...params);\n      this.set(key, value);\n      return value;\n    }\n  }\n}\nclass Parameters {\n  constructor(scriptableNode) {\n    this.scriptableNode = scriptableNode;\n  }\n  get parameters() {\n    return this.scriptableNode.parameters;\n  }\n  get layout() {\n    return this.scriptableNode.getLayout();\n  }\n  getInputLayout(id) {\n    return this.scriptableNode.getInputLayout(id);\n  }\n  get(name) {\n    const param = this.parameters[name];\n    const value = param ? param.getValue() : null;\n    return value;\n  }\n}\nexport const global = new Resources();\nclass ScriptableNode extends Node {\n  constructor(codeNode = null, parameters = {}) {\n    super();\n    this.codeNode = codeNode;\n    this.parameters = parameters;\n    this._local = new Resources();\n    this._output = scriptableValue();\n    this._outputs = {};\n    this._source = this.source;\n    this._method = null;\n    this._object = null;\n    this._value = null;\n    this._needsOutputUpdate = true;\n    this.onRefresh = this.onRefresh.bind(this);\n    this.isScriptableNode = true;\n  }\n  get source() {\n    return this.codeNode ? this.codeNode.code : '';\n  }\n  setLocal(name, value) {\n    return this._local.set(name, value);\n  }\n  getLocal(name) {\n    return this._local.get(name);\n  }\n  onRefresh() {\n    this._refresh();\n  }\n  getInputLayout(id) {\n    for (const element of this.getLayout()) {\n      if (element.inputType && (element.id === id || element.name === id)) {\n        return element;\n      }\n    }\n  }\n  getOutputLayout(id) {\n    for (const element of this.getLayout()) {\n      if (element.outputType && (element.id === id || element.name === id)) {\n        return element;\n      }\n    }\n  }\n  setOutput(name, value) {\n    const outputs = this._outputs;\n    if (outputs[name] === undefined) {\n      outputs[name] = scriptableValue(value);\n    } else {\n      outputs[name].value = value;\n    }\n    return this;\n  }\n  getOutput(name) {\n    return this._outputs[name];\n  }\n  getParameter(name) {\n    return this.parameters[name];\n  }\n  setParameter(name, value) {\n    const parameters = this.parameters;\n    if (value && value.isScriptableNode) {\n      this.deleteParameter(name);\n      parameters[name] = value;\n      parameters[name].getDefaultOutput().events.addEventListener('refresh', this.onRefresh);\n    } else if (value && value.isScriptableValueNode) {\n      this.deleteParameter(name);\n      parameters[name] = value;\n      parameters[name].events.addEventListener('refresh', this.onRefresh);\n    } else if (parameters[name] === undefined) {\n      parameters[name] = scriptableValue(value);\n      parameters[name].events.addEventListener('refresh', this.onRefresh);\n    } else {\n      parameters[name].value = value;\n    }\n    return this;\n  }\n  getValue() {\n    return this.getDefaultOutput().getValue();\n  }\n  deleteParameter(name) {\n    let valueNode = this.parameters[name];\n    if (valueNode) {\n      if (valueNode.isScriptableNode) valueNode = valueNode.getDefaultOutput();\n      valueNode.events.removeEventListener('refresh', this.onRefresh);\n    }\n    return this;\n  }\n  clearParameters() {\n    for (const name of Object.keys(this.parameters)) {\n      this.deleteParameter(name);\n    }\n    this.needsUpdate = true;\n    return this;\n  }\n  call(name, ...params) {\n    const object = this.getObject();\n    const method = object[name];\n    if (typeof method === 'function') {\n      return method(...params);\n    }\n  }\n  async callAsync(name, ...params) {\n    const object = this.getObject();\n    const method = object[name];\n    if (typeof method === 'function') {\n      return method.constructor.name === 'AsyncFunction' ? await method(...params) : method(...params);\n    }\n  }\n  getNodeType(builder) {\n    return this.getDefaultOutputNode().getNodeType(builder);\n  }\n  refresh(output = null) {\n    if (output !== null) {\n      this.getOutput(output).refresh();\n    } else {\n      this._refresh();\n    }\n  }\n  getObject() {\n    if (this.needsUpdate) this.dispose();\n    if (this._object !== null) return this._object;\n\n    //\n\n    const refresh = () => this.refresh();\n    const setOutput = (id, value) => this.setOutput(id, value);\n    const parameters = new Parameters(this);\n    const THREE = global.get('THREE');\n    const TSL = global.get('TSL');\n    const method = this.getMethod(this.codeNode);\n    const params = [parameters, this._local, global, refresh, setOutput, THREE, TSL];\n    this._object = method(...params);\n    const layout = this._object.layout;\n    if (layout) {\n      if (layout.cache === false) {\n        this._local.clear();\n      }\n\n      // default output\n      this._output.outputType = layout.outputType || null;\n      if (Array.isArray(layout.elements)) {\n        for (const element of layout.elements) {\n          const id = element.id || element.name;\n          if (element.inputType) {\n            if (this.getParameter(id) === undefined) this.setParameter(id, null);\n            this.getParameter(id).inputType = element.inputType;\n          }\n          if (element.outputType) {\n            if (this.getOutput(id) === undefined) this.setOutput(id, null);\n            this.getOutput(id).outputType = element.outputType;\n          }\n        }\n      }\n    }\n    return this._object;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    for (const name in this.parameters) {\n      let valueNode = this.parameters[name];\n      if (valueNode.isScriptableNode) valueNode = valueNode.getDefaultOutput();\n      valueNode.events.addEventListener('refresh', this.onRefresh);\n    }\n  }\n  getLayout() {\n    return this.getObject().layout;\n  }\n  getDefaultOutputNode() {\n    const output = this.getDefaultOutput().value;\n    if (output && output.isNode) {\n      return output;\n    }\n    return float();\n  }\n  getDefaultOutput() {\n    return this._exec()._output;\n  }\n  getMethod() {\n    if (this.needsUpdate) this.dispose();\n    if (this._method !== null) return this._method;\n\n    //\n\n    const parametersProps = ['parameters', 'local', 'global', 'refresh', 'setOutput', 'THREE', 'TSL'];\n    const interfaceProps = ['layout', 'init', 'main', 'dispose'];\n    const properties = interfaceProps.join(', ');\n    const declarations = 'var ' + properties + '; var output = {};\\n';\n    const returns = '\\nreturn { ...output, ' + properties + ' };';\n    const code = declarations + this.codeNode.code + returns;\n\n    //\n\n    this._method = new Function(...parametersProps, code);\n    return this._method;\n  }\n  dispose() {\n    if (this._method === null) return;\n    if (this._object && typeof this._object.dispose === 'function') {\n      this._object.dispose();\n    }\n    this._method = null;\n    this._object = null;\n    this._source = null;\n    this._value = null;\n    this._needsOutputUpdate = true;\n    this._output.value = null;\n    this._outputs = {};\n  }\n  setup() {\n    return this.getDefaultOutputNode();\n  }\n  set needsUpdate(value) {\n    if (value === true) this.dispose();\n  }\n  get needsUpdate() {\n    return this.source !== this._source;\n  }\n  _exec() {\n    if (this.codeNode === null) return this;\n    if (this._needsOutputUpdate === true) {\n      this._value = this.call('main');\n      this._needsOutputUpdate = false;\n    }\n    this._output.value = this._value;\n    return this;\n  }\n  _refresh() {\n    this.needsUpdate = true;\n    this._exec();\n    this._output.refresh();\n  }\n}\nexport default ScriptableNode;\nexport const scriptable = nodeProxy(ScriptableNode);\naddNodeElement('scriptable', scriptable);\naddNodeClass('ScriptableNode', ScriptableNode);","map":{"version":3,"names":["Node","addNodeClass","scriptableValue","addNodeElement","nodeProxy","float","Resources","Map","get","key","callback","params","has","value","set","Parameters","constructor","scriptableNode","parameters","layout","getLayout","getInputLayout","id","name","param","getValue","global","ScriptableNode","codeNode","_local","_output","_outputs","_source","source","_method","_object","_value","_needsOutputUpdate","onRefresh","bind","isScriptableNode","code","setLocal","getLocal","_refresh","element","inputType","getOutputLayout","outputType","setOutput","outputs","undefined","getOutput","getParameter","setParameter","deleteParameter","getDefaultOutput","events","addEventListener","isScriptableValueNode","valueNode","removeEventListener","clearParameters","Object","keys","needsUpdate","call","object","getObject","method","callAsync","getNodeType","builder","getDefaultOutputNode","refresh","output","dispose","THREE","TSL","getMethod","cache","clear","Array","isArray","elements","deserialize","data","isNode","_exec","parametersProps","interfaceProps","properties","join","declarations","returns","Function","setup","scriptable"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/code/ScriptableNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { scriptableValue } from './ScriptableValueNode.js';\nimport { addNodeElement, nodeProxy, float } from '../shadernode/ShaderNode.js';\n\nclass Resources extends Map {\n\n\tget( key, callback = null, ...params ) {\n\n\t\tif ( this.has( key ) ) return super.get( key );\n\n\t\tif ( callback !== null ) {\n\n\t\t\tconst value = callback( ...params );\n\t\t\tthis.set( key, value );\n\t\t\treturn value;\n\n\t\t}\n\n\t}\n\n}\n\nclass Parameters {\n\n\tconstructor( scriptableNode ) {\n\n\t\tthis.scriptableNode = scriptableNode;\n\n\t}\n\n\tget parameters() {\n\n\t\treturn this.scriptableNode.parameters;\n\n\t}\n\n\tget layout() {\n\n\t\treturn this.scriptableNode.getLayout();\n\n\t}\n\n\tgetInputLayout( id ) {\n\n\t\treturn this.scriptableNode.getInputLayout( id );\n\n\t}\n\n\tget( name ) {\n\n\t\tconst param = this.parameters[ name ];\n\t\tconst value = param ? param.getValue() : null;\n\n\t\treturn value;\n\n\t}\n\n}\n\nexport const global = new Resources();\n\nclass ScriptableNode extends Node {\n\n\tconstructor( codeNode = null, parameters = {} ) {\n\n\t\tsuper();\n\n\t\tthis.codeNode = codeNode;\n\t\tthis.parameters = parameters;\n\n\t\tthis._local = new Resources();\n\t\tthis._output = scriptableValue();\n\t\tthis._outputs = {};\n\t\tthis._source = this.source;\n\t\tthis._method = null;\n\t\tthis._object = null;\n\t\tthis._value = null;\n\t\tthis._needsOutputUpdate = true;\n\n\t\tthis.onRefresh = this.onRefresh.bind( this );\n\n\t\tthis.isScriptableNode = true;\n\n\t}\n\n\tget source() {\n\n\t\treturn this.codeNode ? this.codeNode.code : '';\n\n\t}\n\n\tsetLocal( name, value ) {\n\n\t\treturn this._local.set( name, value );\n\n\t}\n\n\tgetLocal( name ) {\n\n\t\treturn this._local.get( name );\n\n\t}\n\n\tonRefresh() {\n\n\t\tthis._refresh();\n\n\t}\n\n\tgetInputLayout( id ) {\n\n\t\tfor ( const element of this.getLayout() ) {\n\n\t\t\tif ( element.inputType && ( element.id === id || element.name === id ) ) {\n\n\t\t\t\treturn element;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetOutputLayout( id ) {\n\n\t\tfor ( const element of this.getLayout() ) {\n\n\t\t\tif ( element.outputType && ( element.id === id || element.name === id ) ) {\n\n\t\t\t\treturn element;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetOutput( name, value ) {\n\n\t\tconst outputs = this._outputs;\n\n\t\tif ( outputs[ name ] === undefined ) {\n\n\t\t\toutputs[ name ] = scriptableValue( value );\n\n\t\t} else {\n\n\t\t\toutputs[ name ].value = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetOutput( name ) {\n\n\t\treturn this._outputs[ name ];\n\n\t}\n\n\tgetParameter( name ) {\n\n\t\treturn this.parameters[ name ];\n\n\t}\n\n\tsetParameter( name, value ) {\n\n\t\tconst parameters = this.parameters;\n\n\t\tif ( value && value.isScriptableNode ) {\n\n\t\t\tthis.deleteParameter( name );\n\n\t\t\tparameters[ name ] = value;\n\t\t\tparameters[ name ].getDefaultOutput().events.addEventListener( 'refresh', this.onRefresh );\n\n\t\t} else if ( value && value.isScriptableValueNode ) {\n\n\t\t\tthis.deleteParameter( name );\n\n\t\t\tparameters[ name ] = value;\n\t\t\tparameters[ name ].events.addEventListener( 'refresh', this.onRefresh );\n\n\t\t} else if ( parameters[ name ] === undefined ) {\n\n\t\t\tparameters[ name ] = scriptableValue( value );\n\t\t\tparameters[ name ].events.addEventListener( 'refresh', this.onRefresh );\n\n\t\t} else {\n\n\t\t\tparameters[ name ].value = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetValue() {\n\n\t\treturn this.getDefaultOutput().getValue();\n\n\t}\n\n\tdeleteParameter( name ) {\n\n\t\tlet valueNode = this.parameters[ name ];\n\n\t\tif ( valueNode ) {\n\n\t\t\tif ( valueNode.isScriptableNode ) valueNode = valueNode.getDefaultOutput();\n\n\t\t\tvalueNode.events.removeEventListener( 'refresh', this.onRefresh );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclearParameters() {\n\n\t\tfor ( const name of Object.keys( this.parameters ) ) {\n\n\t\t\tthis.deleteParameter( name );\n\n\t\t}\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tcall( name, ...params ) {\n\n\t\tconst object = this.getObject();\n\t\tconst method = object[ name ];\n\n\t\tif ( typeof method === 'function' ) {\n\n\t\t\treturn method( ...params );\n\n\t\t}\n\n\t}\n\n\tasync callAsync( name, ...params ) {\n\n\t\tconst object = this.getObject();\n\t\tconst method = object[ name ];\n\n\t\tif ( typeof method === 'function' ) {\n\n\t\t\treturn method.constructor.name === 'AsyncFunction' ? await method( ...params ) : method( ...params );\n\n\t\t}\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.getDefaultOutputNode().getNodeType( builder );\n\n\t}\n\n\trefresh( output = null ) {\n\n\t\tif ( output !== null ) {\n\n\t\t\tthis.getOutput( output ).refresh();\n\n\t\t} else {\n\n\t\t\tthis._refresh();\n\n\t\t}\n\n\t}\n\n\tgetObject() {\n\n\t\tif ( this.needsUpdate ) this.dispose();\n\t\tif ( this._object !== null ) return this._object;\n\n\t\t//\n\n\t\tconst refresh = () => this.refresh();\n\t\tconst setOutput = ( id, value ) => this.setOutput( id, value );\n\n\t\tconst parameters = new Parameters( this );\n\n\t\tconst THREE = global.get( 'THREE' );\n\t\tconst TSL = global.get( 'TSL' );\n\n\t\tconst method = this.getMethod( this.codeNode );\n\t\tconst params = [ parameters, this._local, global, refresh, setOutput, THREE, TSL ];\n\n\t\tthis._object = method( ...params );\n\n\t\tconst layout = this._object.layout;\n\n\t\tif ( layout ) {\n\n\t\t\tif ( layout.cache === false ) {\n\n\t\t\t\tthis._local.clear();\n\n\t\t\t}\n\n\t\t\t// default output\n\t\t\tthis._output.outputType = layout.outputType || null;\n\n\t\t\tif ( Array.isArray( layout.elements ) ) {\n\n\t\t\t\tfor ( const element of layout.elements ) {\n\n\t\t\t\t\tconst id = element.id || element.name;\n\n\t\t\t\t\tif ( element.inputType ) {\n\n\t\t\t\t\t\tif ( this.getParameter( id ) === undefined ) this.setParameter( id, null );\n\n\t\t\t\t\t\tthis.getParameter( id ).inputType = element.inputType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( element.outputType ) {\n\n\t\t\t\t\t\tif ( this.getOutput( id ) === undefined ) this.setOutput( id, null );\n\n\t\t\t\t\t\tthis.getOutput( id ).outputType = element.outputType;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this._object;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tfor ( const name in this.parameters ) {\n\n\t\t\tlet valueNode = this.parameters[ name ];\n\n\t\t\tif ( valueNode.isScriptableNode ) valueNode = valueNode.getDefaultOutput();\n\n\t\t\tvalueNode.events.addEventListener( 'refresh', this.onRefresh );\n\n\t\t}\n\n\t}\n\n\tgetLayout() {\n\n\t\treturn this.getObject().layout;\n\n\t}\n\n\tgetDefaultOutputNode() {\n\n\t\tconst output = this.getDefaultOutput().value;\n\n\t\tif ( output && output.isNode ) {\n\n\t\t\treturn output;\n\n\t\t}\n\n\t\treturn float();\n\n\t}\n\n\tgetDefaultOutput()\t{\n\n\t\treturn this._exec()._output;\n\n\t}\n\n\tgetMethod() {\n\n\t\tif ( this.needsUpdate ) this.dispose();\n\t\tif ( this._method !== null ) return this._method;\n\n\t\t//\n\n\t\tconst parametersProps = [ 'parameters', 'local', 'global', 'refresh', 'setOutput', 'THREE', 'TSL' ];\n\t\tconst interfaceProps = [ 'layout', 'init', 'main', 'dispose' ];\n\n\t\tconst properties = interfaceProps.join( ', ' );\n\t\tconst declarations = 'var ' + properties + '; var output = {};\\n';\n\t\tconst returns = '\\nreturn { ...output, ' + properties + ' };';\n\n\t\tconst code = declarations + this.codeNode.code + returns;\n\n\t\t//\n\n\t\tthis._method = new Function( ...parametersProps, code );\n\n\t\treturn this._method;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this._method === null ) return;\n\n\t\tif ( this._object && typeof this._object.dispose === 'function' ) {\n\n\t\t\tthis._object.dispose();\n\n\t\t}\n\n\t\tthis._method = null;\n\t\tthis._object = null;\n\t\tthis._source = null;\n\t\tthis._value = null;\n\t\tthis._needsOutputUpdate = true;\n\t\tthis._output.value = null;\n\t\tthis._outputs = {};\n\n\t}\n\n\tsetup() {\n\n\t\treturn this.getDefaultOutputNode();\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.dispose();\n\n\t}\n\n\tget needsUpdate() {\n\n\t\treturn this.source !== this._source;\n\n\t}\n\n\t_exec()\t{\n\n\t\tif ( this.codeNode === null ) return this;\n\n\t\tif ( this._needsOutputUpdate === true ) {\n\n\t\t\tthis._value = this.call( 'main' );\n\n\t\t\tthis._needsOutputUpdate = false;\n\n\t\t}\n\n\t\tthis._output.value = this._value;\n\n\t\treturn this;\n\n\t}\n\n\t_refresh() {\n\n\t\tthis.needsUpdate = true;\n\n\t\tthis._exec();\n\n\t\tthis._output.refresh();\n\n\t}\n\n}\n\nexport default ScriptableNode;\n\nexport const scriptable = nodeProxy( ScriptableNode );\n\naddNodeElement( 'scriptable', scriptable );\n\naddNodeClass( 'ScriptableNode', ScriptableNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}