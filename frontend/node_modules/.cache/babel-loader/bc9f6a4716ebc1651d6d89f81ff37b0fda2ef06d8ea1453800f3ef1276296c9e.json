{"ast":null,"code":"import { SpotLight, AmbientLight, SphereGeometry, Mesh } from 'three';\nimport { MeshStandardNodeMaterial } from 'three/examples/jsm/nodes/Nodes.js';\nfunction createLights(parameters) {\n  // let material = new MeshStandardNodeMaterial();\n  //     material.colorNode = color( hexColor );\n  //     material.lights = false;\n  // let mesh = new Mesh()\n  let spotLight = new SpotLight(\"white\", 1, 0, Math.PI / 5, 0);\n  spotLight.position.set(0, 0, parameters.l.max * 2);\n  spotLight.castShadow = true;\n  spotLight.castShadow = true;\n  spotLight.shadow.mapSize.width = 1024;\n  spotLight.shadow.mapSize.height = 1024;\n  spotLight.shadow.camera.near = 0.5;\n  spotLight.shadow.camera.far = parameters.l.max * 10;\n  let ambientLight = new AmbientLight('white', 2);\n  ambientLight.layers.set(1);\n  return [spotLight, ambientLight];\n}\nexport { createLights };","map":{"version":3,"names":["SpotLight","AmbientLight","SphereGeometry","Mesh","MeshStandardNodeMaterial","createLights","parameters","spotLight","Math","PI","position","set","l","max","castShadow","shadow","mapSize","width","height","camera","near","far","ambientLight","layers"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/src/gyroscopeRenderer/components/lights.js"],"sourcesContent":["import { SpotLight, AmbientLight, SphereGeometry, Mesh} from 'three';\nimport { MeshStandardNodeMaterial } from 'three/examples/jsm/nodes/Nodes.js'\n\nfunction createLights(parameters) {\n    // let material = new MeshStandardNodeMaterial();\n    //     material.colorNode = color( hexColor );\n    //     material.lights = false;\n    // let mesh = new Mesh()\n    let spotLight = new SpotLight( \"white\" , 1, 0, Math.PI/5, 0);\n        spotLight.position.set( 0, 0, parameters.l.max * 2);\n        spotLight.castShadow = true \n        spotLight.castShadow = true;\n        spotLight.shadow.mapSize.width = 1024\n        spotLight.shadow.mapSize.height = 1024\n        spotLight.shadow.camera.near = 0.5\n        spotLight.shadow.camera.far = parameters.l.max * 10\n    \n    let ambientLight = new AmbientLight('white', 2)\n    ambientLight.layers.set(1)\n\n    return [spotLight, ambientLight];\n}\n\nexport { createLights }"],"mappings":"AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,cAAc,EAAEC,IAAI,QAAO,OAAO;AACpE,SAASC,wBAAwB,QAAQ,mCAAmC;AAE5E,SAASC,YAAYA,CAACC,UAAU,EAAE;EAC9B;EACA;EACA;EACA;EACA,IAAIC,SAAS,GAAG,IAAIP,SAAS,CAAE,OAAO,EAAG,CAAC,EAAE,CAAC,EAAEQ,IAAI,CAACC,EAAE,GAAC,CAAC,EAAE,CAAC,CAAC;EACxDF,SAAS,CAACG,QAAQ,CAACC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAEL,UAAU,CAACM,CAAC,CAACC,GAAG,GAAG,CAAC,CAAC;EACnDN,SAAS,CAACO,UAAU,GAAG,IAAI;EAC3BP,SAAS,CAACO,UAAU,GAAG,IAAI;EAC3BP,SAAS,CAACQ,MAAM,CAACC,OAAO,CAACC,KAAK,GAAG,IAAI;EACrCV,SAAS,CAACQ,MAAM,CAACC,OAAO,CAACE,MAAM,GAAG,IAAI;EACtCX,SAAS,CAACQ,MAAM,CAACI,MAAM,CAACC,IAAI,GAAG,GAAG;EAClCb,SAAS,CAACQ,MAAM,CAACI,MAAM,CAACE,GAAG,GAAGf,UAAU,CAACM,CAAC,CAACC,GAAG,GAAG,EAAE;EAEvD,IAAIS,YAAY,GAAG,IAAIrB,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC;EAC/CqB,YAAY,CAACC,MAAM,CAACZ,GAAG,CAAC,CAAC,CAAC;EAE1B,OAAO,CAACJ,SAAS,EAAEe,YAAY,CAAC;AACpC;AAEA,SAASjB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}