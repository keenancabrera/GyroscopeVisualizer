{"ast":null,"code":"import * as THREE from 'three';\nclass Cylinder {\n  constructor(parameters) {\n    this.parameters = parameters;\n    this.oldPosition = new THREE.Vector3();\n    this.geometry = new THREE.CylinderGeometry(parameters.a.value,\n    // top radius\n    parameters.a.value,\n    // bottom radius\n    parameters.h.value,\n    // height\n    32,\n    // radial segments (default = 32)\n    1,\n    // height segments (default = 1)\n    0,\n    // theta start\n    Math.PI // theta end\n    );\n\n    this.material = new THREE.MeshBasicMaterial({\n      color: \"red\",\n      wireframe: true\n    });\n    // this.material = [new THREE.MeshPhongMaterial({ color: 'blue', shininess: 200 }),new THREE.MeshPhongMaterial({ color: 'red', shininess: 200 })]\n    this.cylinder = new THREE.Mesh(this.geometry, this.material);\n\n    // Adjust cylinder position, set oldPosition vector which we will need to perform rotations.\n    this.cylinder.position.set(0, 0, this.parameters.l.value);\n    this.cylinder.getWorldPosition(this.oldPosition);\n  }\n  get object() {\n    return this.cylinder;\n  }\n}\nexport { Cylinder };","map":{"version":3,"names":["THREE","Cylinder","constructor","parameters","oldPosition","Vector3","geometry","CylinderGeometry","a","value","h","Math","PI","material","MeshBasicMaterial","color","wireframe","cylinder","Mesh","position","set","l","getWorldPosition","object"],"sources":["/Users/cabrera/Documents/PortfolioWebiste/frontend/src/gyroscopeRenderer/components/cylinder.js"],"sourcesContent":["import * as THREE from 'three';\n\nclass Cylinder {\n  constructor(parameters){\n  this.parameters = parameters\n  this.oldPosition = new THREE.Vector3()\n  this.geometry = new THREE.CylinderGeometry(\n    parameters.a.value, // top radius\n    parameters.a.value, // bottom radius\n    parameters.h.value, // height\n    32, // radial segments (default = 32)\n    1, // height segments (default = 1)\n    0, // theta start\n    Math.PI // theta end\n    ); \n  this.material = new THREE.MeshBasicMaterial({color : \"red\", wireframe : true})\n  // this.material = [new THREE.MeshPhongMaterial({ color: 'blue', shininess: 200 }),new THREE.MeshPhongMaterial({ color: 'red', shininess: 200 })]\n  this.cylinder = new THREE.Mesh(this.geometry, this.material);\n\n\n  // Adjust cylinder position, set oldPosition vector which we will need to perform rotations.\n  this.cylinder.position.set(0,0,this.parameters.l.value)\n  this.cylinder.getWorldPosition(this.oldPosition)\n  \n  }\n  get object() {\n    return this.cylinder\n  }\n}\n\nexport { Cylinder };"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,MAAMC,QAAQ,CAAC;EACbC,WAAWA,CAACC,UAAU,EAAC;IACvB,IAAI,CAACA,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,WAAW,GAAG,IAAIJ,KAAK,CAACK,OAAO,CAAC,CAAC;IACtC,IAAI,CAACC,QAAQ,GAAG,IAAIN,KAAK,CAACO,gBAAgB,CACxCJ,UAAU,CAACK,CAAC,CAACC,KAAK;IAAE;IACpBN,UAAU,CAACK,CAAC,CAACC,KAAK;IAAE;IACpBN,UAAU,CAACO,CAAC,CAACD,KAAK;IAAE;IACpB,EAAE;IAAE;IACJ,CAAC;IAAE;IACH,CAAC;IAAE;IACHE,IAAI,CAACC,EAAE,CAAC;IACR,CAAC;;IACH,IAAI,CAACC,QAAQ,GAAG,IAAIb,KAAK,CAACc,iBAAiB,CAAC;MAACC,KAAK,EAAG,KAAK;MAAEC,SAAS,EAAG;IAAI,CAAC,CAAC;IAC9E;IACA,IAAI,CAACC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,IAAI,CAAC,IAAI,CAACZ,QAAQ,EAAE,IAAI,CAACO,QAAQ,CAAC;;IAG5D;IACA,IAAI,CAACI,QAAQ,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAACjB,UAAU,CAACkB,CAAC,CAACZ,KAAK,CAAC;IACvD,IAAI,CAACQ,QAAQ,CAACK,gBAAgB,CAAC,IAAI,CAAClB,WAAW,CAAC;EAEhD;EACA,IAAImB,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACN,QAAQ;EACtB;AACF;AAEA,SAAShB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}