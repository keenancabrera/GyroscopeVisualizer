{"ast":null,"code":"import ContextNode from '../core/ContextNode.js';\nimport { add } from '../math/OperatorNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\nclass LightingContextNode extends ContextNode {\n  constructor(node, lightingModel = null, backdropNode = null, backdropAlphaNode = null) {\n    super(node);\n    this.lightingModel = lightingModel;\n    this.backdropNode = backdropNode;\n    this.backdropAlphaNode = backdropAlphaNode;\n  }\n  getNodeType( /*builder*/\n  ) {\n    return 'vec3';\n  }\n  setup(builder) {\n    const {\n      lightingModel,\n      backdropNode,\n      backdropAlphaNode\n    } = this;\n    const context = this.context = {}; // reset context\n    const properties = builder.getNodeProperties(this);\n    const directDiffuse = vec3().temp(),\n      directSpecular = vec3().temp(),\n      indirectDiffuse = vec3().temp(),\n      indirectSpecular = vec3().temp();\n    let totalDiffuse = add(directDiffuse, indirectDiffuse);\n    if (backdropNode !== null) {\n      totalDiffuse = vec3(backdropAlphaNode !== null ? mix(totalDiffuse, backdropNode, backdropAlphaNode) : backdropNode);\n    }\n    const totalSpecular = add(directSpecular, indirectSpecular);\n    const total = add(totalDiffuse, totalSpecular).temp();\n    const reflectedLight = {\n      directDiffuse,\n      directSpecular,\n      indirectDiffuse,\n      indirectSpecular,\n      total\n    };\n    const lighting = {\n      radiance: vec3().temp(),\n      irradiance: vec3().temp(),\n      iblIrradiance: vec3().temp(),\n      ambientOcclusion: float(1).temp()\n    };\n    context.reflectedLight = reflectedLight;\n    context.lightingModel = lightingModel || context.lightingModel;\n    Object.assign(properties, reflectedLight, lighting);\n    Object.assign(context, lighting);\n    if (lightingModel) {\n      lightingModel.init(context, builder.stack, builder);\n      lightingModel.indirectDiffuse(context, builder.stack, builder);\n      lightingModel.indirectSpecular(context, builder.stack, builder);\n      lightingModel.ambientOcclusion(context, builder.stack, builder);\n    }\n    return super.setup(builder);\n  }\n  generate(builder) {\n    const {\n      context\n    } = this;\n    const type = this.getNodeType(builder);\n    super.generate(builder, type);\n    return context.reflectedLight.total.build(builder, type);\n  }\n}\nexport default LightingContextNode;\nexport const lightingContext = nodeProxy(LightingContextNode);\naddNodeElement('lightingContext', lightingContext);\naddNodeClass('LightingContextNode', LightingContextNode);","map":{"version":3,"names":["ContextNode","add","mix","addNodeClass","addNodeElement","nodeProxy","float","vec3","LightingContextNode","constructor","node","lightingModel","backdropNode","backdropAlphaNode","getNodeType","setup","builder","context","properties","getNodeProperties","directDiffuse","temp","directSpecular","indirectDiffuse","indirectSpecular","totalDiffuse","totalSpecular","total","reflectedLight","lighting","radiance","irradiance","iblIrradiance","ambientOcclusion","Object","assign","init","stack","generate","type","build","lightingContext"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/lighting/LightingContextNode.js"],"sourcesContent":["import ContextNode from '../core/ContextNode.js';\nimport { add } from '../math/OperatorNode.js';\nimport { mix } from '../math/MathNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, nodeProxy, float, vec3 } from '../shadernode/ShaderNode.js';\n\nclass LightingContextNode extends ContextNode {\n\n\tconstructor( node, lightingModel = null, backdropNode = null, backdropAlphaNode = null ) {\n\n\t\tsuper( node );\n\n\t\tthis.lightingModel = lightingModel;\n\t\tthis.backdropNode = backdropNode;\n\t\tthis.backdropAlphaNode = backdropAlphaNode;\n\n\t}\n\n\tgetNodeType( /*builder*/ ) {\n\n\t\treturn 'vec3';\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst { lightingModel, backdropNode, backdropAlphaNode } = this;\n\n\t\tconst context = this.context = {}; // reset context\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tconst directDiffuse = vec3().temp(),\n\t\t\tdirectSpecular = vec3().temp(),\n\t\t\tindirectDiffuse = vec3().temp(),\n\t\t\tindirectSpecular = vec3().temp();\n\n\t\tlet totalDiffuse = add( directDiffuse, indirectDiffuse );\n\n\t\tif ( backdropNode !== null ) {\n\n\t\t\ttotalDiffuse = vec3( backdropAlphaNode !== null ? mix( totalDiffuse, backdropNode, backdropAlphaNode ) : backdropNode );\n\n\t\t}\n\n\t\tconst totalSpecular = add( directSpecular, indirectSpecular );\n\t\tconst total = add( totalDiffuse, totalSpecular ).temp();\n\n\t\tconst reflectedLight = {\n\t\t\tdirectDiffuse,\n\t\t\tdirectSpecular,\n\t\t\tindirectDiffuse,\n\t\t\tindirectSpecular,\n\t\t\ttotal\n\t\t};\n\n\t\tconst lighting = {\n\t\t\tradiance: vec3().temp(),\n\t\t\tirradiance: vec3().temp(),\n\t\t\tiblIrradiance: vec3().temp(),\n\t\t\tambientOcclusion: float( 1 ).temp()\n\t\t};\n\n\t\tcontext.reflectedLight = reflectedLight;\n\t\tcontext.lightingModel = lightingModel || context.lightingModel;\n\n\t\tObject.assign( properties, reflectedLight, lighting );\n\t\tObject.assign( context, lighting );\n\n\t\tif ( lightingModel ) {\n\n\t\t\tlightingModel.init( context, builder.stack, builder );\n\n\t\t\tlightingModel.indirectDiffuse( context, builder.stack, builder );\n\t\t\tlightingModel.indirectSpecular( context, builder.stack, builder );\n\t\t\tlightingModel.ambientOcclusion( context, builder.stack, builder );\n\n\t\t}\n\n\t\treturn super.setup( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst { context } = this;\n\t\tconst type = this.getNodeType( builder );\n\n\t\tsuper.generate( builder, type );\n\n\t\treturn context.reflectedLight.total.build( builder, type );\n\n\t}\n\n}\n\nexport default LightingContextNode;\n\nexport const lightingContext = nodeProxy( LightingContextNode );\n\naddNodeElement( 'lightingContext', lightingContext );\n\naddNodeClass( 'LightingContextNode', LightingContextNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}