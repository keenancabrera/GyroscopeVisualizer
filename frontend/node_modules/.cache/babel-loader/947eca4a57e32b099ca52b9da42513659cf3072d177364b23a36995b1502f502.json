{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-68d5cb0f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"sceneContainer\",\n  class: \"scene-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_createElementBlock","_hoisted_1"],"sources":["/Users/cabrera/Documents/PortfolioWebiste/frontend/src/components/gyroscopeSimulator.vue"],"sourcesContent":["<template>\n  <div ref=\"sceneContainer\" class=\"scene-container\"></div>\n</template>\n\n<script>\nimport { gyroscopeAnimation } from '@/gyroscopeRenderer/gyroscopeAnimation';\n\nexport default {\n  name: 'gyroscopeSimulator',\n  props: {\n    solution: Object,\n    parameters: Object,\n    initialState: Object\n  },\n  watch: {\n    solution : {\n      handler() {\n        this.gyroscopeAnimation.updateSolution(Object.assign(this.solution));\n      },\n      deep: true\n    },\n    parameters : {\n      handler(){\n        this.gyroscopeAnimation.updateParameters(Object.assign(this.parameters))\n      },\n      deep: true\n    },\n    initialState : {\n      handler(){\n        this.gyroscopeAnimation.updateState(Object.assign(this.initialState))\n      },\n      deep: true\n    }\n  },\n  data() {\n    return {\n    }\n  },\n  methods: {\n    animateSolution(){\n      console.log(\"SOLUTION CHANGED\")\n    }\n  },\n  mounted() { \n    this.gyroscopeAnimation = new gyroscopeAnimation(this.$refs.sceneContainer, Object.assign(this.parameters), Object.assign(this.initialState))\n    this.gyroscopeAnimation.render()\n  },\n};\n</script>\n\n<style scoped>\n.scene-container {\n  width: 100%;\n  height: 95vh;\n}\n</style>\n"],"mappings":";;;EACOA,GAAG,EAAC,gBAAgB;EAACC,KAAK,EAAC;;;uBAAhCC,mBAAA,CAAwD,OAAxDC,UAAwD"},"metadata":{},"sourceType":"module","externalDependencies":[]}