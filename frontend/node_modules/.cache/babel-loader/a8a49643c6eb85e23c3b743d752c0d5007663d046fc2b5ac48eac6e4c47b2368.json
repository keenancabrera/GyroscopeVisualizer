{"ast":null,"code":"import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { diffuseColor } from '../core/PropertyNode.js';\nimport { directionToColor } from '../utils/PackingNode.js';\nimport { materialOpacity } from '../accessors/MaterialNode.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { float, vec4 } from '../shadernode/ShaderNode.js';\nimport { MeshNormalMaterial } from 'three';\nconst defaultValues = new MeshNormalMaterial();\nclass MeshNormalNodeMaterial extends NodeMaterial {\n  constructor(parameters) {\n    super();\n    this.isMeshNormalNodeMaterial = true;\n    this.colorSpace = false;\n    this.setDefaultValues(defaultValues);\n    this.setValues(parameters);\n  }\n  setupDiffuseColor({\n    stack\n  }) {\n    const opacityNode = this.opacityNode ? float(this.opacityNode) : materialOpacity;\n    stack.assign(diffuseColor, vec4(directionToColor(transformedNormalView), opacityNode));\n  }\n}\nexport default MeshNormalNodeMaterial;\naddNodeMaterial('MeshNormalNodeMaterial', MeshNormalNodeMaterial);","map":{"version":3,"names":["NodeMaterial","addNodeMaterial","diffuseColor","directionToColor","materialOpacity","transformedNormalView","float","vec4","MeshNormalMaterial","defaultValues","MeshNormalNodeMaterial","constructor","parameters","isMeshNormalNodeMaterial","colorSpace","setDefaultValues","setValues","setupDiffuseColor","stack","opacityNode","assign"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/materials/MeshNormalNodeMaterial.js"],"sourcesContent":["import NodeMaterial, { addNodeMaterial } from './NodeMaterial.js';\nimport { diffuseColor } from '../core/PropertyNode.js';\nimport { directionToColor } from '../utils/PackingNode.js';\nimport { materialOpacity } from '../accessors/MaterialNode.js';\nimport { transformedNormalView } from '../accessors/NormalNode.js';\nimport { float, vec4 } from '../shadernode/ShaderNode.js';\n\nimport { MeshNormalMaterial } from 'three';\n\nconst defaultValues = new MeshNormalMaterial();\n\nclass MeshNormalNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalNodeMaterial = true;\n\n\t\tthis.colorSpace = false;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tsetupDiffuseColor( { stack } ) {\n\n\t\tconst opacityNode = this.opacityNode ? float( this.opacityNode ) : materialOpacity;\n\n\t\tstack.assign( diffuseColor, vec4( directionToColor( transformedNormalView ), opacityNode ) );\n\n\t}\n\n}\n\nexport default MeshNormalNodeMaterial;\n\naddNodeMaterial( 'MeshNormalNodeMaterial', MeshNormalNodeMaterial );\n"],"mappings":"AAAA,OAAOA,YAAY,IAAIC,eAAe,QAAQ,mBAAmB;AACjE,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,eAAe,QAAQ,8BAA8B;AAC9D,SAASC,qBAAqB,QAAQ,4BAA4B;AAClE,SAASC,KAAK,EAAEC,IAAI,QAAQ,6BAA6B;AAEzD,SAASC,kBAAkB,QAAQ,OAAO;AAE1C,MAAMC,aAAa,GAAG,IAAID,kBAAkB,CAAC,CAAC;AAE9C,MAAME,sBAAsB,SAASV,YAAY,CAAC;EAEjDW,WAAWA,CAAEC,UAAU,EAAG;IAEzB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,wBAAwB,GAAG,IAAI;IAEpC,IAAI,CAACC,UAAU,GAAG,KAAK;IAEvB,IAAI,CAACC,gBAAgB,CAAEN,aAAc,CAAC;IAEtC,IAAI,CAACO,SAAS,CAAEJ,UAAW,CAAC;EAE7B;EAEAK,iBAAiBA,CAAE;IAAEC;EAAM,CAAC,EAAG;IAE9B,MAAMC,WAAW,GAAG,IAAI,CAACA,WAAW,GAAGb,KAAK,CAAE,IAAI,CAACa,WAAY,CAAC,GAAGf,eAAe;IAElFc,KAAK,CAACE,MAAM,CAAElB,YAAY,EAAEK,IAAI,CAAEJ,gBAAgB,CAAEE,qBAAsB,CAAC,EAAEc,WAAY,CAAE,CAAC;EAE7F;AAED;AAEA,eAAeT,sBAAsB;AAErCT,eAAe,CAAE,wBAAwB,EAAES,sBAAuB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}