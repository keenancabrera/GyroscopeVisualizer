{"ast":null,"code":"import TempNode from '../core/TempNode.js';\nimport { EPSILON } from '../math/MathNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, tslFn, nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\nexport const BurnNode = tslFn(({\n  base,\n  blend\n}) => {\n  const fn = c => blend[c].lessThan(EPSILON).cond(blend[c], base[c].oneMinus().div(blend[c]).oneMinus().max(0));\n  return vec3(fn('x'), fn('y'), fn('z'));\n});\nexport const DodgeNode = tslFn(({\n  base,\n  blend\n}) => {\n  const fn = c => blend[c].equal(1.0).cond(blend[c], base[c].div(blend[c].oneMinus()).max(0));\n  return vec3(fn('x'), fn('y'), fn('z'));\n});\nexport const ScreenNode = tslFn(({\n  base,\n  blend\n}) => {\n  const fn = c => base[c].oneMinus().mul(blend[c].oneMinus()).oneMinus();\n  return vec3(fn('x'), fn('y'), fn('z'));\n});\nexport const OverlayNode = tslFn(({\n  base,\n  blend\n}) => {\n  const fn = c => base[c].lessThan(0.5).cond(base[c].mul(blend[c], 2.0), base[c].oneMinus().mul(blend[c].oneMinus()).oneMinus());\n  return vec3(fn('x'), fn('y'), fn('z'));\n});\nclass BlendModeNode extends TempNode {\n  constructor(blendMode, baseNode, blendNode) {\n    super();\n    this.blendMode = blendMode;\n    this.baseNode = baseNode;\n    this.blendNode = blendNode;\n  }\n  setup() {\n    const {\n      blendMode,\n      baseNode,\n      blendNode\n    } = this;\n    const params = {\n      base: baseNode,\n      blend: blendNode\n    };\n    let outputNode = null;\n    if (blendMode === BlendModeNode.BURN) {\n      outputNode = BurnNode(params);\n    } else if (blendMode === BlendModeNode.DODGE) {\n      outputNode = DodgeNode(params);\n    } else if (blendMode === BlendModeNode.SCREEN) {\n      outputNode = ScreenNode(params);\n    } else if (blendMode === BlendModeNode.OVERLAY) {\n      outputNode = OverlayNode(params);\n    }\n    return outputNode;\n  }\n}\nBlendModeNode.BURN = 'burn';\nBlendModeNode.DODGE = 'dodge';\nBlendModeNode.SCREEN = 'screen';\nBlendModeNode.OVERLAY = 'overlay';\nexport default BlendModeNode;\nexport const burn = nodeProxy(BlendModeNode, BlendModeNode.BURN);\nexport const dodge = nodeProxy(BlendModeNode, BlendModeNode.DODGE);\nexport const overlay = nodeProxy(BlendModeNode, BlendModeNode.OVERLAY);\nexport const screen = nodeProxy(BlendModeNode, BlendModeNode.SCREEN);\naddNodeElement('burn', burn);\naddNodeElement('dodge', dodge);\naddNodeElement('overlay', overlay);\naddNodeElement('screen', screen);\naddNodeClass('BlendModeNode', BlendModeNode);","map":{"version":3,"names":["TempNode","EPSILON","addNodeClass","addNodeElement","tslFn","nodeProxy","vec3","BurnNode","base","blend","fn","c","lessThan","cond","oneMinus","div","max","DodgeNode","equal","ScreenNode","mul","OverlayNode","BlendModeNode","constructor","blendMode","baseNode","blendNode","setup","params","outputNode","BURN","DODGE","SCREEN","OVERLAY","burn","dodge","overlay","screen"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/display/BlendModeNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport { EPSILON } from '../math/MathNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { addNodeElement, tslFn, nodeProxy, vec3 } from '../shadernode/ShaderNode.js';\n\nexport const BurnNode = tslFn( ( { base, blend } ) => {\n\n\tconst fn = ( c ) => blend[ c ].lessThan( EPSILON ).cond( blend[ c ], base[ c ].oneMinus().div( blend[ c ] ).oneMinus().max( 0 ) );\n\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\n\n} );\n\nexport const DodgeNode = tslFn( ( { base, blend } ) => {\n\n\tconst fn = ( c ) => blend[ c ].equal( 1.0 ).cond( blend[ c ], base[ c ].div( blend[ c ].oneMinus() ).max( 0 ) );\n\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\n\n} );\n\nexport const ScreenNode = tslFn( ( { base, blend } ) => {\n\n\tconst fn = ( c ) => base[ c ].oneMinus().mul( blend[ c ].oneMinus() ).oneMinus();\n\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\n\n} );\n\nexport const OverlayNode = tslFn( ( { base, blend } ) => {\n\n\tconst fn = ( c ) => base[ c ].lessThan( 0.5 ).cond( base[ c ].mul( blend[ c ], 2.0 ), base[ c ].oneMinus().mul( blend[ c ].oneMinus() ).oneMinus() );\n\n\treturn vec3( fn( 'x' ), fn( 'y' ), fn( 'z' ) );\n\n} );\n\nclass BlendModeNode extends TempNode {\n\n\tconstructor( blendMode, baseNode, blendNode ) {\n\n\t\tsuper();\n\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.baseNode = baseNode;\n\t\tthis.blendNode = blendNode;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { blendMode, baseNode, blendNode } = this;\n\t\tconst params = { base: baseNode, blend: blendNode };\n\n\t\tlet outputNode = null;\n\n\t\tif ( blendMode === BlendModeNode.BURN ) {\n\n\t\t\toutputNode = BurnNode( params );\n\n\t\t} else if ( blendMode === BlendModeNode.DODGE ) {\n\n\t\t\toutputNode = DodgeNode( params );\n\n\t\t} else if ( blendMode === BlendModeNode.SCREEN ) {\n\n\t\t\toutputNode = ScreenNode( params );\n\n\t\t} else if ( blendMode === BlendModeNode.OVERLAY ) {\n\n\t\t\toutputNode = OverlayNode( params );\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nBlendModeNode.BURN = 'burn';\nBlendModeNode.DODGE = 'dodge';\nBlendModeNode.SCREEN = 'screen';\nBlendModeNode.OVERLAY = 'overlay';\n\nexport default BlendModeNode;\n\nexport const burn = nodeProxy( BlendModeNode, BlendModeNode.BURN );\nexport const dodge = nodeProxy( BlendModeNode, BlendModeNode.DODGE );\nexport const overlay = nodeProxy( BlendModeNode, BlendModeNode.OVERLAY );\nexport const screen = nodeProxy( BlendModeNode, BlendModeNode.SCREEN );\n\naddNodeElement( 'burn', burn );\naddNodeElement( 'dodge', dodge );\naddNodeElement( 'overlay', overlay );\naddNodeElement( 'screen', screen );\n\naddNodeClass( 'BlendModeNode', BlendModeNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}