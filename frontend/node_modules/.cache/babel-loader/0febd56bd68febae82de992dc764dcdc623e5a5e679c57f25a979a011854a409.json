{"ast":null,"code":"import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { objectPosition } from '../accessors/Object3DNode.js';\nimport { cameraViewMatrix } from '../accessors/CameraNode.js';\nclass LightNode extends Node {\n  constructor(scope = LightNode.TARGET_DIRECTION, light = null) {\n    super();\n    this.scope = scope;\n    this.light = light;\n  }\n  setup() {\n    const {\n      scope,\n      light\n    } = this;\n    let output = null;\n    if (scope === LightNode.TARGET_DIRECTION) {\n      output = cameraViewMatrix.transformDirection(objectPosition(light).sub(objectPosition(light.target)));\n    }\n    return output;\n  }\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n}\nLightNode.TARGET_DIRECTION = 'targetDirection';\nexport default LightNode;\nexport const lightTargetDirection = nodeProxy(LightNode, LightNode.TARGET_DIRECTION);\naddNodeClass('LightNode', LightNode);","map":{"version":3,"names":["Node","addNodeClass","nodeProxy","objectPosition","cameraViewMatrix","LightNode","constructor","scope","TARGET_DIRECTION","light","setup","output","transformDirection","sub","target","serialize","data","deserialize","lightTargetDirection"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/lighting/LightNode.js"],"sourcesContent":["import Node, { addNodeClass } from '../core/Node.js';\nimport { nodeProxy } from '../shadernode/ShaderNode.js';\nimport { objectPosition } from '../accessors/Object3DNode.js';\nimport { cameraViewMatrix } from '../accessors/CameraNode.js';\n\nclass LightNode extends Node {\n\n\tconstructor( scope = LightNode.TARGET_DIRECTION, light = null ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\t\tthis.light = light;\n\n\t}\n\n\tsetup() {\n\n\t\tconst { scope, light } = this;\n\n\t\tlet output = null;\n\n\t\tif ( scope === LightNode.TARGET_DIRECTION ) {\n\n\t\t\toutput = cameraViewMatrix.transformDirection( objectPosition( light ).sub( objectPosition( light.target ) ) );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nLightNode.TARGET_DIRECTION = 'targetDirection';\n\nexport default LightNode;\n\nexport const lightTargetDirection = nodeProxy( LightNode, LightNode.TARGET_DIRECTION );\n\naddNodeClass( 'LightNode', LightNode );\n"],"mappings":"AAAA,OAAOA,IAAI,IAAIC,YAAY,QAAQ,iBAAiB;AACpD,SAASC,SAAS,QAAQ,6BAA6B;AACvD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,SAASC,gBAAgB,QAAQ,4BAA4B;AAE7D,MAAMC,SAAS,SAASL,IAAI,CAAC;EAE5BM,WAAWA,CAAEC,KAAK,GAAGF,SAAS,CAACG,gBAAgB,EAAEC,KAAK,GAAG,IAAI,EAAG;IAE/D,KAAK,CAAC,CAAC;IAEP,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,KAAK,GAAGA,KAAK;EAEnB;EAEAC,KAAKA,CAAA,EAAG;IAEP,MAAM;MAAEH,KAAK;MAAEE;IAAM,CAAC,GAAG,IAAI;IAE7B,IAAIE,MAAM,GAAG,IAAI;IAEjB,IAAKJ,KAAK,KAAKF,SAAS,CAACG,gBAAgB,EAAG;MAE3CG,MAAM,GAAGP,gBAAgB,CAACQ,kBAAkB,CAAET,cAAc,CAAEM,KAAM,CAAC,CAACI,GAAG,CAAEV,cAAc,CAAEM,KAAK,CAACK,MAAO,CAAE,CAAE,CAAC;IAE9G;IAEA,OAAOH,MAAM;EAEd;EAEAI,SAASA,CAAEC,IAAI,EAAG;IAEjB,KAAK,CAACD,SAAS,CAAEC,IAAK,CAAC;IAEvBA,IAAI,CAACT,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB;EAEAU,WAAWA,CAAED,IAAI,EAAG;IAEnB,KAAK,CAACC,WAAW,CAAED,IAAK,CAAC;IAEzB,IAAI,CAACT,KAAK,GAAGS,IAAI,CAACT,KAAK;EAExB;AAED;AAEAF,SAAS,CAACG,gBAAgB,GAAG,iBAAiB;AAE9C,eAAeH,SAAS;AAExB,OAAO,MAAMa,oBAAoB,GAAGhB,SAAS,CAAEG,SAAS,EAAEA,SAAS,CAACG,gBAAiB,CAAC;AAEtFP,YAAY,CAAE,WAAW,EAAEI,SAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}