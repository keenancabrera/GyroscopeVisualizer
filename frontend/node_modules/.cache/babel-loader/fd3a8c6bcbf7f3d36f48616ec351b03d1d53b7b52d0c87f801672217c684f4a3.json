{"ast":null,"code":"import * as THREE from 'three';\nfunction createFloor(parameters) {\n  let geometry = new THREE.CircleGeometry(parameters.l.max * 3.1 * Math.tan(Math.PI / 5), 500);\n  let material = new THREE.MeshLambertMaterial({\n    color: 'gray',\n    side: THREE.DoubleSide\n  });\n  geometry.translate(0, 0, -parameters.l.max * 1.1);\n  let floor = new THREE.Mesh(geometry, material);\n  floor.receiveShadow = true;\n  return floor;\n}\nexport { createFloor };","map":{"version":3,"names":["THREE","createFloor","parameters","geometry","CircleGeometry","l","max","Math","tan","PI","material","MeshLambertMaterial","color","side","DoubleSide","translate","floor","Mesh","receiveShadow"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/src/gyroscopeRenderer/components/floor.js"],"sourcesContent":["import * as THREE from 'three'\n\nfunction createFloor(parameters){\n    let geometry = new THREE.CircleGeometry(parameters.l.max * 3.1 * Math.tan(Math.PI/5), 500);\n    let material = new THREE.MeshLambertMaterial( {color: 'gray', side: THREE.DoubleSide} );\n    geometry.translate(0, 0, -parameters.l.max * 1.1)\n    let floor = new THREE.Mesh( geometry, material );\n    floor.receiveShadow = true\n    return floor\n}\n\nexport { createFloor }"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,WAAWA,CAACC,UAAU,EAAC;EAC5B,IAAIC,QAAQ,GAAG,IAAIH,KAAK,CAACI,cAAc,CAACF,UAAU,CAACG,CAAC,CAACC,GAAG,GAAG,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,EAAE,GAAC,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1F,IAAIC,QAAQ,GAAG,IAAIV,KAAK,CAACW,mBAAmB,CAAE;IAACC,KAAK,EAAE,MAAM;IAAEC,IAAI,EAAEb,KAAK,CAACc;EAAU,CAAE,CAAC;EACvFX,QAAQ,CAACY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAACb,UAAU,CAACG,CAAC,CAACC,GAAG,GAAG,GAAG,CAAC;EACjD,IAAIU,KAAK,GAAG,IAAIhB,KAAK,CAACiB,IAAI,CAAEd,QAAQ,EAAEO,QAAS,CAAC;EAChDM,KAAK,CAACE,aAAa,GAAG,IAAI;EAC1B,OAAOF,KAAK;AAChB;AAEA,SAASf,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}