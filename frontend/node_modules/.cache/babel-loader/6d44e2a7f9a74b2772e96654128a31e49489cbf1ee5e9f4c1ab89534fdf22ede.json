{"ast":null,"code":"import ReferenceNode from './ReferenceNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\nclass MaterialReferenceNode extends ReferenceNode {\n  constructor(property, inputType, material = null) {\n    super(property, inputType, material);\n    this.material = material;\n    this.updateType = NodeUpdateType.RENDER;\n  }\n  updateReference(frame) {\n    this.reference = this.material !== null ? this.material : frame.material;\n    return this.reference;\n  }\n  setup(builder) {\n    const material = this.material !== null ? this.material : builder.material;\n    this.node.value = material[this.property];\n    return super.setup(builder);\n  }\n}\nexport default MaterialReferenceNode;\nexport const materialReference = (name, type, material) => nodeObject(new MaterialReferenceNode(name, type, material));\naddNodeClass('MaterialReferenceNode', MaterialReferenceNode);","map":{"version":3,"names":["ReferenceNode","NodeUpdateType","addNodeClass","nodeObject","MaterialReferenceNode","constructor","property","inputType","material","updateType","RENDER","updateReference","frame","reference","setup","builder","node","value","materialReference","name","type"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/accessors/MaterialReferenceNode.js"],"sourcesContent":["import ReferenceNode from './ReferenceNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { nodeObject } from '../shadernode/ShaderNode.js';\n\nclass MaterialReferenceNode extends ReferenceNode {\n\n\tconstructor( property, inputType, material = null ) {\n\n\t\tsuper( property, inputType, material );\n\n\t\tthis.material = material;\n\n\t\tthis.updateType = NodeUpdateType.RENDER;\n\n\t}\n\n\tupdateReference( frame ) {\n\n\t\tthis.reference = this.material !== null ? this.material : frame.material;\n\n\t\treturn this.reference;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tconst material = this.material !== null ? this.material : builder.material;\n\n\t\tthis.node.value = material[ this.property ];\n\n\t\treturn super.setup( builder );\n\n\t}\n\n}\n\nexport default MaterialReferenceNode;\n\nexport const materialReference = ( name, type, material ) => nodeObject( new MaterialReferenceNode( name, type, material ) );\n\naddNodeClass( 'MaterialReferenceNode', MaterialReferenceNode );\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAC9C,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,QAAQ,6BAA6B;AAExD,MAAMC,qBAAqB,SAASJ,aAAa,CAAC;EAEjDK,WAAWA,CAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,GAAG,IAAI,EAAG;IAEnD,KAAK,CAAEF,QAAQ,EAAEC,SAAS,EAAEC,QAAS,CAAC;IAEtC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAExB,IAAI,CAACC,UAAU,GAAGR,cAAc,CAACS,MAAM;EAExC;EAEAC,eAAeA,CAAEC,KAAK,EAAG;IAExB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,QAAQ,KAAK,IAAI,GAAG,IAAI,CAACA,QAAQ,GAAGI,KAAK,CAACJ,QAAQ;IAExE,OAAO,IAAI,CAACK,SAAS;EAEtB;EAEAC,KAAKA,CAAEC,OAAO,EAAG;IAEhB,MAAMP,QAAQ,GAAG,IAAI,CAACA,QAAQ,KAAK,IAAI,GAAG,IAAI,CAACA,QAAQ,GAAGO,OAAO,CAACP,QAAQ;IAE1E,IAAI,CAACQ,IAAI,CAACC,KAAK,GAAGT,QAAQ,CAAE,IAAI,CAACF,QAAQ,CAAE;IAE3C,OAAO,KAAK,CAACQ,KAAK,CAAEC,OAAQ,CAAC;EAE9B;AAED;AAEA,eAAeX,qBAAqB;AAEpC,OAAO,MAAMc,iBAAiB,GAAGA,CAAEC,IAAI,EAAEC,IAAI,EAAEZ,QAAQ,KAAML,UAAU,CAAE,IAAIC,qBAAqB,CAAEe,IAAI,EAAEC,IAAI,EAAEZ,QAAS,CAAE,CAAC;AAE5HN,YAAY,CAAE,uBAAuB,EAAEE,qBAAsB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}