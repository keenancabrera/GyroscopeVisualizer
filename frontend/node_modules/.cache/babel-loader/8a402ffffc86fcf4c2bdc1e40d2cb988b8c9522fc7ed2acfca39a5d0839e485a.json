{"ast":null,"code":"import * as THREE from 'three';\nfunction createFloor(parameters) {\n  console.log(parameters.l.max);\n  const geometry = new THREE.PlaneGeometry(5000, 5000);\n  const material = new THREE.MeshLambertMaterial({\n    color: 'gray',\n    side: THREE.DoubleSide\n  });\n  geometry.translate(0, 0, -parameters.l.max * 2);\n  const floor = new THREE.Mesh(geometry, material);\n  floor.receiveShadow = true;\n  return floor;\n}\nexport { createFloor };","map":{"version":3,"names":["THREE","createFloor","parameters","console","log","l","max","geometry","PlaneGeometry","material","MeshLambertMaterial","color","side","DoubleSide","translate","floor","Mesh","receiveShadow"],"sources":["/Users/cabrera/Documents/PortfolioWebiste/frontend/src/gyroscopeRenderer/components/floor.js"],"sourcesContent":["import * as THREE from 'three'\n\nfunction createFloor(parameters){\n    console.log(parameters.l.max)\n    const geometry = new THREE.PlaneGeometry( 5000, 5000 );\n    const material = new THREE.MeshLambertMaterial( {color: 'gray', side: THREE.DoubleSide} );\n    geometry.translate(0, 0, -parameters.l.max * 2)\n    const floor = new THREE.Mesh( geometry, material );\n    floor.receiveShadow = true\n    return floor\n}\n\nexport { createFloor }"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,WAAWA,CAACC,UAAU,EAAC;EAC5BC,OAAO,CAACC,GAAG,CAACF,UAAU,CAACG,CAAC,CAACC,GAAG,CAAC;EAC7B,MAAMC,QAAQ,GAAG,IAAIP,KAAK,CAACQ,aAAa,CAAE,IAAI,EAAE,IAAK,CAAC;EACtD,MAAMC,QAAQ,GAAG,IAAIT,KAAK,CAACU,mBAAmB,CAAE;IAACC,KAAK,EAAE,MAAM;IAAEC,IAAI,EAAEZ,KAAK,CAACa;EAAU,CAAE,CAAC;EACzFN,QAAQ,CAACO,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAACZ,UAAU,CAACG,CAAC,CAACC,GAAG,GAAG,CAAC,CAAC;EAC/C,MAAMS,KAAK,GAAG,IAAIf,KAAK,CAACgB,IAAI,CAAET,QAAQ,EAAEE,QAAS,CAAC;EAClDM,KAAK,CAACE,aAAa,GAAG,IAAI;EAC1B,OAAOF,KAAK;AAChB;AAEA,SAASd,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}