{"ast":null,"code":"import Node, { addNodeClass } from './Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\nclass VarNode extends Node {\n  constructor(node, name = null) {\n    super();\n    this.node = node;\n    this.name = name;\n  }\n  assign(node) {\n    node.traverse((childNode, replaceNode) => {\n      if (replaceNode && childNode.uuid === this.uuid) {\n        replaceNode(this.node);\n      }\n    });\n    this.node = node;\n    return this;\n  }\n  isGlobal() {\n    return true;\n  }\n  getHash(builder) {\n    return this.name || super.getHash(builder);\n  }\n  getNodeType(builder) {\n    return this.node.getNodeType(builder);\n  }\n  generate(builder) {\n    const node = this.node;\n    const name = this.name;\n    if (name === null && node.isTempNode === true) {\n      return node.build(builder);\n    }\n    const type = builder.getVectorType(this.getNodeType(builder));\n    const snippet = node.build(builder, type);\n    const nodeVar = builder.getVarFromNode(this, type);\n    if (name !== null) {\n      nodeVar.name = name;\n    }\n    const propertyName = builder.getPropertyName(nodeVar);\n    builder.addLineFlowCode(`${propertyName} = ${snippet}`);\n    return propertyName;\n  }\n}\nexport default VarNode;\nexport const temp = nodeProxy(VarNode);\naddNodeElement('temp', temp);\naddNodeClass('VarNode', VarNode);","map":{"version":3,"names":["Node","addNodeClass","addNodeElement","nodeProxy","VarNode","constructor","node","name","assign","traverse","childNode","replaceNode","uuid","isGlobal","getHash","builder","getNodeType","generate","isTempNode","build","type","getVectorType","snippet","nodeVar","getVarFromNode","propertyName","getPropertyName","addLineFlowCode","temp"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/core/VarNode.js"],"sourcesContent":["import Node, { addNodeClass } from './Node.js';\nimport { addNodeElement, nodeProxy } from '../shadernode/ShaderNode.js';\n\nclass VarNode extends Node {\n\n\tconstructor( node, name = null ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.name = name;\n\n\t}\n\n\tassign( node ) {\n\n\t\tnode.traverse( ( childNode, replaceNode ) => {\n\n\t\t\tif ( replaceNode && childNode.uuid === this.uuid ) {\n\n\t\t\t\treplaceNode( this.node );\n\n\t\t\t}\n\n\t\t} );\n\t\tthis.node = node;\n\t\treturn this;\n\n\t}\n\n\tisGlobal() {\n\n\t\treturn true;\n\n\t}\n\n\tgetHash( builder ) {\n\n\t\treturn this.name || super.getHash( builder );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.node.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst node = this.node;\n\t\tconst name = this.name;\n\n\t\tif ( name === null && node.isTempNode === true ) {\n\n\t\t\treturn node.build( builder );\n\n\t\t}\n\n\t\tconst type = builder.getVectorType( this.getNodeType( builder ) );\n\n\t\tconst snippet = node.build( builder, type );\n\t\tconst nodeVar = builder.getVarFromNode( this, type );\n\n\t\tif ( name !== null ) {\n\n\t\t\tnodeVar.name = name;\n\n\t\t}\n\n\t\tconst propertyName = builder.getPropertyName( nodeVar );\n\n\t\tbuilder.addLineFlowCode( `${propertyName} = ${snippet}` );\n\n\t\treturn propertyName;\n\n\t}\n\n}\n\nexport default VarNode;\n\nexport const temp = nodeProxy( VarNode );\n\naddNodeElement( 'temp', temp );\n\naddNodeClass( 'VarNode', VarNode );\n"],"mappings":"AAAA,OAAOA,IAAI,IAAIC,YAAY,QAAQ,WAAW;AAC9C,SAASC,cAAc,EAAEC,SAAS,QAAQ,6BAA6B;AAEvE,MAAMC,OAAO,SAASJ,IAAI,CAAC;EAE1BK,WAAWA,CAAEC,IAAI,EAAEC,IAAI,GAAG,IAAI,EAAG;IAEhC,KAAK,CAAC,CAAC;IAEP,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;EAEjB;EAEAC,MAAMA,CAAEF,IAAI,EAAG;IAEdA,IAAI,CAACG,QAAQ,CAAE,CAAEC,SAAS,EAAEC,WAAW,KAAM;MAE5C,IAAKA,WAAW,IAAID,SAAS,CAACE,IAAI,KAAK,IAAI,CAACA,IAAI,EAAG;QAElDD,WAAW,CAAE,IAAI,CAACL,IAAK,CAAC;MAEzB;IAED,CAAE,CAAC;IACH,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,OAAO,IAAI;EAEZ;EAEAO,QAAQA,CAAA,EAAG;IAEV,OAAO,IAAI;EAEZ;EAEAC,OAAOA,CAAEC,OAAO,EAAG;IAElB,OAAO,IAAI,CAACR,IAAI,IAAI,KAAK,CAACO,OAAO,CAAEC,OAAQ,CAAC;EAE7C;EAEAC,WAAWA,CAAED,OAAO,EAAG;IAEtB,OAAO,IAAI,CAACT,IAAI,CAACU,WAAW,CAAED,OAAQ,CAAC;EAExC;EAEAE,QAAQA,CAAEF,OAAO,EAAG;IAEnB,MAAMT,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,MAAMC,IAAI,GAAG,IAAI,CAACA,IAAI;IAEtB,IAAKA,IAAI,KAAK,IAAI,IAAID,IAAI,CAACY,UAAU,KAAK,IAAI,EAAG;MAEhD,OAAOZ,IAAI,CAACa,KAAK,CAAEJ,OAAQ,CAAC;IAE7B;IAEA,MAAMK,IAAI,GAAGL,OAAO,CAACM,aAAa,CAAE,IAAI,CAACL,WAAW,CAAED,OAAQ,CAAE,CAAC;IAEjE,MAAMO,OAAO,GAAGhB,IAAI,CAACa,KAAK,CAAEJ,OAAO,EAAEK,IAAK,CAAC;IAC3C,MAAMG,OAAO,GAAGR,OAAO,CAACS,cAAc,CAAE,IAAI,EAAEJ,IAAK,CAAC;IAEpD,IAAKb,IAAI,KAAK,IAAI,EAAG;MAEpBgB,OAAO,CAAChB,IAAI,GAAGA,IAAI;IAEpB;IAEA,MAAMkB,YAAY,GAAGV,OAAO,CAACW,eAAe,CAAEH,OAAQ,CAAC;IAEvDR,OAAO,CAACY,eAAe,CAAG,GAAEF,YAAa,MAAKH,OAAQ,EAAE,CAAC;IAEzD,OAAOG,YAAY;EAEpB;AAED;AAEA,eAAerB,OAAO;AAEtB,OAAO,MAAMwB,IAAI,GAAGzB,SAAS,CAAEC,OAAQ,CAAC;AAExCF,cAAc,CAAE,MAAM,EAAE0B,IAAK,CAAC;AAE9B3B,YAAY,CAAE,SAAS,EAAEG,OAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}