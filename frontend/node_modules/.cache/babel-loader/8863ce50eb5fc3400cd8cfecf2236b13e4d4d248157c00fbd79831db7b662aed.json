{"ast":null,"code":"// import { Clock } from \"three\";\n\nclass Loop {\n  constructor(camera, scene, renderer) {\n    this.camera = camera;\n    this.scene = scene;\n    this.renderer = renderer;\n    this.updatables = [];\n    this.solution = [];\n    this.id = null;\n    this.frameNum = 0;\n  }\n\n  // start(){\n  //   this.id = requestAnimationFrame(this.start)\n  //   let lenSolution = this.solution.length\n  //     for(const object of this.updatables) {\n  //       object.tick(this.solution[i]);\n  //     }\n\n  //     i = i + 1\n  //     this.renderer.render(this.scene, this.camera)\n\n  //     if (i >= lenSolution){\n  //       this.stop() \n  //     }\n  // }\n\n  // stop(){\n  //   cancelAnimationFrame(this.id)\n  //   this.i = 0\n  // }\n\n  start() {\n    console.log(\"STARTED\");\n    let i = 1;\n    let lenSolution = this.solution.length;\n    this.renderer.setAnimationLoop(() => {\n      for (const object of this.updatables) {\n        object.tick(this.solution[i]);\n      }\n      i = i + 1;\n      this.renderer.render(this.scene, this.camera);\n      if (i >= lenSolution) {\n        this.stop();\n      }\n    });\n  }\n  stop() {\n    this.renderer.setAnimationLoop(null);\n  }\n  tick() {\n    for (const object of this.updatables) {\n      object.tick();\n    }\n  }\n}\nexport { Loop };","map":{"version":3,"names":["Loop","constructor","camera","scene","renderer","updatables","solution","id","frameNum","start","console","log","i","lenSolution","length","setAnimationLoop","object","tick","render","stop"],"sources":["/Users/cabrera/Documents/PortfolioWebiste/frontend/src/gyroscopeRenderer/systems/Loop.js"],"sourcesContent":["// import { Clock } from \"three\";\n\nclass Loop {\n  constructor(camera, scene, renderer) {\n    this.camera = camera\n    this.scene = scene\n    this.renderer = renderer\n    this.updatables = []\n    this.solution = []\n    this.id = null\n    this.frameNum = 0\n  }\n\n  // start(){\n  //   this.id = requestAnimationFrame(this.start)\n  //   let lenSolution = this.solution.length\n  //     for(const object of this.updatables) {\n  //       object.tick(this.solution[i]);\n  //     }\n\n  //     i = i + 1\n  //     this.renderer.render(this.scene, this.camera)\n\n  //     if (i >= lenSolution){\n  //       this.stop() \n  //     }\n  // }\n\n  // stop(){\n  //   cancelAnimationFrame(this.id)\n  //   this.i = 0\n  // }\n\n   start() {\n    console.log(\"STARTED\")\n    let i = 1\n    let lenSolution = this.solution.length\n    this.renderer.setAnimationLoop(() => {\n      for(const object of this.updatables) {\n        object.tick(this.solution[i]);\n      }\n\n      i = i + 1\n      this.renderer.render(this.scene, this.camera)\n\n      if (i >= lenSolution){\n        this.stop() \n      }\n    })\n  }\n\n  stop() {\n    this.renderer.setAnimationLoop(null);\n  }\n  \n  tick() {\n    for (const object of this.updatables){\n      object.tick()\n    }\n  }\n}\n\nexport { Loop };"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,CAAC;EACTC,WAAWA,CAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAE;IACnC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,EAAE,GAAG,IAAI;IACd,IAAI,CAACC,QAAQ,GAAG,CAAC;EACnB;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAECC,KAAKA,CAAA,EAAG;IACPC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,IAAIC,CAAC,GAAG,CAAC;IACT,IAAIC,WAAW,GAAG,IAAI,CAACP,QAAQ,CAACQ,MAAM;IACtC,IAAI,CAACV,QAAQ,CAACW,gBAAgB,CAAC,MAAM;MACnC,KAAI,MAAMC,MAAM,IAAI,IAAI,CAACX,UAAU,EAAE;QACnCW,MAAM,CAACC,IAAI,CAAC,IAAI,CAACX,QAAQ,CAACM,CAAC,CAAC,CAAC;MAC/B;MAEAA,CAAC,GAAGA,CAAC,GAAG,CAAC;MACT,IAAI,CAACR,QAAQ,CAACc,MAAM,CAAC,IAAI,CAACf,KAAK,EAAE,IAAI,CAACD,MAAM,CAAC;MAE7C,IAAIU,CAAC,IAAIC,WAAW,EAAC;QACnB,IAAI,CAACM,IAAI,CAAC,CAAC;MACb;IACF,CAAC,CAAC;EACJ;EAEAA,IAAIA,CAAA,EAAG;IACL,IAAI,CAACf,QAAQ,CAACW,gBAAgB,CAAC,IAAI,CAAC;EACtC;EAEAE,IAAIA,CAAA,EAAG;IACL,KAAK,MAAMD,MAAM,IAAI,IAAI,CAACX,UAAU,EAAC;MACnCW,MAAM,CAACC,IAAI,CAAC,CAAC;IACf;EACF;AACF;AAEA,SAASjB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}