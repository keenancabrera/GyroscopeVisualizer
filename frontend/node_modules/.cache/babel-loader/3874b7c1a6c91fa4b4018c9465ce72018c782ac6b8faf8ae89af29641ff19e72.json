{"ast":null,"code":"import { Clock } from \"three\";\nconst clock = new Clock();\nclass Loop {\n  constructor(camera, scene, renderer, controls) {\n    this.camera = camera;\n    this.scene = scene;\n    this.renderer = renderer;\n    this.controls = controls;\n    this.updatables = [];\n    this.solution = [];\n    this.state = {};\n    this.i = 0;\n    this.stepSize = 1 / 240;\n  }\n  start(state) {\n    this.i = 0;\n    let lenSolution = this.solution.length;\n    clock.getDelta();\n    this.renderer.setAnimationLoop(() => {\n      if (this.i >= lenSolution) {\n        this.tick();\n      }\n      this.renderer.render(this.scene, this.camera);\n      this.controls.update();\n      if (this.i >= lenSolution) {\n        this.stop(state);\n      }\n    });\n  }\n  stop(state) {\n    // this.renderer.setAnimationLoop(null);\n    for (const object of this.updatables) {\n      object.tick(state);\n    }\n    this.renderer.render(this.scene, this.camera);\n  }\n  tick() {\n    let delta = clock.getDelta();\n    for (const object of this.updatables) {\n      object.tick(this.solution[this.i]);\n    }\n    this.i += Math.round(delta / this.stepSize);\n  }\n}\nexport { Loop };","map":{"version":3,"names":["Clock","clock","Loop","constructor","camera","scene","renderer","controls","updatables","solution","state","i","stepSize","start","lenSolution","length","getDelta","setAnimationLoop","tick","render","update","stop","object","delta","Math","round"],"sources":["/Users/cabrera/Documents/PortfolioWebiste/frontend/src/gyroscopeRenderer/systems/Loop.js"],"sourcesContent":["import { Clock } from \"three\";\n\nconst clock = new Clock()\n\nclass Loop {\n  constructor(camera, scene, renderer, controls) {\n    this.camera = camera\n    this.scene = scene\n    this.renderer = renderer\n    this.controls = controls\n    this.updatables = []\n    this.solution = []\n    this.state = {}\n    this.i = 0\n    this.stepSize = 1/240\n  }\n\n   start(state) {\n    this.i = 0\n    let lenSolution = this.solution.length\n    clock.getDelta()\n    this.renderer.setAnimationLoop(() => {\n      if(this.i >= lenSolution){this.tick()}\n      this.renderer.render(this.scene, this.camera)\n      this.controls.update()\n      if (this.i >= lenSolution){\n        this.stop(state) \n      }\n    })\n  }\n\n  stop(state) {\n    // this.renderer.setAnimationLoop(null);\n    for(const object of this.updatables){\n      object.tick(state)\n    }\n    this.renderer.render(this.scene, this.camera)\n  }\n  \n  tick() {\n    let delta = clock.getDelta()\n    for (const object of this.updatables){\n      object.tick(this.solution[this.i])\n    }\n    this.i += Math.round(delta/this.stepSize)\n  }\n}\n\nexport { Loop };"],"mappings":"AAAA,SAASA,KAAK,QAAQ,OAAO;AAE7B,MAAMC,KAAK,GAAG,IAAID,KAAK,CAAC,CAAC;AAEzB,MAAME,IAAI,CAAC;EACTC,WAAWA,CAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAC7C,IAAI,CAACH,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACC,CAAC,GAAG,CAAC;IACV,IAAI,CAACC,QAAQ,GAAG,CAAC,GAAC,GAAG;EACvB;EAECC,KAAKA,CAACH,KAAK,EAAE;IACZ,IAAI,CAACC,CAAC,GAAG,CAAC;IACV,IAAIG,WAAW,GAAG,IAAI,CAACL,QAAQ,CAACM,MAAM;IACtCd,KAAK,CAACe,QAAQ,CAAC,CAAC;IAChB,IAAI,CAACV,QAAQ,CAACW,gBAAgB,CAAC,MAAM;MACnC,IAAG,IAAI,CAACN,CAAC,IAAIG,WAAW,EAAC;QAAC,IAAI,CAACI,IAAI,CAAC,CAAC;MAAA;MACrC,IAAI,CAACZ,QAAQ,CAACa,MAAM,CAAC,IAAI,CAACd,KAAK,EAAE,IAAI,CAACD,MAAM,CAAC;MAC7C,IAAI,CAACG,QAAQ,CAACa,MAAM,CAAC,CAAC;MACtB,IAAI,IAAI,CAACT,CAAC,IAAIG,WAAW,EAAC;QACxB,IAAI,CAACO,IAAI,CAACX,KAAK,CAAC;MAClB;IACF,CAAC,CAAC;EACJ;EAEAW,IAAIA,CAACX,KAAK,EAAE;IACV;IACA,KAAI,MAAMY,MAAM,IAAI,IAAI,CAACd,UAAU,EAAC;MAClCc,MAAM,CAACJ,IAAI,CAACR,KAAK,CAAC;IACpB;IACA,IAAI,CAACJ,QAAQ,CAACa,MAAM,CAAC,IAAI,CAACd,KAAK,EAAE,IAAI,CAACD,MAAM,CAAC;EAC/C;EAEAc,IAAIA,CAAA,EAAG;IACL,IAAIK,KAAK,GAAGtB,KAAK,CAACe,QAAQ,CAAC,CAAC;IAC5B,KAAK,MAAMM,MAAM,IAAI,IAAI,CAACd,UAAU,EAAC;MACnCc,MAAM,CAACJ,IAAI,CAAC,IAAI,CAACT,QAAQ,CAAC,IAAI,CAACE,CAAC,CAAC,CAAC;IACpC;IACA,IAAI,CAACA,CAAC,IAAIa,IAAI,CAACC,KAAK,CAACF,KAAK,GAAC,IAAI,CAACX,QAAQ,CAAC;EAC3C;AACF;AAEA,SAASV,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}