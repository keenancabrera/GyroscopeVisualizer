{"ast":null,"code":"import { gyroscopeAnimation } from '@/gyroscopeRenderer/gyroscopeAnimation';\nexport default {\n  name: 'gyroscopeSimulator',\n  props: {\n    solution: Object,\n    parameters: Object,\n    state: Object,\n    isSolving: Boolean\n  },\n  watch: {\n    solution: {\n      handler() {\n        this.gyroscopeAnimation.updateSolution(this.solution);\n      },\n      deep: false,\n      flush: 'post'\n    },\n    parameters: {\n      handler() {\n        this.gyroscopeAnimation.updateParameters(this.parameters);\n      },\n      deep: true\n    },\n    state: {\n      handler() {\n        this.gyroscopeAnimation.updateState(this.state);\n      },\n      deep: true\n    },\n    isSolving: {\n      handler() {\n        if (this.isSolving == false) {\n          this.gyroscopeAnimation.pause(this.state);\n        }\n      }\n    }\n  },\n  data() {\n    return {};\n  },\n  mounted() {\n    this.gyroscopeAnimation = new gyroscopeAnimation(this.$refs.sceneContainer, this.parameters, this.state, this.solution);\n    this.gyroscopeAnimation.render();\n  }\n};","map":{"version":3,"names":["gyroscopeAnimation","name","props","solution","Object","parameters","state","isSolving","Boolean","watch","handler","updateSolution","deep","flush","updateParameters","updateState","pause","data","mounted","$refs","sceneContainer","render"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/src/components/gyroscopeSimulator.vue"],"sourcesContent":["<template>\n  <div ref=\"sceneContainer\" class=\"scene-container\"></div>\n</template>\n\n<script>\nimport { gyroscopeAnimation } from '@/gyroscopeRenderer/gyroscopeAnimation';\n\nexport default {\n  name: 'gyroscopeSimulator',\n  props: {\n    solution: Object,\n    parameters: Object,\n    state: Object,\n    isSolving: Boolean\n  },\n  watch: {\n    solution : {\n      handler() {\n        this.gyroscopeAnimation.updateSolution(this.solution);\n      },\n      deep: false,\n      flush: 'post'\n    },\n    parameters : {\n      handler(){\n        this.gyroscopeAnimation.updateParameters((this.parameters))\n      },\n      deep : true\n    },\n    state : {\n      handler(){\n        this.gyroscopeAnimation.updateState((this.state))\n      },\n      deep : true\n    },\n    isSolving : {\n      handler(){\n        if(this.isSolving == false){\n          this.gyroscopeAnimation.pause((this.state))\n        }\n      }\n    }\n  },\n  data() {\n    return {\n    }\n  },\n  mounted() { \n    this.gyroscopeAnimation = new gyroscopeAnimation(this.$refs.sceneContainer, (this.parameters), (this.state), (this.solution))\n    this.gyroscopeAnimation.render()\n  },\n};\n</script>\n\n<style scoped>\n.scene-container {\n  width: 100%;\n  height: 95vh;\n}\n</style>\n"],"mappings":"AAKA,SAASA,kBAAiB,QAAS,wCAAwC;AAE3E,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE;IACLC,QAAQ,EAAEC,MAAM;IAChBC,UAAU,EAAED,MAAM;IAClBE,KAAK,EAAEF,MAAM;IACbG,SAAS,EAAEC;EACb,CAAC;EACDC,KAAK,EAAE;IACLN,QAAO,EAAI;MACTO,OAAOA,CAAA,EAAG;QACR,IAAI,CAACV,kBAAkB,CAACW,cAAc,CAAC,IAAI,CAACR,QAAQ,CAAC;MACvD,CAAC;MACDS,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE;IACT,CAAC;IACDR,UAAS,EAAI;MACXK,OAAOA,CAAA,EAAE;QACP,IAAI,CAACV,kBAAkB,CAACc,gBAAgB,CAAE,IAAI,CAACT,UAAW;MAC5D,CAAC;MACDO,IAAG,EAAI;IACT,CAAC;IACDN,KAAI,EAAI;MACNI,OAAOA,CAAA,EAAE;QACP,IAAI,CAACV,kBAAkB,CAACe,WAAW,CAAE,IAAI,CAACT,KAAM;MAClD,CAAC;MACDM,IAAG,EAAI;IACT,CAAC;IACDL,SAAQ,EAAI;MACVG,OAAOA,CAAA,EAAE;QACP,IAAG,IAAI,CAACH,SAAQ,IAAK,KAAK,EAAC;UACzB,IAAI,CAACP,kBAAkB,CAACgB,KAAK,CAAE,IAAI,CAACV,KAAM;QAC5C;MACF;IACF;EACF,CAAC;EACDW,IAAIA,CAAA,EAAG;IACL,OAAO,CACP;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAClB,kBAAiB,GAAI,IAAIA,kBAAkB,CAAC,IAAI,CAACmB,KAAK,CAACC,cAAc,EAAG,IAAI,CAACf,UAAU,EAAI,IAAI,CAACC,KAAK,EAAI,IAAI,CAACH,QAAS;IAC5H,IAAI,CAACH,kBAAkB,CAACqB,MAAM,CAAC;EACjC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}