{"ast":null,"code":"import Object3DNode from './Object3DNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { label } from '../core/ContextNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\nclass CameraNode extends Object3DNode {\n  constructor(scope = CameraNode.POSITION) {\n    super(scope);\n  }\n  getNodeType(builder) {\n    const scope = this.scope;\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      return 'mat4';\n    } else if (scope === CameraNode.NEAR || scope === CameraNode.FAR) {\n      return 'float';\n    }\n    return super.getNodeType(builder);\n  }\n  update(frame) {\n    const camera = frame.camera;\n    const uniformNode = this._uniformNode;\n    const scope = this.scope;\n    if (scope === CameraNode.VIEW_MATRIX) {\n      uniformNode.value = camera.matrixWorldInverse;\n    } else if (scope === CameraNode.PROJECTION_MATRIX) {\n      uniformNode.value = camera.projectionMatrix;\n    } else if (scope === CameraNode.NEAR) {\n      uniformNode.value = camera.near;\n    } else if (scope === CameraNode.FAR) {\n      uniformNode.value = camera.far;\n    } else {\n      this.object3d = camera;\n      super.update(frame);\n    }\n  }\n  generate(builder) {\n    const scope = this.scope;\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      this._uniformNode.nodeType = 'mat4';\n    } else if (scope === CameraNode.NEAR || scope === CameraNode.FAR) {\n      this._uniformNode.nodeType = 'float';\n    }\n    return super.generate(builder);\n  }\n}\nCameraNode.PROJECTION_MATRIX = 'projectionMatrix';\nCameraNode.NEAR = 'near';\nCameraNode.FAR = 'far';\nexport default CameraNode;\nexport const cameraProjectionMatrix = label(nodeImmutable(CameraNode, CameraNode.PROJECTION_MATRIX), 'projectionMatrix');\nexport const cameraNear = nodeImmutable(CameraNode, CameraNode.NEAR);\nexport const cameraFar = nodeImmutable(CameraNode, CameraNode.FAR);\nexport const cameraViewMatrix = nodeImmutable(CameraNode, CameraNode.VIEW_MATRIX);\nexport const cameraNormalMatrix = nodeImmutable(CameraNode, CameraNode.NORMAL_MATRIX);\nexport const cameraWorldMatrix = nodeImmutable(CameraNode, CameraNode.WORLD_MATRIX);\nexport const cameraPosition = nodeImmutable(CameraNode, CameraNode.POSITION);\naddNodeClass('CameraNode', CameraNode);","map":{"version":3,"names":["Object3DNode","addNodeClass","label","nodeImmutable","CameraNode","constructor","scope","POSITION","getNodeType","builder","PROJECTION_MATRIX","NEAR","FAR","update","frame","camera","uniformNode","_uniformNode","VIEW_MATRIX","value","matrixWorldInverse","projectionMatrix","near","far","object3d","generate","nodeType","cameraProjectionMatrix","cameraNear","cameraFar","cameraViewMatrix","cameraNormalMatrix","NORMAL_MATRIX","cameraWorldMatrix","WORLD_MATRIX","cameraPosition"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/accessors/CameraNode.js"],"sourcesContent":["import Object3DNode from './Object3DNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { label } from '../core/ContextNode.js';\nimport { nodeImmutable } from '../shadernode/ShaderNode.js';\n\nclass CameraNode extends Object3DNode {\n\n\tconstructor( scope = CameraNode.POSITION ) {\n\n\t\tsuper( scope );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX ) {\n\n\t\t\treturn 'mat4';\n\n\t\t} else if ( scope === CameraNode.NEAR || scope === CameraNode.FAR ) {\n\n\t\t\treturn 'float';\n\n\t\t}\n\n\t\treturn super.getNodeType( builder );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst camera = frame.camera;\n\t\tconst uniformNode = this._uniformNode;\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.VIEW_MATRIX ) {\n\n\t\t\tuniformNode.value = camera.matrixWorldInverse;\n\n\t\t} else if ( scope === CameraNode.PROJECTION_MATRIX ) {\n\n\t\t\tuniformNode.value = camera.projectionMatrix;\n\n\t\t} else if ( scope === CameraNode.NEAR ) {\n\n\t\t\tuniformNode.value = camera.near;\n\n\t\t} else if ( scope === CameraNode.FAR ) {\n\n\t\t\tuniformNode.value = camera.far;\n\n\t\t} else {\n\n\t\t\tthis.object3d = camera;\n\n\t\t\tsuper.update( frame );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX ) {\n\n\t\t\tthis._uniformNode.nodeType = 'mat4';\n\n\t\t} else if ( scope === CameraNode.NEAR || scope === CameraNode.FAR ) {\n\n\t\t\tthis._uniformNode.nodeType = 'float';\n\n\t\t}\n\n\t\treturn super.generate( builder );\n\n\t}\n\n}\n\nCameraNode.PROJECTION_MATRIX = 'projectionMatrix';\nCameraNode.NEAR = 'near';\nCameraNode.FAR = 'far';\n\nexport default CameraNode;\n\nexport const cameraProjectionMatrix = label( nodeImmutable( CameraNode, CameraNode.PROJECTION_MATRIX ), 'projectionMatrix' );\nexport const cameraNear = nodeImmutable( CameraNode, CameraNode.NEAR );\nexport const cameraFar = nodeImmutable( CameraNode, CameraNode.FAR );\nexport const cameraViewMatrix = nodeImmutable( CameraNode, CameraNode.VIEW_MATRIX );\nexport const cameraNormalMatrix = nodeImmutable( CameraNode, CameraNode.NORMAL_MATRIX );\nexport const cameraWorldMatrix = nodeImmutable( CameraNode, CameraNode.WORLD_MATRIX );\nexport const cameraPosition = nodeImmutable( CameraNode, CameraNode.POSITION );\n\naddNodeClass( 'CameraNode', CameraNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}