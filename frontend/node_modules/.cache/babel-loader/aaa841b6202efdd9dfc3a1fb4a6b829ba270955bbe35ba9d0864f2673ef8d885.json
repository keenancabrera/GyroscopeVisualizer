{"ast":null,"code":"import { tslFn } from '../../shadernode/ShaderNode.js';\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nconst D_GGX = tslFn(inputs => {\n  const {\n    alpha,\n    dotNH\n  } = inputs;\n  const a2 = alpha.pow2();\n  const denom = dotNH.pow2().mul(a2.oneMinus()).oneMinus(); // avoid alpha = 0 with dotNH = 1\n\n  return a2.div(denom.pow2()).mul(1 / Math.PI);\n}); // validated\n\nexport default D_GGX;","map":{"version":3,"names":["tslFn","D_GGX","inputs","alpha","dotNH","a2","pow2","denom","mul","oneMinus","div","Math","PI"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/functions/BSDF/D_GGX.js"],"sourcesContent":["import { tslFn } from '../../shadernode/ShaderNode.js';\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nconst D_GGX = tslFn( ( inputs ) => {\n\n\tconst { alpha, dotNH } = inputs;\n\n\tconst a2 = alpha.pow2();\n\n\tconst denom = dotNH.pow2().mul( a2.oneMinus() ).oneMinus(); // avoid alpha = 0 with dotNH = 1\n\n\treturn a2.div( denom.pow2() ).mul( 1 / Math.PI );\n\n} ); // validated\n\nexport default D_GGX;\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gCAAgC;;AAEtD;AACA;AACA;AACA,MAAMC,KAAK,GAAGD,KAAK,CAAIE,MAAM,IAAM;EAElC,MAAM;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGF,MAAM;EAE/B,MAAMG,EAAE,GAAGF,KAAK,CAACG,IAAI,CAAC,CAAC;EAEvB,MAAMC,KAAK,GAAGH,KAAK,CAACE,IAAI,CAAC,CAAC,CAACE,GAAG,CAAEH,EAAE,CAACI,QAAQ,CAAC,CAAE,CAAC,CAACA,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE5D,OAAOJ,EAAE,CAACK,GAAG,CAAEH,KAAK,CAACD,IAAI,CAAC,CAAE,CAAC,CAACE,GAAG,CAAE,CAAC,GAAGG,IAAI,CAACC,EAAG,CAAC;AAEjD,CAAE,CAAC,CAAC,CAAC;;AAEL,eAAeX,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}