{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { pushScopeId } from 'vue'\nimport gyroscopeSimulator from './components/gyroscopeSimulator';\n// import { popScopeId } from 'vue'\n// import { ref, onMounted } from 'vue'\nexport default {\n  name: 'app',\n  components: {\n    gyroscopeSimulator\n  },\n  data: () => ({\n    parameters: {\n      \"l\": {\n        value: 0.6,\n        min: 0,\n        max: 20\n      },\n      \"a\": {\n        value: 0.2,\n        min: 0,\n        max: 10\n      },\n      \"h\": {\n        value: 0.2,\n        min: 0,\n        max: 10\n      },\n      \"g\": {\n        value: -9.8,\n        min: 0,\n        max: 10\n      }\n    },\n    solverParameters: {\n      \"stepSize\": 1 / 60,\n      \"numSteps\": 1200,\n      't0': 0\n    },\n    animationParameters: {\n      \"rstride\": 15,\n      \"cstride\": 5,\n      \"nSample\": 45,\n      \"dpi\": 300,\n      \"transparency\": 0.8\n    },\n    initialState: {\n      \"theta\": {\n        value: 0.6,\n        min: 0,\n        max: 6.28\n      },\n      \"phi\": {\n        value: 0.6,\n        min: 0,\n        max: 6.28\n      },\n      \"psi\": {\n        value: 0.6,\n        min: 0,\n        max: 6.28\n      },\n      \"thetaVel\": {\n        value: 0.6,\n        min: -12,\n        max: 12\n      },\n      \"phiVel\": {\n        value: 0.6,\n        min: -12,\n        max: 12\n      },\n      \"psiVel\": {\n        value: 0.6,\n        min: -200,\n        max: 200\n      },\n      'pTheta': null,\n      'pPhi': null,\n      'pPsi': null\n    },\n    solution: null\n  }),\n  mounted() {\n    this.getGeneralizedMomenta();\n    console.log('Starting Runge Kutta');\n    this.solution = this.rungeKutta(this.gyroscope, [this.theta.value, this.phi.value, this.psi.value, this.pTheta, this.pPhi, this.pPsi], this.solverParameters.t0, this.solverParameters.stepSize, this.numSteps);\n    console.log(this.solution);\n  },\n  methods: {\n    gyroscope(stateVector) {\n      // returns dstateVector/dt\n      let [theta, phi, psi, pTheta, pPhi, pPsi] = stateVector;\n      theta = psi;\n      let thetaVel = pPhi / this.l.value ** 2;\n      let phiVel = (pTheta - pPsi * Math.cos(phi)) / (this.a.value ** 2 * Math.sin(phi) ** 2);\n      let psiVel = pPsi / this.a.value ** 2 - thetaVel * Math.cos(phi);\n      let pThetaDot = 0;\n      let pPhiDot = (this.l.value ** 2 - this.a.value ** 2) * Math.sin(phi) * Math.cos(phi) * thetaVel ** 2 - (this.g.value * this.l.value - this.a.value ** 2 * psiVel * thetaVel) * Math.sin(phi);\n      let pPsiDot = 0;\n      return [thetaVel, psiVel, phiVel, pThetaDot, pPhiDot, pPsiDot];\n    },\n    getGeneralizedMomenta() {\n      this.initialState.pTheta = (this.parameters.l ** 2 * Math.sin(this.initialState.phi.value) ** 2 + this.parameters.a ** 2 * Math.cos(this.initialState.phi.value) ** 2) * this.initialState.thetaVel.value + this.parameters.a ** 2 * this.initialState.psiVel.value * Math.cos(this.initialState.phi.value);\n      this.initialState.pPhi = this.parameters.l ** 2 * this.initialState.phiVel.value;\n      this.initialState.pPsi = this.parameters.a ** 2 * (this.initialState.thetaVel.value * Math.cos(this.initialState.phi.value) + this.initialState.psiVel.value);\n    },\n    rungeKutta(engine, state, t0, stepSize, numSteps) {\n      // Helper functions for rungeKutta solver\n      function numericAdd(a, b) {\n        return a.map((ai, i) => ai + b[i]);\n      }\n      function numericMul(scalar, vector) {\n        return vector.map(vi => scalar * vi);\n      }\n\n      // Variable Instantiation\n      const result = [];\n      result.push({\n        t: t0,\n        state: state\n      });\n\n      // Solve\n      for (let i = 1; i <= numSteps; i++) {\n        const t = t0 + i * stepSize;\n        const k1 = numericMul(stepSize, engine(t0, state));\n        const k2 = numericMul(stepSize, engine(t0 + stepSize / 2, numericAdd(state, numericMul(0.5, k1))));\n        const k3 = numericMul(stepSize, engine(t0 + stepSize / 2, numericAdd(state, numericMul(0.5, k2))));\n        const k4 = numericMul(stepSize, engine(t0 + stepSize, numericAdd(state, k3)));\n        state = numericAdd(state, numericMul(1 / 6, numericAdd(k1, numericAdd(numericMul(2, k2), numericAdd(numericMul(2, k3), k4)))));\n        t0 = t;\n        result.push({\n          t,\n          state: state\n        });\n      }\n      return result;\n    }\n  }\n};","map":{"version":3,"names":["gyroscopeSimulator","name","components","data","parameters","value","min","max","solverParameters","animationParameters","initialState","solution","mounted","getGeneralizedMomenta","console","log","rungeKutta","gyroscope","theta","phi","psi","pTheta","pPhi","pPsi","t0","stepSize","numSteps","methods","stateVector","thetaVel","l","phiVel","Math","cos","a","sin","psiVel","pThetaDot","pPhiDot","g","pPsiDot","engine","state","numericAdd","b","map","ai","i","numericMul","scalar","vector","vi","result","push","t","k1","k2","k3","k4"],"sources":["/Users/cabrera/Documents/PortfolioWebiste/frontend/src/App.vue"],"sourcesContent":["<template>\n  <v-app id=\"gyro\">\n    <v-main class=\"bg-grey-lighten-3 \">\n      <v-container :fluid=\"true\" class=\"ma-0 pa-2 v-flex full-width\">\n        <v-row>\n          <v-col cols=\"4\">\n            <v-card rounded=\"lg\">\n\n              <v-card-item>\n                <v-card-title>Parameters</v-card-title>\n                <v-card-subtitle>Set dimensions of gyroscope and strength of gravity</v-card-subtitle>\n              </v-card-item>\n\n              <v-card-text>\n                <v-slider \n                  v-for=\"(parameter, key) in parameters\" \n                  :min=\"parameter.min\" \n                  :max=\"parameter.max\" \n                  :thumb-label=\"'always'\"\n                  :label = 'key + \":\"'\n                  v-model=\"parameter.value\" \n                  :key=\"key\"\n                  class=\"mt-5\">\n                </v-slider>                \n              </v-card-text>\n            </v-card>\n\n            <br>\n\n            <v-card rounded=\"lg\">\n              \n              <v-card-item>\n                <v-card-title>Initial State</v-card-title>\n                <v-card-subtitle>Set initial state of gyroscope</v-card-subtitle>\n              </v-card-item>\n\n              <v-card-text>\n                <v-slider \n                  v-for=\"(parameter, key) in initialState.filter((elem) => ((typeof elem === 'object') && elem != null))\" \n                  :min=\"parameter.min\" \n                  :max=\"parameter.max\" \n                  :thumb-label=\"'always'\"\n                  :label = 'key + \":\"'\n                  v-model=\"parameter.value\" \n                  :key=\"key\"\n                  class=\"mt-5\">\n                </v-slider>                \n              </v-card-text>\n            </v-card>\n          </v-col>\n\n          <v-col cols=\"8\">\n            <v-sheet id=\"gyro\"\n              rounded=\"lg\"\n            >\n              <gyroscopeSimulator></gyroscopeSimulator>\n            </v-sheet>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\n// import { pushScopeId } from 'vue'\nimport gyroscopeSimulator from './components/gyroscopeSimulator'\n// import { popScopeId } from 'vue'\n// import { ref, onMounted } from 'vue'\n  export default {\n    name: 'app',\n    components: {\n      gyroscopeSimulator\n    },\n    data: () => ({\n      parameters : {\n        \"l\" : {value: 0.6, min: 0, max: 20},\n        \"a\" : {value: 0.2, min: 0, max: 10},\n        \"h\" : {value: 0.2, min: 0, max: 10},\n        \"g\" : {value: -9.8, min: 0, max: 10},\n      },\n      solverParameters : {\n          \"stepSize\" : 1/60,\n          \"numSteps\" : 1200,\n          't0' : 0\n      },\n      animationParameters : {\n          \"rstride\" : 15,\n          \"cstride\" : 5,\n          \"nSample\" : 45,\n          \"dpi\" : 300,\n          \"transparency\" : 0.8\n      },\n      initialState : {\n          \"theta\" : {value: 0.6, min: 0, max: 6.28},\n          \"phi\" : {value: 0.6, min: 0, max: 6.28},\n          \"psi\" : {value: 0.6, min: 0, max: 6.28},\n          \"thetaVel\": {value: 0.6, min: -12, max: 12},\n          \"phiVel\": {value: 0.6, min: -12, max: 12},\n          \"psiVel\": {value: 0.6, min: -200, max: 200},\n          'pTheta': null,\n          'pPhi' : null,\n          'pPsi' : null\n      },\n      solution: null\n    }),\n\n    mounted(){\n      this.getGeneralizedMomenta()\n      console.log('Starting Runge Kutta')\n      this.solution = this.rungeKutta(\n        this.gyroscope,\n        [this.theta.value, this.phi.value, this.psi.value, this.pTheta, this.pPhi, this.pPsi],\n        this.solverParameters.t0,\n        this.solverParameters.stepSize,\n        this.numSteps\n      )\n      console.log(this.solution)\n    },\n    methods : {\n      gyroscope(stateVector) { // returns dstateVector/dt\n          let [theta, phi, psi, pTheta, pPhi, pPsi] = stateVector\n          theta = psi\n          let thetaVel = pPhi / this.l.value**2 \n          let phiVel = (pTheta - (pPsi * Math.cos(phi)))/(this.a.value**2 * Math.sin(phi)**2) \n          let psiVel = (pPsi/this.a.value**2) - thetaVel * Math.cos(phi) \n\n          let pThetaDot = 0 \n          let pPhiDot = (this.l.value**2 - this.a.value**2)* Math.sin(phi) * Math.cos(phi) * thetaVel**2 - (this.g.value*this.l.value - this.a.value**2 * psiVel * thetaVel) * Math.sin(phi)\n          let pPsiDot = 0\n          return [thetaVel, psiVel, phiVel, pThetaDot, pPhiDot, pPsiDot];\n      },\n\n      getGeneralizedMomenta(){\n        this.initialState.pTheta = (this.parameters.l**2 * Math.sin(this.initialState.phi.value)**2 + this.parameters.a**2 * Math.cos(this.initialState.phi.value)**2)*this.initialState.thetaVel.value + this.parameters.a**2 * this.initialState.psiVel.value * Math.cos(this.initialState.phi.value)\n        this.initialState.pPhi = this.parameters.l**2 * this.initialState.phiVel.value\n        this.initialState.pPsi = this.parameters.a**2 * (this.initialState.thetaVel.value * Math.cos(this.initialState.phi.value) + this.initialState.psiVel.value)\n      },\n\n      rungeKutta(engine, state, t0, stepSize, numSteps) {\n          // Helper functions for rungeKutta solver\n          function numericAdd(a, b) {\n            return a.map((ai, i) => ai + b[i]);\n          }\n          function numericMul(scalar, vector) {\n              return vector.map(vi => scalar * vi);\n          }\n\n          // Variable Instantiation\n          const result = [];\n          result.push({ t: t0, state: state });\n\n          // Solve\n          for (let i = 1; i <= numSteps; i++) {\n              const t = t0 + i * stepSize;\n              const k1 = numericMul(stepSize, engine(t0, state));\n              const k2 = numericMul(stepSize, engine(t0 + stepSize / 2, numericAdd(state, numericMul(0.5, k1))));\n              const k3 = numericMul(stepSize, engine(t0 + stepSize / 2, numericAdd(state, numericMul(0.5, k2))));\n              const k4 = numericMul(stepSize, engine(t0 + stepSize, numericAdd(state, k3)));\n\n              state = numericAdd(state, numericMul(1 / 6, numericAdd(k1, numericAdd(numericMul(2, k2), numericAdd(numericMul(2, k3), k4)))));\n              t0 = t;\n              result.push({ t, state: state });\n          }\n          return result;\n      },\n    }\n  }\n</script>\n\n<style>\n#app{\n  width: 100%;\n  height: 100%;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}