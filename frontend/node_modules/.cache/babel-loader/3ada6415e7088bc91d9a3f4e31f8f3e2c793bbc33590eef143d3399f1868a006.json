{"ast":null,"code":"import InputNode from './InputNode.js';\nimport { addNodeClass } from './Node.js';\nimport { nodeObject, getConstNodeType } from '../shadernode/ShaderNode.js';\nclass UniformNode extends InputNode {\n  constructor(value, nodeType = null) {\n    super(value, nodeType);\n    this.isUniformNode = true;\n  }\n  getUniformHash(builder) {\n    return this.getHash(builder);\n  }\n  generate(builder, output) {\n    const type = this.getNodeType(builder);\n    const hash = this.getUniformHash(builder);\n    let sharedNode = builder.getNodeFromHash(hash);\n    if (sharedNode === undefined) {\n      builder.setHashNode(this, hash);\n      sharedNode = this;\n    }\n    const sharedNodeType = sharedNode.getInputType(builder);\n    const nodeUniform = builder.getUniformFromNode(sharedNode, sharedNodeType, builder.shaderStage, builder.context.label);\n    const propertyName = builder.getPropertyName(nodeUniform);\n    if (builder.context.label !== undefined) delete builder.context.label;\n    return builder.format(propertyName, type, output);\n  }\n}\nexport default UniformNode;\nexport const uniform = (arg1, arg2) => {\n  const nodeType = getConstNodeType(arg2 || arg1);\n\n  // @TODO: get ConstNode from .traverse() in the future\n  const value = arg1 && arg1.isNode === true ? arg1.node && arg1.node.value || arg1.value : arg1;\n  return nodeObject(new UniformNode(value, nodeType));\n};\naddNodeClass('UniformNode', UniformNode);","map":{"version":3,"names":["InputNode","addNodeClass","nodeObject","getConstNodeType","UniformNode","constructor","value","nodeType","isUniformNode","getUniformHash","builder","getHash","generate","output","type","getNodeType","hash","sharedNode","getNodeFromHash","undefined","setHashNode","sharedNodeType","getInputType","nodeUniform","getUniformFromNode","shaderStage","context","label","propertyName","getPropertyName","format","uniform","arg1","arg2","isNode","node"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/core/UniformNode.js"],"sourcesContent":["import InputNode from './InputNode.js';\nimport { addNodeClass } from './Node.js';\nimport { nodeObject, getConstNodeType } from '../shadernode/ShaderNode.js';\n\nclass UniformNode extends InputNode {\n\n\tconstructor( value, nodeType = null ) {\n\n\t\tsuper( value, nodeType );\n\n\t\tthis.isUniformNode = true;\n\n\t}\n\n\tgetUniformHash( builder ) {\n\n\t\treturn this.getHash( builder );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst hash = this.getUniformHash( builder );\n\n\t\tlet sharedNode = builder.getNodeFromHash( hash );\n\n\t\tif ( sharedNode === undefined ) {\n\n\t\t\tbuilder.setHashNode( this, hash );\n\n\t\t\tsharedNode = this;\n\n\t\t}\n\n\t\tconst sharedNodeType = sharedNode.getInputType( builder );\n\n\t\tconst nodeUniform = builder.getUniformFromNode( sharedNode, sharedNodeType, builder.shaderStage, builder.context.label );\n\t\tconst propertyName = builder.getPropertyName( nodeUniform );\n\n\t\tif ( builder.context.label !== undefined ) delete builder.context.label;\n\n\t\treturn builder.format( propertyName, type, output );\n\n\t}\n\n}\n\nexport default UniformNode;\n\nexport const uniform = ( arg1, arg2 ) => {\n\n\tconst nodeType = getConstNodeType( arg2 || arg1 );\n\n\t// @TODO: get ConstNode from .traverse() in the future\n\tconst value = ( arg1 && arg1.isNode === true ) ? ( arg1.node && arg1.node.value ) || arg1.value : arg1;\n\n\treturn nodeObject( new UniformNode( value, nodeType ) );\n\n};\n\naddNodeClass( 'UniformNode', UniformNode );\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,gBAAgB;AACtC,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,UAAU,EAAEC,gBAAgB,QAAQ,6BAA6B;AAE1E,MAAMC,WAAW,SAASJ,SAAS,CAAC;EAEnCK,WAAWA,CAAEC,KAAK,EAAEC,QAAQ,GAAG,IAAI,EAAG;IAErC,KAAK,CAAED,KAAK,EAAEC,QAAS,CAAC;IAExB,IAAI,CAACC,aAAa,GAAG,IAAI;EAE1B;EAEAC,cAAcA,CAAEC,OAAO,EAAG;IAEzB,OAAO,IAAI,CAACC,OAAO,CAAED,OAAQ,CAAC;EAE/B;EAEAE,QAAQA,CAAEF,OAAO,EAAEG,MAAM,EAAG;IAE3B,MAAMC,IAAI,GAAG,IAAI,CAACC,WAAW,CAAEL,OAAQ,CAAC;IAExC,MAAMM,IAAI,GAAG,IAAI,CAACP,cAAc,CAAEC,OAAQ,CAAC;IAE3C,IAAIO,UAAU,GAAGP,OAAO,CAACQ,eAAe,CAAEF,IAAK,CAAC;IAEhD,IAAKC,UAAU,KAAKE,SAAS,EAAG;MAE/BT,OAAO,CAACU,WAAW,CAAE,IAAI,EAAEJ,IAAK,CAAC;MAEjCC,UAAU,GAAG,IAAI;IAElB;IAEA,MAAMI,cAAc,GAAGJ,UAAU,CAACK,YAAY,CAAEZ,OAAQ,CAAC;IAEzD,MAAMa,WAAW,GAAGb,OAAO,CAACc,kBAAkB,CAAEP,UAAU,EAAEI,cAAc,EAAEX,OAAO,CAACe,WAAW,EAAEf,OAAO,CAACgB,OAAO,CAACC,KAAM,CAAC;IACxH,MAAMC,YAAY,GAAGlB,OAAO,CAACmB,eAAe,CAAEN,WAAY,CAAC;IAE3D,IAAKb,OAAO,CAACgB,OAAO,CAACC,KAAK,KAAKR,SAAS,EAAG,OAAOT,OAAO,CAACgB,OAAO,CAACC,KAAK;IAEvE,OAAOjB,OAAO,CAACoB,MAAM,CAAEF,YAAY,EAAEd,IAAI,EAAED,MAAO,CAAC;EAEpD;AAED;AAEA,eAAeT,WAAW;AAE1B,OAAO,MAAM2B,OAAO,GAAGA,CAAEC,IAAI,EAAEC,IAAI,KAAM;EAExC,MAAM1B,QAAQ,GAAGJ,gBAAgB,CAAE8B,IAAI,IAAID,IAAK,CAAC;;EAEjD;EACA,MAAM1B,KAAK,GAAK0B,IAAI,IAAIA,IAAI,CAACE,MAAM,KAAK,IAAI,GAAOF,IAAI,CAACG,IAAI,IAAIH,IAAI,CAACG,IAAI,CAAC7B,KAAK,IAAM0B,IAAI,CAAC1B,KAAK,GAAG0B,IAAI;EAEtG,OAAO9B,UAAU,CAAE,IAAIE,WAAW,CAAEE,KAAK,EAAEC,QAAS,CAAE,CAAC;AAExD,CAAC;AAEDN,YAAY,CAAE,aAAa,EAAEG,WAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}