{"ast":null,"code":"import InputNode from '../core/InputNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { nodeObject, addNodeElement } from '../shadernode/ShaderNode.js';\nimport { InterleavedBufferAttribute, InterleavedBuffer, StaticDrawUsage, DynamicDrawUsage } from 'three';\nclass BufferAttributeNode extends InputNode {\n  constructor(value, bufferType = null, bufferStride = 0, bufferOffset = 0) {\n    super(value, bufferType);\n    this.isBufferNode = true;\n    this.bufferType = bufferType;\n    this.bufferStride = bufferStride;\n    this.bufferOffset = bufferOffset;\n    this.usage = StaticDrawUsage;\n    this.instanced = false;\n    this.attribute = null;\n    if (value && value.isBufferAttribute === true) {\n      this.attribute = value;\n      this.usage = value.usage;\n      this.instanced = value.isInstancedBufferAttribute;\n    }\n  }\n  getNodeType(builder) {\n    if (this.bufferType === null) {\n      this.bufferType = builder.getTypeFromAttribute(this.attribute);\n    }\n    return this.bufferType;\n  }\n  setup(builder) {\n    if (this.attribute !== null) return;\n    const type = this.getNodeType(builder);\n    const array = this.value;\n    const itemSize = builder.getTypeLength(type);\n    const stride = this.bufferStride || itemSize;\n    const offset = this.bufferOffset;\n    const buffer = array.isInterleavedBuffer === true ? array : new InterleavedBuffer(array, stride);\n    const bufferAttribute = new InterleavedBufferAttribute(buffer, itemSize, offset);\n    buffer.setUsage(this.usage);\n    this.attribute = bufferAttribute;\n    this.attribute.isInstancedBufferAttribute = this.instanced; // @TODO: Add a possible: InstancedInterleavedBufferAttribute\n  }\n\n  generate(builder) {\n    const nodeType = this.getNodeType(builder);\n    const nodeUniform = builder.getBufferAttributeFromNode(this, nodeType);\n    const propertyName = builder.getPropertyName(nodeUniform);\n    let output = null;\n    if (builder.shaderStage === 'vertex') {\n      output = propertyName;\n    } else {\n      const nodeVarying = varying(this);\n      output = nodeVarying.build(builder, nodeType);\n    }\n    return output;\n  }\n  getInputType( /*builder*/\n  ) {\n    return 'bufferAttribute';\n  }\n  setUsage(value) {\n    this.usage = value;\n    return this;\n  }\n  setInstanced(value) {\n    this.instanced = value;\n    return this;\n  }\n}\nexport default BufferAttributeNode;\nexport const bufferAttribute = (array, type, stride, offset) => nodeObject(new BufferAttributeNode(array, type, stride, offset));\nexport const dynamicBufferAttribute = (array, type, stride, offset) => bufferAttribute(array, type, stride, offset).setUsage(DynamicDrawUsage);\nexport const instancedBufferAttribute = (array, type, stride, offset) => bufferAttribute(array, type, stride, offset).setInstanced(true);\nexport const instancedDynamicBufferAttribute = (array, type, stride, offset) => dynamicBufferAttribute(array, type, stride, offset).setInstanced(true);\naddNodeElement('toAttribute', bufferNode => bufferAttribute(bufferNode.value));\naddNodeClass('BufferAttributeNode', BufferAttributeNode);","map":{"version":3,"names":["InputNode","addNodeClass","varying","nodeObject","addNodeElement","InterleavedBufferAttribute","InterleavedBuffer","StaticDrawUsage","DynamicDrawUsage","BufferAttributeNode","constructor","value","bufferType","bufferStride","bufferOffset","isBufferNode","usage","instanced","attribute","isBufferAttribute","isInstancedBufferAttribute","getNodeType","builder","getTypeFromAttribute","setup","type","array","itemSize","getTypeLength","stride","offset","buffer","isInterleavedBuffer","bufferAttribute","setUsage","generate","nodeType","nodeUniform","getBufferAttributeFromNode","propertyName","getPropertyName","output","shaderStage","nodeVarying","build","getInputType","setInstanced","dynamicBufferAttribute","instancedBufferAttribute","instancedDynamicBufferAttribute","bufferNode"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/accessors/BufferAttributeNode.js"],"sourcesContent":["import InputNode from '../core/InputNode.js';\nimport { addNodeClass } from '../core/Node.js';\nimport { varying } from '../core/VaryingNode.js';\nimport { nodeObject, addNodeElement } from '../shadernode/ShaderNode.js';\nimport { InterleavedBufferAttribute, InterleavedBuffer, StaticDrawUsage, DynamicDrawUsage } from 'three';\n\nclass BufferAttributeNode extends InputNode {\n\n\tconstructor( value, bufferType = null, bufferStride = 0, bufferOffset = 0 ) {\n\n\t\tsuper( value, bufferType );\n\n\t\tthis.isBufferNode = true;\n\n\t\tthis.bufferType = bufferType;\n\t\tthis.bufferStride = bufferStride;\n\t\tthis.bufferOffset = bufferOffset;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.instanced = false;\n\n\t\tthis.attribute = null;\n\n\t\tif ( value && value.isBufferAttribute === true ) {\n\n\t\t\tthis.attribute = value;\n\t\t\tthis.usage = value.usage;\n\t\t\tthis.instanced = value.isInstancedBufferAttribute;\n\n\t\t}\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tif ( this.bufferType === null ) {\n\n\t\t\tthis.bufferType = builder.getTypeFromAttribute( this.attribute );\n\n\t\t}\n\n\t\treturn this.bufferType;\n\n\t}\n\n\tsetup( builder ) {\n\n\t\tif ( this.attribute !== null ) return;\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst array = this.value;\n\t\tconst itemSize = builder.getTypeLength( type );\n\t\tconst stride = this.bufferStride || itemSize;\n\t\tconst offset = this.bufferOffset;\n\n\t\tconst buffer = array.isInterleavedBuffer === true ? array : new InterleavedBuffer( array, stride );\n\t\tconst bufferAttribute = new InterleavedBufferAttribute( buffer, itemSize, offset );\n\n\t\tbuffer.setUsage( this.usage );\n\n\t\tthis.attribute = bufferAttribute;\n\t\tthis.attribute.isInstancedBufferAttribute = this.instanced; // @TODO: Add a possible: InstancedInterleavedBufferAttribute\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst nodeType = this.getNodeType( builder );\n\n\t\tconst nodeUniform = builder.getBufferAttributeFromNode( this, nodeType );\n\t\tconst propertyName = builder.getPropertyName( nodeUniform );\n\n\t\tlet output = null;\n\n\t\tif ( builder.shaderStage === 'vertex' ) {\n\n\t\t\toutput = propertyName;\n\n\t\t} else {\n\n\t\t\tconst nodeVarying = varying( this );\n\n\t\t\toutput = nodeVarying.build( builder, nodeType );\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'bufferAttribute';\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetInstanced( value ) {\n\n\t\tthis.instanced = value;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport default BufferAttributeNode;\n\nexport const bufferAttribute = ( array, type, stride, offset ) => nodeObject( new BufferAttributeNode( array, type, stride, offset ) );\nexport const dynamicBufferAttribute = ( array, type, stride, offset ) => bufferAttribute( array, type, stride, offset ).setUsage( DynamicDrawUsage );\n\nexport const instancedBufferAttribute = ( array, type, stride, offset ) => bufferAttribute( array, type, stride, offset ).setInstanced( true );\nexport const instancedDynamicBufferAttribute = ( array, type, stride, offset ) => dynamicBufferAttribute( array, type, stride, offset ).setInstanced( true );\n\naddNodeElement( 'toAttribute', ( bufferNode ) => bufferAttribute( bufferNode.value ) );\n\naddNodeClass( 'BufferAttributeNode', BufferAttributeNode );\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}