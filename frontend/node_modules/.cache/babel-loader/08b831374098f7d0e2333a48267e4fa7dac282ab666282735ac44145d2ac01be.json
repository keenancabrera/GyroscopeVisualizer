{"ast":null,"code":"class Resizer {\n  constructor(container, camera, renderer) {\n    // Set the camera's aspect ratio\n    camera.aspect = container.clientWidth / container.clientHeight;\n\n    // update the camera's frustum\n    camera.updateProjectionMatrix();\n\n    // update the size of the renderer AND the canvas\n    renderer.setSize(container.clientWidth, container.clientHeight);\n\n    // set the pixel ratio (for mobile devices)\n    renderer.setPixelRatio(window.devicePixelRatio);\n  }\n}\nexport { Resizer };","map":{"version":3,"names":["Resizer","constructor","container","camera","renderer","aspect","clientWidth","clientHeight","updateProjectionMatrix","setSize","setPixelRatio","window","devicePixelRatio"],"sources":["/Users/cabrera/Documents/PortfolioWebiste/frontend/src/gyroscopeRenderer/systems/Resizer.js"],"sourcesContent":["class Resizer {\n    constructor(container, camera, renderer) {\n        // Set the camera's aspect ratio\n        camera.aspect = container.clientWidth / container.clientHeight;\n\n        // update the camera's frustum\n        camera.updateProjectionMatrix()\n\n        // update the size of the renderer AND the canvas\n        renderer.setSize(container.clientWidth, container.clientHeight);\n\n        // set the pixel ratio (for mobile devices)\n        renderer.setPixelRatio(window.devicePixelRatio);\n    }\n}\n \n  export { Resizer };"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EACVC,WAAWA,CAACC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAE;IACrC;IACAD,MAAM,CAACE,MAAM,GAAGH,SAAS,CAACI,WAAW,GAAGJ,SAAS,CAACK,YAAY;;IAE9D;IACAJ,MAAM,CAACK,sBAAsB,CAAC,CAAC;;IAE/B;IACAJ,QAAQ,CAACK,OAAO,CAACP,SAAS,CAACI,WAAW,EAAEJ,SAAS,CAACK,YAAY,CAAC;;IAE/D;IACAH,QAAQ,CAACM,aAAa,CAACC,MAAM,CAACC,gBAAgB,CAAC;EACnD;AACJ;AAEE,SAASZ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}