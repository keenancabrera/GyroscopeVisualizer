{"ast":null,"code":"import { mx_perlin_noise_float, mx_perlin_noise_vec2, mx_perlin_noise_vec3, mx_worley_noise_float as worley_noise_float, mx_worley_noise_vec2 as worley_noise_vec2, mx_worley_noise_vec3 as worley_noise_vec3, mx_cell_noise_float as cell_noise_float, mx_fractal_noise_float as fractal_noise_float, mx_fractal_noise_vec2 as fractal_noise_vec2, mx_fractal_noise_vec3 as fractal_noise_vec3, mx_fractal_noise_vec4 as fractal_noise_vec4 } from './lib/mx_noise.js';\nimport { mx_hsvtorgb, mx_rgbtohsv } from './lib/mx_hsv.js';\nimport { mx_srgb_texture_to_lin_rec709 } from './lib/mx_transform_color.js';\nimport { mix, smoothstep } from '../math/MathNode.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { float, vec2, vec4 } from '../shadernode/ShaderNode.js';\nexport const mx_aastep = (threshold, value) => {\n  threshold = float(threshold);\n  value = float(value);\n  const afwidth = vec2(value.dFdx(), value.dFdy()).length().mul(0.70710678118654757);\n  return smoothstep(threshold.sub(afwidth), threshold.add(afwidth), value);\n};\nconst _ramp = (a, b, uv, p) => mix(a, b, uv[p].clamp());\nexport const mx_ramplr = (valuel, valuer, texcoord = uv()) => _ramp(valuel, valuer, texcoord, 'x');\nexport const mx_ramptb = (valuet, valueb, texcoord = uv()) => _ramp(valuet, valueb, texcoord, 'y');\nconst _split = (a, b, center, uv, p) => mix(a, b, mx_aastep(center, uv[p]));\nexport const mx_splitlr = (valuel, valuer, center, texcoord = uv()) => _split(valuel, valuer, center, texcoord, 'x');\nexport const mx_splittb = (valuet, valueb, center, texcoord = uv()) => _split(valuet, valueb, center, texcoord, 'y');\nexport const mx_transform_uv = (uv_scale = 1, uv_offset = 0, uv_geo = uv()) => uv_geo.mul(uv_scale).add(uv_offset);\nexport const mx_safepower = (in1, in2 = 1) => {\n  in1 = float(in1);\n  return in1.abs().pow(in2).mul(in1.sign());\n};\nexport const mx_contrast = (input, amount = 1, pivot = .5) => float(input).sub(pivot).mul(amount).add(pivot);\nexport const mx_noise_float = (texcoord = uv(), amplitude = 1, pivot = 0) => mx_perlin_noise_float(texcoord.convert('vec2|vec3')).mul(amplitude).add(pivot);\nexport const mx_noise_vec2 = (texcoord = uv(), amplitude = 1, pivot = 0) => mx_perlin_noise_vec2(texcoord.convert('vec2|vec3')).mul(amplitude).add(pivot);\nexport const mx_noise_vec3 = (texcoord = uv(), amplitude = 1, pivot = 0) => mx_perlin_noise_vec3(texcoord.convert('vec2|vec3')).mul(amplitude).add(pivot);\nexport const mx_noise_vec4 = (texcoord = uv(), amplitude = 1, pivot = 0) => {\n  texcoord = texcoord.convert('vec2|vec3'); // overloading type\n\n  const noise_vec4 = vec4(mx_perlin_noise_vec3(texcoord), mx_perlin_noise_float(texcoord.add(vec2(19, 73))));\n  return noise_vec4.mul(amplitude).add(pivot);\n};\nexport const mx_worley_noise_float = (texcoord = uv(), jitter = 1) => worley_noise_float(texcoord.convert('vec2|vec3'), jitter, 1);\nexport const mx_worley_noise_vec2 = (texcoord = uv(), jitter = 1) => worley_noise_vec2(texcoord.convert('vec2|vec3'), jitter, 1);\nexport const mx_worley_noise_vec3 = (texcoord = uv(), jitter = 1) => worley_noise_vec3(texcoord.convert('vec2|vec3'), jitter, 1);\nexport const mx_cell_noise_float = (texcoord = uv()) => cell_noise_float(texcoord.convert('vec2|vec3'));\nexport const mx_fractal_noise_float = (position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1) => fractal_noise_float(position, octaves, lacunarity, diminish).mul(amplitude);\nexport const mx_fractal_noise_vec2 = (position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1) => fractal_noise_vec2(position, octaves, lacunarity, diminish).mul(amplitude);\nexport const mx_fractal_noise_vec3 = (position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1) => fractal_noise_vec3(position, octaves, lacunarity, diminish).mul(amplitude);\nexport const mx_fractal_noise_vec4 = (position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1) => fractal_noise_vec4(position, octaves, lacunarity, diminish).mul(amplitude);\nexport { mx_hsvtorgb, mx_rgbtohsv, mx_srgb_texture_to_lin_rec709 };","map":{"version":3,"names":["mx_perlin_noise_float","mx_perlin_noise_vec2","mx_perlin_noise_vec3","mx_worley_noise_float","worley_noise_float","mx_worley_noise_vec2","worley_noise_vec2","mx_worley_noise_vec3","worley_noise_vec3","mx_cell_noise_float","cell_noise_float","mx_fractal_noise_float","fractal_noise_float","mx_fractal_noise_vec2","fractal_noise_vec2","mx_fractal_noise_vec3","fractal_noise_vec3","mx_fractal_noise_vec4","fractal_noise_vec4","mx_hsvtorgb","mx_rgbtohsv","mx_srgb_texture_to_lin_rec709","mix","smoothstep","uv","float","vec2","vec4","mx_aastep","threshold","value","afwidth","dFdx","dFdy","length","mul","sub","add","_ramp","a","b","p","clamp","mx_ramplr","valuel","valuer","texcoord","mx_ramptb","valuet","valueb","_split","center","mx_splitlr","mx_splittb","mx_transform_uv","uv_scale","uv_offset","uv_geo","mx_safepower","in1","in2","abs","pow","sign","mx_contrast","input","amount","pivot","mx_noise_float","amplitude","convert","mx_noise_vec2","mx_noise_vec3","mx_noise_vec4","noise_vec4","jitter","position","octaves","lacunarity","diminish"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/materialx/MaterialXNodes.js"],"sourcesContent":["import {\n\tmx_perlin_noise_float, mx_perlin_noise_vec2, mx_perlin_noise_vec3,\n\tmx_worley_noise_float as worley_noise_float, mx_worley_noise_vec2 as worley_noise_vec2, mx_worley_noise_vec3 as worley_noise_vec3,\n\tmx_cell_noise_float as cell_noise_float,\n\tmx_fractal_noise_float as fractal_noise_float, mx_fractal_noise_vec2 as fractal_noise_vec2, mx_fractal_noise_vec3 as fractal_noise_vec3, mx_fractal_noise_vec4 as fractal_noise_vec4\n} from './lib/mx_noise.js';\nimport { mx_hsvtorgb, mx_rgbtohsv } from './lib/mx_hsv.js';\nimport { mx_srgb_texture_to_lin_rec709 } from './lib/mx_transform_color.js';\nimport { mix, smoothstep } from '../math/MathNode.js';\nimport { uv } from '../accessors/UVNode.js';\nimport { float, vec2, vec4 } from '../shadernode/ShaderNode.js';\n\nexport const mx_aastep = ( threshold, value ) => {\n\n\tthreshold = float( threshold );\n\tvalue = float( value );\n\n\tconst afwidth = vec2( value.dFdx(), value.dFdy() ).length().mul( 0.70710678118654757 );\n\n\treturn smoothstep( threshold.sub( afwidth ), threshold.add( afwidth ), value );\n\n};\n\nconst _ramp = ( a, b, uv, p ) => mix( a, b, uv[ p ].clamp() );\nexport const mx_ramplr = ( valuel, valuer, texcoord = uv() ) => _ramp( valuel, valuer, texcoord, 'x' );\nexport const mx_ramptb = ( valuet, valueb, texcoord = uv() ) => _ramp( valuet, valueb, texcoord, 'y' );\n\nconst _split = ( a, b, center, uv, p ) => mix( a, b, mx_aastep( center, uv[ p ] ) );\nexport const mx_splitlr = ( valuel, valuer, center, texcoord = uv() ) => _split( valuel, valuer, center, texcoord, 'x' );\nexport const mx_splittb = ( valuet, valueb, center, texcoord = uv() ) => _split( valuet, valueb, center, texcoord, 'y' );\n\nexport const mx_transform_uv = ( uv_scale = 1, uv_offset = 0, uv_geo = uv() ) => uv_geo.mul( uv_scale ).add( uv_offset );\n\nexport const mx_safepower = ( in1, in2 = 1 ) => {\n\n\tin1 = float( in1 );\n\n\treturn in1.abs().pow( in2 ).mul( in1.sign() );\n\n};\n\nexport const mx_contrast = ( input, amount = 1, pivot = .5 ) => float( input ).sub( pivot ).mul( amount ).add( pivot );\n\nexport const mx_noise_float = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => mx_perlin_noise_float( texcoord.convert( 'vec2|vec3' ) ).mul( amplitude ).add( pivot );\nexport const mx_noise_vec2 = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => mx_perlin_noise_vec2( texcoord.convert( 'vec2|vec3' ) ).mul( amplitude ).add( pivot );\nexport const mx_noise_vec3 = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => mx_perlin_noise_vec3( texcoord.convert( 'vec2|vec3' ) ).mul( amplitude ).add( pivot );\nexport const mx_noise_vec4 = ( texcoord = uv(), amplitude = 1, pivot = 0 ) => {\n\n\ttexcoord = texcoord.convert( 'vec2|vec3' ); // overloading type\n\n\tconst noise_vec4 = vec4( mx_perlin_noise_vec3( texcoord ), mx_perlin_noise_float( texcoord.add( vec2( 19, 73 ) ) ) );\n\n\treturn noise_vec4.mul( amplitude ).add( pivot );\n\n};\n\nexport const mx_worley_noise_float = ( texcoord = uv(), jitter = 1 ) => worley_noise_float( texcoord.convert( 'vec2|vec3' ), jitter, 1 );\nexport const mx_worley_noise_vec2 = ( texcoord = uv(), jitter = 1 ) => worley_noise_vec2( texcoord.convert( 'vec2|vec3' ), jitter, 1 );\nexport const mx_worley_noise_vec3 = ( texcoord = uv(), jitter = 1 ) => worley_noise_vec3( texcoord.convert( 'vec2|vec3' ), jitter, 1 );\n\nexport const mx_cell_noise_float = ( texcoord = uv() ) => cell_noise_float( texcoord.convert( 'vec2|vec3' ) );\n\nexport const mx_fractal_noise_float = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => fractal_noise_float( position, octaves, lacunarity, diminish ).mul( amplitude );\nexport const mx_fractal_noise_vec2 = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => fractal_noise_vec2( position, octaves, lacunarity, diminish ).mul( amplitude );\nexport const mx_fractal_noise_vec3 = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => fractal_noise_vec3( position, octaves, lacunarity, diminish ).mul( amplitude );\nexport const mx_fractal_noise_vec4 = ( position = uv(), octaves = 3, lacunarity = 2, diminish = .5, amplitude = 1 ) => fractal_noise_vec4( position, octaves, lacunarity, diminish ).mul( amplitude );\n\nexport { mx_hsvtorgb, mx_rgbtohsv, mx_srgb_texture_to_lin_rec709 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}