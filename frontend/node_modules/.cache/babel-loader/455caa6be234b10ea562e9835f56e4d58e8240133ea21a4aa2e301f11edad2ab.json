{"ast":null,"code":"import UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { nodeObject, nodeImmutable } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\nclass TimerNode extends UniformNode {\n  constructor(scope = TimerNode.LOCAL, scale = 1, value = 0) {\n    super(value);\n    this.scope = scope;\n    this.scale = scale;\n    this.updateType = NodeUpdateType.FRAME;\n  }\n  /*\n  @TODO:\n  getNodeType( builder ) {\n  \t\tconst scope = this.scope;\n  \t\tif ( scope === TimerNode.FRAME ) {\n  \t\t\treturn 'uint';\n  \t\t}\n  \t\treturn 'float';\n  \t}\n  */\n  update(frame) {\n    const scope = this.scope;\n    const scale = this.scale;\n    if (scope === TimerNode.LOCAL) {\n      this.value += frame.deltaTime * scale;\n    } else if (scope === TimerNode.DELTA) {\n      this.value = frame.deltaTime * scale;\n    } else if (scope === TimerNode.FRAME) {\n      this.value = frame.frameId;\n    } else {\n      // global\n\n      this.value = frame.time * scale;\n    }\n  }\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n    data.scale = this.scale;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n    this.scale = data.scale;\n  }\n}\nTimerNode.LOCAL = 'local';\nTimerNode.GLOBAL = 'global';\nTimerNode.DELTA = 'delta';\nTimerNode.FRAME = 'frame';\nexport default TimerNode;\n\n// @TODO: add support to use node in timeScale\nexport const timerLocal = (timeScale, value = 0) => nodeObject(new TimerNode(TimerNode.LOCAL, timeScale, value));\nexport const timerGlobal = (timeScale, value = 0) => nodeObject(new TimerNode(TimerNode.GLOBAL, timeScale, value));\nexport const timerDelta = (timeScale, value = 0) => nodeObject(new TimerNode(TimerNode.DELTA, timeScale, value));\nexport const frameId = nodeImmutable(TimerNode, TimerNode.FRAME).uint();\naddNodeClass('TimerNode', TimerNode);","map":{"version":3,"names":["UniformNode","NodeUpdateType","nodeObject","nodeImmutable","addNodeClass","TimerNode","constructor","scope","LOCAL","scale","value","updateType","FRAME","update","frame","deltaTime","DELTA","frameId","time","serialize","data","deserialize","GLOBAL","timerLocal","timeScale","timerGlobal","timerDelta","uint"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/nodes/utils/TimerNode.js"],"sourcesContent":["import UniformNode from '../core/UniformNode.js';\nimport { NodeUpdateType } from '../core/constants.js';\nimport { nodeObject, nodeImmutable } from '../shadernode/ShaderNode.js';\nimport { addNodeClass } from '../core/Node.js';\n\nclass TimerNode extends UniformNode {\n\n\tconstructor( scope = TimerNode.LOCAL, scale = 1, value = 0 ) {\n\n\t\tsuper( value );\n\n\t\tthis.scope = scope;\n\t\tthis.scale = scale;\n\n\t\tthis.updateType = NodeUpdateType.FRAME;\n\n\t}\n\t/*\n\t@TODO:\n\tgetNodeType( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === TimerNode.FRAME ) {\n\n\t\t\treturn 'uint';\n\n\t\t}\n\n\t\treturn 'float';\n\n\t}\n*/\n\tupdate( frame ) {\n\n\t\tconst scope = this.scope;\n\t\tconst scale = this.scale;\n\n\t\tif ( scope === TimerNode.LOCAL ) {\n\n\t\t\tthis.value += frame.deltaTime * scale;\n\n\t\t} else if ( scope === TimerNode.DELTA ) {\n\n\t\t\tthis.value = frame.deltaTime * scale;\n\n\t\t} else if ( scope === TimerNode.FRAME ) {\n\n\t\t\tthis.value = frame.frameId;\n\n\t\t} else {\n\n\t\t\t// global\n\n\t\t\tthis.value = frame.time * scale;\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\t\tdata.scale = this.scale;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\t\tthis.scale = data.scale;\n\n\t}\n\n}\n\nTimerNode.LOCAL = 'local';\nTimerNode.GLOBAL = 'global';\nTimerNode.DELTA = 'delta';\nTimerNode.FRAME = 'frame';\n\nexport default TimerNode;\n\n// @TODO: add support to use node in timeScale\nexport const timerLocal = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.LOCAL, timeScale, value ) );\nexport const timerGlobal = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.GLOBAL, timeScale, value ) );\nexport const timerDelta = ( timeScale, value = 0 ) => nodeObject( new TimerNode( TimerNode.DELTA, timeScale, value ) );\nexport const frameId = nodeImmutable( TimerNode, TimerNode.FRAME ).uint();\n\naddNodeClass( 'TimerNode', TimerNode );\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,wBAAwB;AAChD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,UAAU,EAAEC,aAAa,QAAQ,6BAA6B;AACvE,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,MAAMC,SAAS,SAASL,WAAW,CAAC;EAEnCM,WAAWA,CAAEC,KAAK,GAAGF,SAAS,CAACG,KAAK,EAAEC,KAAK,GAAG,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAG;IAE5D,KAAK,CAAEA,KAAM,CAAC;IAEd,IAAI,CAACH,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,KAAK,GAAGA,KAAK;IAElB,IAAI,CAACE,UAAU,GAAGV,cAAc,CAACW,KAAK;EAEvC;EACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAOCC,MAAMA,CAAEC,KAAK,EAAG;IAEf,MAAMP,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAME,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKF,KAAK,KAAKF,SAAS,CAACG,KAAK,EAAG;MAEhC,IAAI,CAACE,KAAK,IAAII,KAAK,CAACC,SAAS,GAAGN,KAAK;IAEtC,CAAC,MAAM,IAAKF,KAAK,KAAKF,SAAS,CAACW,KAAK,EAAG;MAEvC,IAAI,CAACN,KAAK,GAAGI,KAAK,CAACC,SAAS,GAAGN,KAAK;IAErC,CAAC,MAAM,IAAKF,KAAK,KAAKF,SAAS,CAACO,KAAK,EAAG;MAEvC,IAAI,CAACF,KAAK,GAAGI,KAAK,CAACG,OAAO;IAE3B,CAAC,MAAM;MAEN;;MAEA,IAAI,CAACP,KAAK,GAAGI,KAAK,CAACI,IAAI,GAAGT,KAAK;IAEhC;EAED;EAEAU,SAASA,CAAEC,IAAI,EAAG;IAEjB,KAAK,CAACD,SAAS,CAAEC,IAAK,CAAC;IAEvBA,IAAI,CAACb,KAAK,GAAG,IAAI,CAACA,KAAK;IACvBa,IAAI,CAACX,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB;EAEAY,WAAWA,CAAED,IAAI,EAAG;IAEnB,KAAK,CAACC,WAAW,CAAED,IAAK,CAAC;IAEzB,IAAI,CAACb,KAAK,GAAGa,IAAI,CAACb,KAAK;IACvB,IAAI,CAACE,KAAK,GAAGW,IAAI,CAACX,KAAK;EAExB;AAED;AAEAJ,SAAS,CAACG,KAAK,GAAG,OAAO;AACzBH,SAAS,CAACiB,MAAM,GAAG,QAAQ;AAC3BjB,SAAS,CAACW,KAAK,GAAG,OAAO;AACzBX,SAAS,CAACO,KAAK,GAAG,OAAO;AAEzB,eAAeP,SAAS;;AAExB;AACA,OAAO,MAAMkB,UAAU,GAAGA,CAAEC,SAAS,EAAEd,KAAK,GAAG,CAAC,KAAMR,UAAU,CAAE,IAAIG,SAAS,CAAEA,SAAS,CAACG,KAAK,EAAEgB,SAAS,EAAEd,KAAM,CAAE,CAAC;AACtH,OAAO,MAAMe,WAAW,GAAGA,CAAED,SAAS,EAAEd,KAAK,GAAG,CAAC,KAAMR,UAAU,CAAE,IAAIG,SAAS,CAAEA,SAAS,CAACiB,MAAM,EAAEE,SAAS,EAAEd,KAAM,CAAE,CAAC;AACxH,OAAO,MAAMgB,UAAU,GAAGA,CAAEF,SAAS,EAAEd,KAAK,GAAG,CAAC,KAAMR,UAAU,CAAE,IAAIG,SAAS,CAAEA,SAAS,CAACW,KAAK,EAAEQ,SAAS,EAAEd,KAAM,CAAE,CAAC;AACtH,OAAO,MAAMO,OAAO,GAAGd,aAAa,CAAEE,SAAS,EAAEA,SAAS,CAACO,KAAM,CAAC,CAACe,IAAI,CAAC,CAAC;AAEzEvB,YAAY,CAAE,WAAW,EAAEC,SAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}