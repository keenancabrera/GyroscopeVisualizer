{"ast":null,"code":"import { gyroscopeAnimation } from '@/gyroscopeRenderer/gyroscopeAnimation';\nexport default {\n  name: 'gyroscopeSimulator',\n  props: {\n    solution: Object,\n    parameters: Object,\n    initialState: Object\n  },\n  watch: {\n    solution: {\n      handler() {\n        this.gyroscopeAnimation.updateSolution(Object.assign(this.solution));\n      },\n      deep: true\n    },\n    parameters: {\n      handler() {\n        this.gyroscopeAnimation.updateParameters(Object.assign(this.parameters));\n      },\n      deep: true\n    },\n    initialState: {\n      handler() {\n        this.gyroscopeAnimation.updateState(Object.assign(this.initialState));\n      },\n      deep: true\n    }\n  },\n  data() {\n    return {};\n  },\n  methods: {\n    animateSolution() {\n      console.log(\"SOLUTION CHANGED\");\n    }\n  },\n  mounted() {\n    this.gyroscopeAnimation = new gyroscopeAnimation(this.$refs.sceneContainer, Object.assign(this.parameters), Object.assign(this.initialState));\n    this.gyroscopeAnimation.render();\n  }\n};","map":{"version":3,"names":["gyroscopeAnimation","name","props","solution","Object","parameters","initialState","watch","handler","updateSolution","assign","deep","updateParameters","updateState","data","methods","animateSolution","console","log","mounted","$refs","sceneContainer","render"],"sources":["/Users/cabrera/Documents/PortfolioWebiste/frontend/src/components/gyroscopeSimulator.vue"],"sourcesContent":["<template>\n  <div ref=\"sceneContainer\" class=\"scene-container\"></div>\n</template>\n\n<script>\nimport { gyroscopeAnimation } from '@/gyroscopeRenderer/gyroscopeAnimation';\n\nexport default {\n  name: 'gyroscopeSimulator',\n  props: {\n    solution: Object,\n    parameters: Object,\n    initialState: Object\n  },\n  watch: {\n    solution : {\n      handler() {\n        this.gyroscopeAnimation.updateSolution(Object.assign(this.solution));\n      },\n      deep: true\n    },\n    parameters : {\n      handler(){\n        this.gyroscopeAnimation.updateParameters(Object.assign(this.parameters))\n      },\n      deep: true\n    },\n    initialState : {\n      handler(){\n        this.gyroscopeAnimation.updateState(Object.assign(this.initialState))\n      },\n      deep: true\n    }\n  },\n  data() {\n    return {\n    }\n  },\n  methods: {\n    animateSolution(){\n      console.log(\"SOLUTION CHANGED\")\n    }\n  },\n  mounted() { \n    this.gyroscopeAnimation = new gyroscopeAnimation(this.$refs.sceneContainer, Object.assign(this.parameters), Object.assign(this.initialState))\n    this.gyroscopeAnimation.render()\n  },\n};\n</script>\n\n<style scoped>\n.scene-container {\n  width: 100%;\n  height: 95vh;\n}\n</style>\n"],"mappings":"AAKA,SAASA,kBAAiB,QAAS,wCAAwC;AAE3E,eAAe;EACbC,IAAI,EAAE,oBAAoB;EAC1BC,KAAK,EAAE;IACLC,QAAQ,EAAEC,MAAM;IAChBC,UAAU,EAAED,MAAM;IAClBE,YAAY,EAAEF;EAChB,CAAC;EACDG,KAAK,EAAE;IACLJ,QAAO,EAAI;MACTK,OAAOA,CAAA,EAAG;QACR,IAAI,CAACR,kBAAkB,CAACS,cAAc,CAACL,MAAM,CAACM,MAAM,CAAC,IAAI,CAACP,QAAQ,CAAC,CAAC;MACtE,CAAC;MACDQ,IAAI,EAAE;IACR,CAAC;IACDN,UAAS,EAAI;MACXG,OAAOA,CAAA,EAAE;QACP,IAAI,CAACR,kBAAkB,CAACY,gBAAgB,CAACR,MAAM,CAACM,MAAM,CAAC,IAAI,CAACL,UAAU,CAAC;MACzE,CAAC;MACDM,IAAI,EAAE;IACR,CAAC;IACDL,YAAW,EAAI;MACbE,OAAOA,CAAA,EAAE;QACP,IAAI,CAACR,kBAAkB,CAACa,WAAW,CAACT,MAAM,CAACM,MAAM,CAAC,IAAI,CAACJ,YAAY,CAAC;MACtE,CAAC;MACDK,IAAI,EAAE;IACR;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO,CACP;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAE;MACfC,OAAO,CAACC,GAAG,CAAC,kBAAkB;IAChC;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACnB,kBAAiB,GAAI,IAAIA,kBAAkB,CAAC,IAAI,CAACoB,KAAK,CAACC,cAAc,EAAEjB,MAAM,CAACM,MAAM,CAAC,IAAI,CAACL,UAAU,CAAC,EAAED,MAAM,CAACM,MAAM,CAAC,IAAI,CAACJ,YAAY,CAAC;IAC5I,IAAI,CAACN,kBAAkB,CAACsB,MAAM,CAAC;EACjC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}