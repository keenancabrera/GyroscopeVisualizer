{"ast":null,"code":"export const GPUPrimitiveTopology = {\n  PointList: 'point-list',\n  LineList: 'line-list',\n  LineStrip: 'line-strip',\n  TriangleList: 'triangle-list',\n  TriangleStrip: 'triangle-strip'\n};\nexport const GPUCompareFunction = {\n  Never: 'never',\n  Less: 'less',\n  Equal: 'equal',\n  LessEqual: 'less-equal',\n  Greater: 'greater',\n  NotEqual: 'not-equal',\n  GreaterEqual: 'greater-equal',\n  Always: 'always'\n};\nexport const GPUStoreOp = {\n  Store: 'store',\n  Discard: 'discard'\n};\nexport const GPULoadOp = {\n  Load: 'load',\n  Clear: 'clear'\n};\nexport const GPUFrontFace = {\n  CCW: 'ccw',\n  CW: 'cw'\n};\nexport const GPUCullMode = {\n  None: 'none',\n  Front: 'front',\n  Back: 'back'\n};\nexport const GPUIndexFormat = {\n  Uint16: 'uint16',\n  Uint32: 'uint32'\n};\nexport const GPUVertexFormat = {\n  Uint8x2: 'uint8x2',\n  Uint8x4: 'uint8x4',\n  Sint8x2: 'sint8x2',\n  Sint8x4: 'sint8x4',\n  Unorm8x2: 'unorm8x2',\n  Unorm8x4: 'unorm8x4',\n  Snorm8x2: 'snorm8x2',\n  Snorm8x4: 'snorm8x4',\n  Uint16x2: 'uint16x2',\n  Uint16x4: 'uint16x4',\n  Sint16x2: 'sint16x2',\n  Sint16x4: 'sint16x4',\n  Unorm16x2: 'unorm16x2',\n  Unorm16x4: 'unorm16x4',\n  Snorm16x2: 'snorm16x2',\n  Snorm16x4: 'snorm16x4',\n  Float16x2: 'float16x2',\n  Float16x4: 'float16x4',\n  Float32: 'float32',\n  Float32x2: 'float32x2',\n  Float32x3: 'float32x3',\n  Float32x4: 'float32x4',\n  Uint32: 'uint32',\n  Uint32x2: 'uint32x2',\n  Uint32x3: 'uint32x3',\n  Uint32x4: 'uint32x4',\n  Sint32: 'sint32',\n  Sint32x2: 'sint32x2',\n  Sint32x3: 'sint32x3',\n  Sint32x4: 'sint32x4'\n};\nexport const GPUTextureFormat = {\n  // 8-bit formats\n\n  R8Unorm: 'r8unorm',\n  R8Snorm: 'r8snorm',\n  R8Uint: 'r8uint',\n  R8Sint: 'r8sint',\n  // 16-bit formats\n\n  R16Uint: 'r16uint',\n  R16Sint: 'r16sint',\n  R16Float: 'r16float',\n  RG8Unorm: 'rg8unorm',\n  RG8Snorm: 'rg8snorm',\n  RG8Uint: 'rg8uint',\n  RG8Sint: 'rg8sint',\n  // 32-bit formats\n\n  R32Uint: 'r32uint',\n  R32Sint: 'r32sint',\n  R32Float: 'r32float',\n  RG16Uint: 'rg16uint',\n  RG16Sint: 'rg16sint',\n  RG16Float: 'rg16float',\n  RGBA8Unorm: 'rgba8unorm',\n  RGBA8UnormSRGB: 'rgba8unorm-srgb',\n  RGBA8Snorm: 'rgba8snorm',\n  RGBA8Uint: 'rgba8uint',\n  RGBA8Sint: 'rgba8sint',\n  BGRA8Unorm: 'bgra8unorm',\n  BGRA8UnormSRGB: 'bgra8unorm-srgb',\n  // Packed 32-bit formats\n  RGB9E5UFloat: 'rgb9e5ufloat',\n  RGB10A2Unorm: 'rgb10a2unorm',\n  RG11B10uFloat: 'rgb10a2unorm',\n  // 64-bit formats\n\n  RG32Uint: 'rg32uint',\n  RG32Sint: 'rg32sint',\n  RG32Float: 'rg32float',\n  RGBA16Uint: 'rgba16uint',\n  RGBA16Sint: 'rgba16sint',\n  RGBA16Float: 'rgba16float',\n  // 128-bit formats\n\n  RGBA32Uint: 'rgba32uint',\n  RGBA32Sint: 'rgba32sint',\n  RGBA32Float: 'rgba32float',\n  // Depth and stencil formats\n\n  Stencil8: 'stencil8',\n  Depth16Unorm: 'depth16unorm',\n  Depth24Plus: 'depth24plus',\n  Depth24PlusStencil8: 'depth24plus-stencil8',\n  Depth32Float: 'depth32float',\n  // 'depth32float-stencil8' extension\n\n  Depth32FloatStencil8: 'depth32float-stencil8',\n  // BC compressed formats usable if 'texture-compression-bc' is both\n  // supported by the device/user agent and enabled in requestDevice.\n\n  BC1RGBAUnorm: 'bc1-rgba-unorm',\n  BC1RGBAUnormSRGB: 'bc1-rgba-unorm-srgb',\n  BC2RGBAUnorm: 'bc2-rgba-unorm',\n  BC2RGBAUnormSRGB: 'bc2-rgba-unorm-srgb',\n  BC3RGBAUnorm: 'bc3-rgba-unorm',\n  BC3RGBAUnormSRGB: 'bc3-rgba-unorm-srgb',\n  BC4RUnorm: 'bc4-r-unorm',\n  BC4RSnorm: 'bc4-r-snorm',\n  BC5RGUnorm: 'bc5-rg-unorm',\n  BC5RGSnorm: 'bc5-rg-snorm',\n  BC6HRGBUFloat: 'bc6h-rgb-ufloat',\n  BC6HRGBFloat: 'bc6h-rgb-float',\n  BC7RGBAUnorm: 'bc7-rgba-unorm',\n  BC7RGBAUnormSRGB: 'bc7-rgba-srgb',\n  // ETC2 compressed formats usable if 'texture-compression-etc2' is both\n  // supported by the device/user agent and enabled in requestDevice.\n\n  ETC2RGB8Unorm: 'etc2-rgb8unorm',\n  ETC2RGB8UnormSRGB: 'etc2-rgb8unorm-srgb',\n  ETC2RGB8A1Unorm: 'etc2-rgb8a1unorm',\n  ETC2RGB8A1UnormSRGB: 'etc2-rgb8a1unorm-srgb',\n  ETC2RGBA8Unorm: 'etc2-rgba8unorm',\n  ETC2RGBA8UnormSRGB: 'etc2-rgba8unorm-srgb',\n  EACR11Unorm: 'eac-r11unorm',\n  EACR11Snorm: 'eac-r11snorm',\n  EACRG11Unorm: 'eac-rg11unorm',\n  EACRG11Snorm: 'eac-rg11snorm',\n  // ASTC compressed formats usable if 'texture-compression-astc' is both\n  // supported by the device/user agent and enabled in requestDevice.\n\n  ASTC4x4Unorm: 'astc-4x4-unorm',\n  ASTC4x4UnormSRGB: 'astc-4x4-unorm-srgb',\n  ASTC5x4Unorm: 'astc-5x4-unorm',\n  ASTC5x4UnormSRGB: 'astc-5x4-unorm-srgb',\n  ASTC5x5Unorm: 'astc-5x5-unorm',\n  ASTC5x5UnormSRGB: 'astc-5x5-unorm-srgb',\n  ASTC6x5Unorm: 'astc-6x5-unorm',\n  ASTC6x5UnormSRGB: 'astc-6x5-unorm-srgb',\n  ASTC6x6Unorm: 'astc-6x6-unorm',\n  ASTC6x6UnormSRGB: 'astc-6x6-unorm-srgb',\n  ASTC8x5Unorm: 'astc-8x5-unorm',\n  ASTC8x5UnormSRGB: 'astc-8x5-unorm-srgb',\n  ASTC8x6Unorm: 'astc-8x6-unorm',\n  ASTC8x6UnormSRGB: 'astc-8x6-unorm-srgb',\n  ASTC8x8Unorm: 'astc-8x8-unorm',\n  ASTC8x8UnormSRGB: 'astc-8x8-unorm-srgb',\n  ASTC10x5Unorm: 'astc-10x5-unorm',\n  ASTC10x5UnormSRGB: 'astc-10x5-unorm-srgb',\n  ASTC10x6Unorm: 'astc-10x6-unorm',\n  ASTC10x6UnormSRGB: 'astc-10x6-unorm-srgb',\n  ASTC10x8Unorm: 'astc-10x8-unorm',\n  ASTC10x8UnormSRGB: 'astc-10x8-unorm-srgb',\n  ASTC10x10Unorm: 'astc-10x10-unorm',\n  ASTC10x10UnormSRGB: 'astc-10x10-unorm-srgb',\n  ASTC12x10Unorm: 'astc-12x10-unorm',\n  ASTC12x10UnormSRGB: 'astc-12x10-unorm-srgb',\n  ASTC12x12Unorm: 'astc-12x12-unorm',\n  ASTC12x12UnormSRGB: 'astc-12x12-unorm-srgb'\n};\nexport const GPUAddressMode = {\n  ClampToEdge: 'clamp-to-edge',\n  Repeat: 'repeat',\n  MirrorRepeat: 'mirror-repeat'\n};\nexport const GPUFilterMode = {\n  Linear: 'linear',\n  Nearest: 'nearest'\n};\nexport const GPUBlendFactor = {\n  Zero: 'zero',\n  One: 'one',\n  Src: 'src',\n  OneMinusSrc: 'one-minus-src',\n  SrcAlpha: 'src-alpha',\n  OneMinusSrcAlpha: 'one-minus-src-alpha',\n  Dst: 'dst',\n  OneMinusDstColor: 'one-minus-dst',\n  DstAlpha: 'dst-alpha',\n  OneMinusDstAlpha: 'one-minus-dst-alpha',\n  SrcAlphaSaturated: 'src-alpha-saturated',\n  Constant: 'constant',\n  OneMinusConstant: 'one-minus-constant'\n};\nexport const GPUBlendOperation = {\n  Add: 'add',\n  Subtract: 'subtract',\n  ReverseSubtract: 'reverse-subtract',\n  Min: 'min',\n  Max: 'max'\n};\nexport const GPUColorWriteFlags = {\n  None: 0,\n  Red: 0x1,\n  Green: 0x2,\n  Blue: 0x4,\n  Alpha: 0x8,\n  All: 0xF\n};\nexport const GPUStencilOperation = {\n  Keep: 'keep',\n  Zero: 'zero',\n  Replace: 'replace',\n  Invert: 'invert',\n  IncrementClamp: 'increment-clamp',\n  DecrementClamp: 'decrement-clamp',\n  IncrementWrap: 'increment-wrap',\n  DecrementWrap: 'decrement-wrap'\n};\nexport const GPUBufferBindingType = {\n  Uniform: 'uniform',\n  Storage: 'storage',\n  ReadOnlyStorage: 'read-only-storage'\n};\nexport const GPUSamplerBindingType = {\n  Filtering: 'filtering',\n  NonFiltering: 'non-filtering',\n  Comparison: 'comparison'\n};\nexport const GPUTextureSampleType = {\n  Float: 'float',\n  UnfilterableFloat: 'unfilterable-float',\n  Depth: 'depth',\n  SInt: 'sint',\n  UInt: 'uint'\n};\nexport const GPUTextureDimension = {\n  OneD: '1d',\n  TwoD: '2d',\n  ThreeD: '3d'\n};\nexport const GPUTextureViewDimension = {\n  OneD: '1d',\n  TwoD: '2d',\n  TwoDArray: '2d-array',\n  Cube: 'cube',\n  CubeArray: 'cube-array',\n  ThreeD: '3d'\n};\nexport const GPUTextureAspect = {\n  All: 'all',\n  StencilOnly: 'stencil-only',\n  DepthOnly: 'depth-only'\n};\nexport const GPUInputStepMode = {\n  Vertex: 'vertex',\n  Instance: 'instance'\n};\nexport const GPUFeatureName = {\n  DepthClipControl: 'depth-clip-control',\n  Depth32FloatStencil8: 'depth32float-stencil8',\n  TextureCompressionBC: 'texture-compression-bc',\n  TextureCompressionETC2: 'texture-compression-etc2',\n  TextureCompressionASTC: 'texture-compression-astc',\n  TimestampQuery: 'timestamp-query',\n  IndirectFirstInstance: 'indirect-first-instance',\n  ShaderF16: 'shader-f16',\n  RG11B10UFloat: 'rg11b10ufloat-renderable',\n  BGRA8UNormStorage: 'bgra8unorm-storage',\n  Float32Filterable: 'float32-filterable'\n};","map":{"version":3,"names":["GPUPrimitiveTopology","PointList","LineList","LineStrip","TriangleList","TriangleStrip","GPUCompareFunction","Never","Less","Equal","LessEqual","Greater","NotEqual","GreaterEqual","Always","GPUStoreOp","Store","Discard","GPULoadOp","Load","Clear","GPUFrontFace","CCW","CW","GPUCullMode","None","Front","Back","GPUIndexFormat","Uint16","Uint32","GPUVertexFormat","Uint8x2","Uint8x4","Sint8x2","Sint8x4","Unorm8x2","Unorm8x4","Snorm8x2","Snorm8x4","Uint16x2","Uint16x4","Sint16x2","Sint16x4","Unorm16x2","Unorm16x4","Snorm16x2","Snorm16x4","Float16x2","Float16x4","Float32","Float32x2","Float32x3","Float32x4","Uint32x2","Uint32x3","Uint32x4","Sint32","Sint32x2","Sint32x3","Sint32x4","GPUTextureFormat","R8Unorm","R8Snorm","R8Uint","R8Sint","R16Uint","R16Sint","R16Float","RG8Unorm","RG8Snorm","RG8Uint","RG8Sint","R32Uint","R32Sint","R32Float","RG16Uint","RG16Sint","RG16Float","RGBA8Unorm","RGBA8UnormSRGB","RGBA8Snorm","RGBA8Uint","RGBA8Sint","BGRA8Unorm","BGRA8UnormSRGB","RGB9E5UFloat","RGB10A2Unorm","RG11B10uFloat","RG32Uint","RG32Sint","RG32Float","RGBA16Uint","RGBA16Sint","RGBA16Float","RGBA32Uint","RGBA32Sint","RGBA32Float","Stencil8","Depth16Unorm","Depth24Plus","Depth24PlusStencil8","Depth32Float","Depth32FloatStencil8","BC1RGBAUnorm","BC1RGBAUnormSRGB","BC2RGBAUnorm","BC2RGBAUnormSRGB","BC3RGBAUnorm","BC3RGBAUnormSRGB","BC4RUnorm","BC4RSnorm","BC5RGUnorm","BC5RGSnorm","BC6HRGBUFloat","BC6HRGBFloat","BC7RGBAUnorm","BC7RGBAUnormSRGB","ETC2RGB8Unorm","ETC2RGB8UnormSRGB","ETC2RGB8A1Unorm","ETC2RGB8A1UnormSRGB","ETC2RGBA8Unorm","ETC2RGBA8UnormSRGB","EACR11Unorm","EACR11Snorm","EACRG11Unorm","EACRG11Snorm","ASTC4x4Unorm","ASTC4x4UnormSRGB","ASTC5x4Unorm","ASTC5x4UnormSRGB","ASTC5x5Unorm","ASTC5x5UnormSRGB","ASTC6x5Unorm","ASTC6x5UnormSRGB","ASTC6x6Unorm","ASTC6x6UnormSRGB","ASTC8x5Unorm","ASTC8x5UnormSRGB","ASTC8x6Unorm","ASTC8x6UnormSRGB","ASTC8x8Unorm","ASTC8x8UnormSRGB","ASTC10x5Unorm","ASTC10x5UnormSRGB","ASTC10x6Unorm","ASTC10x6UnormSRGB","ASTC10x8Unorm","ASTC10x8UnormSRGB","ASTC10x10Unorm","ASTC10x10UnormSRGB","ASTC12x10Unorm","ASTC12x10UnormSRGB","ASTC12x12Unorm","ASTC12x12UnormSRGB","GPUAddressMode","ClampToEdge","Repeat","MirrorRepeat","GPUFilterMode","Linear","Nearest","GPUBlendFactor","Zero","One","Src","OneMinusSrc","SrcAlpha","OneMinusSrcAlpha","Dst","OneMinusDstColor","DstAlpha","OneMinusDstAlpha","SrcAlphaSaturated","Constant","OneMinusConstant","GPUBlendOperation","Add","Subtract","ReverseSubtract","Min","Max","GPUColorWriteFlags","Red","Green","Blue","Alpha","All","GPUStencilOperation","Keep","Replace","Invert","IncrementClamp","DecrementClamp","IncrementWrap","DecrementWrap","GPUBufferBindingType","Uniform","Storage","ReadOnlyStorage","GPUSamplerBindingType","Filtering","NonFiltering","Comparison","GPUTextureSampleType","Float","UnfilterableFloat","Depth","SInt","UInt","GPUTextureDimension","OneD","TwoD","ThreeD","GPUTextureViewDimension","TwoDArray","Cube","CubeArray","GPUTextureAspect","StencilOnly","DepthOnly","GPUInputStepMode","Vertex","Instance","GPUFeatureName","DepthClipControl","TextureCompressionBC","TextureCompressionETC2","TextureCompressionASTC","TimestampQuery","IndirectFirstInstance","ShaderF16","RG11B10UFloat","BGRA8UNormStorage","Float32Filterable"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/renderers/webgpu/utils/WebGPUConstants.js"],"sourcesContent":["export const GPUPrimitiveTopology = {\n\tPointList: 'point-list',\n\tLineList: 'line-list',\n\tLineStrip: 'line-strip',\n\tTriangleList: 'triangle-list',\n\tTriangleStrip: 'triangle-strip',\n};\n\nexport const GPUCompareFunction = {\n\tNever: 'never',\n\tLess: 'less',\n\tEqual: 'equal',\n\tLessEqual: 'less-equal',\n\tGreater: 'greater',\n\tNotEqual: 'not-equal',\n\tGreaterEqual: 'greater-equal',\n\tAlways: 'always'\n};\n\nexport const GPUStoreOp = {\n\tStore: 'store',\n\tDiscard: 'discard'\n};\n\nexport const GPULoadOp = {\n\tLoad: 'load',\n\tClear: 'clear'\n};\n\nexport const GPUFrontFace = {\n\tCCW: 'ccw',\n\tCW: 'cw'\n};\n\nexport const GPUCullMode = {\n\tNone: 'none',\n\tFront: 'front',\n\tBack: 'back'\n};\n\nexport const GPUIndexFormat = {\n\tUint16: 'uint16',\n\tUint32: 'uint32'\n};\n\nexport const GPUVertexFormat = {\n\tUint8x2: 'uint8x2',\n\tUint8x4: 'uint8x4',\n\tSint8x2: 'sint8x2',\n\tSint8x4: 'sint8x4',\n\tUnorm8x2: 'unorm8x2',\n\tUnorm8x4: 'unorm8x4',\n\tSnorm8x2: 'snorm8x2',\n\tSnorm8x4: 'snorm8x4',\n\tUint16x2: 'uint16x2',\n\tUint16x4: 'uint16x4',\n\tSint16x2: 'sint16x2',\n\tSint16x4: 'sint16x4',\n\tUnorm16x2: 'unorm16x2',\n\tUnorm16x4: 'unorm16x4',\n\tSnorm16x2: 'snorm16x2',\n\tSnorm16x4: 'snorm16x4',\n\tFloat16x2: 'float16x2',\n\tFloat16x4: 'float16x4',\n\tFloat32: 'float32',\n\tFloat32x2: 'float32x2',\n\tFloat32x3: 'float32x3',\n\tFloat32x4: 'float32x4',\n\tUint32: 'uint32',\n\tUint32x2: 'uint32x2',\n\tUint32x3: 'uint32x3',\n\tUint32x4: 'uint32x4',\n\tSint32: 'sint32',\n\tSint32x2: 'sint32x2',\n\tSint32x3: 'sint32x3',\n\tSint32x4: 'sint32x4'\n};\n\nexport const GPUTextureFormat = {\n\n\t// 8-bit formats\n\n\tR8Unorm: 'r8unorm',\n\tR8Snorm: 'r8snorm',\n\tR8Uint: 'r8uint',\n\tR8Sint: 'r8sint',\n\n\t// 16-bit formats\n\n\tR16Uint: 'r16uint',\n\tR16Sint: 'r16sint',\n\tR16Float: 'r16float',\n\tRG8Unorm: 'rg8unorm',\n\tRG8Snorm: 'rg8snorm',\n\tRG8Uint: 'rg8uint',\n\tRG8Sint: 'rg8sint',\n\n\t// 32-bit formats\n\n\tR32Uint: 'r32uint',\n\tR32Sint: 'r32sint',\n\tR32Float: 'r32float',\n\tRG16Uint: 'rg16uint',\n\tRG16Sint: 'rg16sint',\n\tRG16Float: 'rg16float',\n\tRGBA8Unorm: 'rgba8unorm',\n\tRGBA8UnormSRGB: 'rgba8unorm-srgb',\n\tRGBA8Snorm: 'rgba8snorm',\n\tRGBA8Uint: 'rgba8uint',\n\tRGBA8Sint: 'rgba8sint',\n\tBGRA8Unorm: 'bgra8unorm',\n\tBGRA8UnormSRGB: 'bgra8unorm-srgb',\n\t// Packed 32-bit formats\n\tRGB9E5UFloat: 'rgb9e5ufloat',\n\tRGB10A2Unorm: 'rgb10a2unorm',\n\tRG11B10uFloat: 'rgb10a2unorm',\n\n\t// 64-bit formats\n\n\tRG32Uint: 'rg32uint',\n\tRG32Sint: 'rg32sint',\n\tRG32Float: 'rg32float',\n\tRGBA16Uint: 'rgba16uint',\n\tRGBA16Sint: 'rgba16sint',\n\tRGBA16Float: 'rgba16float',\n\n\t// 128-bit formats\n\n\tRGBA32Uint: 'rgba32uint',\n\tRGBA32Sint: 'rgba32sint',\n\tRGBA32Float: 'rgba32float',\n\n\t// Depth and stencil formats\n\n\tStencil8: 'stencil8',\n\tDepth16Unorm: 'depth16unorm',\n\tDepth24Plus: 'depth24plus',\n\tDepth24PlusStencil8: 'depth24plus-stencil8',\n\tDepth32Float: 'depth32float',\n\n\t// 'depth32float-stencil8' extension\n\n\tDepth32FloatStencil8: 'depth32float-stencil8',\n\n\t// BC compressed formats usable if 'texture-compression-bc' is both\n\t// supported by the device/user agent and enabled in requestDevice.\n\n\tBC1RGBAUnorm: 'bc1-rgba-unorm',\n\tBC1RGBAUnormSRGB: 'bc1-rgba-unorm-srgb',\n\tBC2RGBAUnorm: 'bc2-rgba-unorm',\n\tBC2RGBAUnormSRGB: 'bc2-rgba-unorm-srgb',\n\tBC3RGBAUnorm: 'bc3-rgba-unorm',\n\tBC3RGBAUnormSRGB: 'bc3-rgba-unorm-srgb',\n\tBC4RUnorm: 'bc4-r-unorm',\n\tBC4RSnorm: 'bc4-r-snorm',\n\tBC5RGUnorm: 'bc5-rg-unorm',\n\tBC5RGSnorm: 'bc5-rg-snorm',\n\tBC6HRGBUFloat: 'bc6h-rgb-ufloat',\n\tBC6HRGBFloat: 'bc6h-rgb-float',\n\tBC7RGBAUnorm: 'bc7-rgba-unorm',\n\tBC7RGBAUnormSRGB: 'bc7-rgba-srgb',\n\n\t// ETC2 compressed formats usable if 'texture-compression-etc2' is both\n\t// supported by the device/user agent and enabled in requestDevice.\n\n\tETC2RGB8Unorm: 'etc2-rgb8unorm',\n\tETC2RGB8UnormSRGB: 'etc2-rgb8unorm-srgb',\n\tETC2RGB8A1Unorm: 'etc2-rgb8a1unorm',\n\tETC2RGB8A1UnormSRGB: 'etc2-rgb8a1unorm-srgb',\n\tETC2RGBA8Unorm: 'etc2-rgba8unorm',\n\tETC2RGBA8UnormSRGB: 'etc2-rgba8unorm-srgb',\n\tEACR11Unorm: 'eac-r11unorm',\n\tEACR11Snorm: 'eac-r11snorm',\n\tEACRG11Unorm: 'eac-rg11unorm',\n\tEACRG11Snorm: 'eac-rg11snorm',\n\n\t// ASTC compressed formats usable if 'texture-compression-astc' is both\n\t// supported by the device/user agent and enabled in requestDevice.\n\n\tASTC4x4Unorm: 'astc-4x4-unorm',\n\tASTC4x4UnormSRGB: 'astc-4x4-unorm-srgb',\n\tASTC5x4Unorm: 'astc-5x4-unorm',\n\tASTC5x4UnormSRGB: 'astc-5x4-unorm-srgb',\n\tASTC5x5Unorm: 'astc-5x5-unorm',\n\tASTC5x5UnormSRGB: 'astc-5x5-unorm-srgb',\n\tASTC6x5Unorm: 'astc-6x5-unorm',\n\tASTC6x5UnormSRGB: 'astc-6x5-unorm-srgb',\n\tASTC6x6Unorm: 'astc-6x6-unorm',\n\tASTC6x6UnormSRGB: 'astc-6x6-unorm-srgb',\n\tASTC8x5Unorm: 'astc-8x5-unorm',\n\tASTC8x5UnormSRGB: 'astc-8x5-unorm-srgb',\n\tASTC8x6Unorm: 'astc-8x6-unorm',\n\tASTC8x6UnormSRGB: 'astc-8x6-unorm-srgb',\n\tASTC8x8Unorm: 'astc-8x8-unorm',\n\tASTC8x8UnormSRGB: 'astc-8x8-unorm-srgb',\n\tASTC10x5Unorm: 'astc-10x5-unorm',\n\tASTC10x5UnormSRGB: 'astc-10x5-unorm-srgb',\n\tASTC10x6Unorm: 'astc-10x6-unorm',\n\tASTC10x6UnormSRGB: 'astc-10x6-unorm-srgb',\n\tASTC10x8Unorm: 'astc-10x8-unorm',\n\tASTC10x8UnormSRGB: 'astc-10x8-unorm-srgb',\n\tASTC10x10Unorm: 'astc-10x10-unorm',\n\tASTC10x10UnormSRGB: 'astc-10x10-unorm-srgb',\n\tASTC12x10Unorm: 'astc-12x10-unorm',\n\tASTC12x10UnormSRGB: 'astc-12x10-unorm-srgb',\n\tASTC12x12Unorm: 'astc-12x12-unorm',\n\tASTC12x12UnormSRGB: 'astc-12x12-unorm-srgb',\n\n};\n\nexport const GPUAddressMode = {\n\tClampToEdge: 'clamp-to-edge',\n\tRepeat: 'repeat',\n\tMirrorRepeat: 'mirror-repeat'\n};\n\nexport const GPUFilterMode = {\n\tLinear: 'linear',\n\tNearest: 'nearest'\n};\n\nexport const GPUBlendFactor = {\n\tZero: 'zero',\n\tOne: 'one',\n\tSrc: 'src',\n\tOneMinusSrc: 'one-minus-src',\n\tSrcAlpha: 'src-alpha',\n\tOneMinusSrcAlpha: 'one-minus-src-alpha',\n\tDst: 'dst',\n\tOneMinusDstColor: 'one-minus-dst',\n\tDstAlpha: 'dst-alpha',\n\tOneMinusDstAlpha: 'one-minus-dst-alpha',\n\tSrcAlphaSaturated: 'src-alpha-saturated',\n\tConstant: 'constant',\n\tOneMinusConstant: 'one-minus-constant'\n};\n\nexport const GPUBlendOperation = {\n\tAdd: 'add',\n\tSubtract: 'subtract',\n\tReverseSubtract: 'reverse-subtract',\n\tMin: 'min',\n\tMax: 'max'\n};\n\nexport const GPUColorWriteFlags = {\n\tNone: 0,\n\tRed: 0x1,\n\tGreen: 0x2,\n\tBlue: 0x4,\n\tAlpha: 0x8,\n\tAll: 0xF\n};\n\nexport const GPUStencilOperation = {\n\tKeep: 'keep',\n\tZero: 'zero',\n\tReplace: 'replace',\n\tInvert: 'invert',\n\tIncrementClamp: 'increment-clamp',\n\tDecrementClamp: 'decrement-clamp',\n\tIncrementWrap: 'increment-wrap',\n\tDecrementWrap: 'decrement-wrap'\n};\n\nexport const GPUBufferBindingType = {\n\tUniform: 'uniform',\n\tStorage: 'storage',\n\tReadOnlyStorage: 'read-only-storage'\n};\n\nexport const GPUSamplerBindingType = {\n\tFiltering: 'filtering',\n\tNonFiltering: 'non-filtering',\n\tComparison: 'comparison'\n};\n\nexport const GPUTextureSampleType = {\n\tFloat: 'float',\n\tUnfilterableFloat: 'unfilterable-float',\n\tDepth: 'depth',\n\tSInt: 'sint',\n\tUInt: 'uint'\n};\n\nexport const GPUTextureDimension = {\n\tOneD: '1d',\n\tTwoD: '2d',\n\tThreeD: '3d'\n};\n\nexport const GPUTextureViewDimension = {\n\tOneD: '1d',\n\tTwoD: '2d',\n\tTwoDArray: '2d-array',\n\tCube: 'cube',\n\tCubeArray: 'cube-array',\n\tThreeD: '3d'\n};\n\nexport const GPUTextureAspect = {\n\tAll: 'all',\n\tStencilOnly: 'stencil-only',\n\tDepthOnly: 'depth-only'\n};\n\nexport const GPUInputStepMode = {\n\tVertex: 'vertex',\n\tInstance: 'instance'\n};\n\nexport const GPUFeatureName = {\n\tDepthClipControl: 'depth-clip-control',\n\tDepth32FloatStencil8: 'depth32float-stencil8',\n\tTextureCompressionBC: 'texture-compression-bc',\n\tTextureCompressionETC2: 'texture-compression-etc2',\n\tTextureCompressionASTC: 'texture-compression-astc',\n\tTimestampQuery: 'timestamp-query',\n\tIndirectFirstInstance: 'indirect-first-instance',\n\tShaderF16: 'shader-f16',\n\tRG11B10UFloat: 'rg11b10ufloat-renderable',\n\tBGRA8UNormStorage: 'bgra8unorm-storage',\n\tFloat32Filterable: 'float32-filterable'\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}