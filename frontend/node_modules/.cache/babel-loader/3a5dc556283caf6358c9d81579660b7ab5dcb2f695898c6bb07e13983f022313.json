{"ast":null,"code":"import { Box2, Camera, Color, Matrix3, Matrix4, Object3D, Vector3 } from 'three';\nimport { Projector } from '../renderers/Projector.js';\nimport { RenderableFace } from '../renderers/Projector.js';\nimport { RenderableLine } from '../renderers/Projector.js';\nimport { RenderableSprite } from '../renderers/Projector.js';\nclass SVGObject extends Object3D {\n  constructor(node) {\n    super();\n    this.isSVGObject = true;\n    this.node = node;\n  }\n}\nclass SVGRenderer {\n  constructor() {\n    let _renderData,\n      _elements,\n      _lights,\n      _svgWidth,\n      _svgHeight,\n      _svgWidthHalf,\n      _svgHeightHalf,\n      _v1,\n      _v2,\n      _v3,\n      _svgNode,\n      _pathCount = 0,\n      _precision = null,\n      _quality = 1,\n      _currentPath,\n      _currentStyle;\n    const _this = this,\n      _clipBox = new Box2(),\n      _elemBox = new Box2(),\n      _color = new Color(),\n      _diffuseColor = new Color(),\n      _ambientLight = new Color(),\n      _directionalLights = new Color(),\n      _pointLights = new Color(),\n      _clearColor = new Color(),\n      _vector3 = new Vector3(),\n      // Needed for PointLight\n      _centroid = new Vector3(),\n      _normal = new Vector3(),\n      _normalViewMatrix = new Matrix3(),\n      _viewMatrix = new Matrix4(),\n      _viewProjectionMatrix = new Matrix4(),\n      _svgPathPool = [],\n      _projector = new Projector(),\n      _svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    this.domElement = _svg;\n    this.autoClear = true;\n    this.sortObjects = true;\n    this.sortElements = true;\n    this.overdraw = 0.5;\n    this.info = {\n      render: {\n        vertices: 0,\n        faces: 0\n      }\n    };\n    this.setQuality = function (quality) {\n      switch (quality) {\n        case 'high':\n          _quality = 1;\n          break;\n        case 'low':\n          _quality = 0;\n          break;\n      }\n    };\n    this.setClearColor = function (color) {\n      _clearColor.set(color);\n    };\n    this.setPixelRatio = function () {};\n    this.setSize = function (width, height) {\n      _svgWidth = width;\n      _svgHeight = height;\n      _svgWidthHalf = _svgWidth / 2;\n      _svgHeightHalf = _svgHeight / 2;\n      _svg.setAttribute('viewBox', -_svgWidthHalf + ' ' + -_svgHeightHalf + ' ' + _svgWidth + ' ' + _svgHeight);\n      _svg.setAttribute('width', _svgWidth);\n      _svg.setAttribute('height', _svgHeight);\n      _clipBox.min.set(-_svgWidthHalf, -_svgHeightHalf);\n      _clipBox.max.set(_svgWidthHalf, _svgHeightHalf);\n    };\n    this.getSize = function () {\n      return {\n        width: _svgWidth,\n        height: _svgHeight\n      };\n    };\n    this.setPrecision = function (precision) {\n      _precision = precision;\n    };\n    function removeChildNodes() {\n      _pathCount = 0;\n      while (_svg.childNodes.length > 0) {\n        _svg.removeChild(_svg.childNodes[0]);\n      }\n    }\n    function convert(c) {\n      return _precision !== null ? c.toFixed(_precision) : c;\n    }\n    this.clear = function () {\n      removeChildNodes();\n      _svg.style.backgroundColor = _clearColor.getStyle();\n    };\n    this.render = function (scene, camera) {\n      if (camera instanceof Camera === false) {\n        console.error('THREE.SVGRenderer.render: camera is not an instance of Camera.');\n        return;\n      }\n      const background = scene.background;\n      if (background && background.isColor) {\n        removeChildNodes();\n        _svg.style.backgroundColor = background.getStyle();\n      } else if (this.autoClear === true) {\n        this.clear();\n      }\n      _this.info.render.vertices = 0;\n      _this.info.render.faces = 0;\n      _viewMatrix.copy(camera.matrixWorldInverse);\n      _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n      _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n      _elements = _renderData.elements;\n      _lights = _renderData.lights;\n      _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n      calculateLights(_lights);\n\n      // reset accumulated path\n\n      _currentPath = '';\n      _currentStyle = '';\n      for (let e = 0, el = _elements.length; e < el; e++) {\n        const element = _elements[e];\n        const material = element.material;\n        if (material === undefined || material.opacity === 0) continue;\n        _elemBox.makeEmpty();\n        if (element instanceof RenderableSprite) {\n          _v1 = element;\n          _v1.x *= _svgWidthHalf;\n          _v1.y *= -_svgHeightHalf;\n          renderSprite(_v1, element, material);\n        } else if (element instanceof RenderableLine) {\n          _v1 = element.v1;\n          _v2 = element.v2;\n          _v1.positionScreen.x *= _svgWidthHalf;\n          _v1.positionScreen.y *= -_svgHeightHalf;\n          _v2.positionScreen.x *= _svgWidthHalf;\n          _v2.positionScreen.y *= -_svgHeightHalf;\n          _elemBox.setFromPoints([_v1.positionScreen, _v2.positionScreen]);\n          if (_clipBox.intersectsBox(_elemBox) === true) {\n            renderLine(_v1, _v2, material);\n          }\n        } else if (element instanceof RenderableFace) {\n          _v1 = element.v1;\n          _v2 = element.v2;\n          _v3 = element.v3;\n          if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n          if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n          if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n          _v1.positionScreen.x *= _svgWidthHalf;\n          _v1.positionScreen.y *= -_svgHeightHalf;\n          _v2.positionScreen.x *= _svgWidthHalf;\n          _v2.positionScreen.y *= -_svgHeightHalf;\n          _v3.positionScreen.x *= _svgWidthHalf;\n          _v3.positionScreen.y *= -_svgHeightHalf;\n          if (this.overdraw > 0) {\n            expand(_v1.positionScreen, _v2.positionScreen, this.overdraw);\n            expand(_v2.positionScreen, _v3.positionScreen, this.overdraw);\n            expand(_v3.positionScreen, _v1.positionScreen, this.overdraw);\n          }\n          _elemBox.setFromPoints([_v1.positionScreen, _v2.positionScreen, _v3.positionScreen]);\n          if (_clipBox.intersectsBox(_elemBox) === true) {\n            renderFace3(_v1, _v2, _v3, element, material);\n          }\n        }\n      }\n      flushPath(); // just to flush last svg:path\n\n      scene.traverseVisible(function (object) {\n        if (object.isSVGObject) {\n          _vector3.setFromMatrixPosition(object.matrixWorld);\n          _vector3.applyMatrix4(_viewProjectionMatrix);\n          if (_vector3.z < -1 || _vector3.z > 1) return;\n          const x = _vector3.x * _svgWidthHalf;\n          const y = -_vector3.y * _svgHeightHalf;\n          const node = object.node;\n          node.setAttribute('transform', 'translate(' + x + ',' + y + ')');\n          _svg.appendChild(node);\n        }\n      });\n    };\n    function calculateLights(lights) {\n      _ambientLight.setRGB(0, 0, 0);\n      _directionalLights.setRGB(0, 0, 0);\n      _pointLights.setRGB(0, 0, 0);\n      for (let l = 0, ll = lights.length; l < ll; l++) {\n        const light = lights[l];\n        const lightColor = light.color;\n        if (light.isAmbientLight) {\n          _ambientLight.r += lightColor.r;\n          _ambientLight.g += lightColor.g;\n          _ambientLight.b += lightColor.b;\n        } else if (light.isDirectionalLight) {\n          _directionalLights.r += lightColor.r;\n          _directionalLights.g += lightColor.g;\n          _directionalLights.b += lightColor.b;\n        } else if (light.isPointLight) {\n          _pointLights.r += lightColor.r;\n          _pointLights.g += lightColor.g;\n          _pointLights.b += lightColor.b;\n        }\n      }\n    }\n    function calculateLight(lights, position, normal, color) {\n      for (let l = 0, ll = lights.length; l < ll; l++) {\n        const light = lights[l];\n        const lightColor = light.color;\n        if (light.isDirectionalLight) {\n          const lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n          let amount = normal.dot(lightPosition);\n          if (amount <= 0) continue;\n          amount *= light.intensity;\n          color.r += lightColor.r * amount;\n          color.g += lightColor.g * amount;\n          color.b += lightColor.b * amount;\n        } else if (light.isPointLight) {\n          const lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n          let amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n          if (amount <= 0) continue;\n          amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n          if (amount == 0) continue;\n          amount *= light.intensity;\n          color.r += lightColor.r * amount;\n          color.g += lightColor.g * amount;\n          color.b += lightColor.b * amount;\n        }\n      }\n    }\n    function renderSprite(v1, element, material) {\n      let scaleX = element.scale.x * _svgWidthHalf;\n      let scaleY = element.scale.y * _svgHeightHalf;\n      if (material.isPointsMaterial) {\n        scaleX *= material.size;\n        scaleY *= material.size;\n      }\n      const path = 'M' + convert(v1.x - scaleX * 0.5) + ',' + convert(v1.y - scaleY * 0.5) + 'h' + convert(scaleX) + 'v' + convert(scaleY) + 'h' + convert(-scaleX) + 'z';\n      let style = '';\n      if (material.isSpriteMaterial || material.isPointsMaterial) {\n        style = 'fill:' + material.color.getStyle() + ';fill-opacity:' + material.opacity;\n      }\n      addPath(style, path);\n    }\n    function renderLine(v1, v2, material) {\n      const path = 'M' + convert(v1.positionScreen.x) + ',' + convert(v1.positionScreen.y) + 'L' + convert(v2.positionScreen.x) + ',' + convert(v2.positionScreen.y);\n      if (material.isLineBasicMaterial) {\n        let style = 'fill:none;stroke:' + material.color.getStyle() + ';stroke-opacity:' + material.opacity + ';stroke-width:' + material.linewidth + ';stroke-linecap:' + material.linecap;\n        if (material.isLineDashedMaterial) {\n          style = style + ';stroke-dasharray:' + material.dashSize + ',' + material.gapSize;\n        }\n        addPath(style, path);\n      }\n    }\n    function renderFace3(v1, v2, v3, element, material) {\n      _this.info.render.vertices += 3;\n      _this.info.render.faces++;\n      const path = 'M' + convert(v1.positionScreen.x) + ',' + convert(v1.positionScreen.y) + 'L' + convert(v2.positionScreen.x) + ',' + convert(v2.positionScreen.y) + 'L' + convert(v3.positionScreen.x) + ',' + convert(v3.positionScreen.y) + 'z';\n      let style = '';\n      if (material.isMeshBasicMaterial) {\n        _color.copy(material.color);\n        if (material.vertexColors) {\n          _color.multiply(element.color);\n        }\n      } else if (material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial) {\n        _diffuseColor.copy(material.color);\n        if (material.vertexColors) {\n          _diffuseColor.multiply(element.color);\n        }\n        _color.copy(_ambientLight);\n        _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n        calculateLight(_lights, _centroid, element.normalModel, _color);\n        _color.multiply(_diffuseColor).add(material.emissive);\n      } else if (material.isMeshNormalMaterial) {\n        _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix).normalize();\n        _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(0.5).addScalar(0.5);\n      }\n      if (material.wireframe) {\n        style = 'fill:none;stroke:' + _color.getStyle() + ';stroke-opacity:' + material.opacity + ';stroke-width:' + material.wireframeLinewidth + ';stroke-linecap:' + material.wireframeLinecap + ';stroke-linejoin:' + material.wireframeLinejoin;\n      } else {\n        style = 'fill:' + _color.getStyle() + ';fill-opacity:' + material.opacity;\n      }\n      addPath(style, path);\n    }\n\n    // Hide anti-alias gaps\n\n    function expand(v1, v2, pixels) {\n      let x = v2.x - v1.x,\n        y = v2.y - v1.y;\n      const det = x * x + y * y;\n      if (det === 0) return;\n      const idet = pixels / Math.sqrt(det);\n      x *= idet;\n      y *= idet;\n      v2.x += x;\n      v2.y += y;\n      v1.x -= x;\n      v1.y -= y;\n    }\n    function addPath(style, path) {\n      if (_currentStyle === style) {\n        _currentPath += path;\n      } else {\n        flushPath();\n        _currentStyle = style;\n        _currentPath = path;\n      }\n    }\n    function flushPath() {\n      if (_currentPath) {\n        _svgNode = getPathNode(_pathCount++);\n        _svgNode.setAttribute('d', _currentPath);\n        _svgNode.setAttribute('style', _currentStyle);\n        _svg.appendChild(_svgNode);\n      }\n      _currentPath = '';\n      _currentStyle = '';\n    }\n    function getPathNode(id) {\n      if (_svgPathPool[id] == null) {\n        _svgPathPool[id] = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        if (_quality == 0) {\n          _svgPathPool[id].setAttribute('shape-rendering', 'crispEdges'); //optimizeSpeed\n        }\n\n        return _svgPathPool[id];\n      }\n      return _svgPathPool[id];\n    }\n  }\n}\nexport { SVGObject, SVGRenderer };","map":{"version":3,"names":["Box2","Camera","Color","Matrix3","Matrix4","Object3D","Vector3","Projector","RenderableFace","RenderableLine","RenderableSprite","SVGObject","constructor","node","isSVGObject","SVGRenderer","_renderData","_elements","_lights","_svgWidth","_svgHeight","_svgWidthHalf","_svgHeightHalf","_v1","_v2","_v3","_svgNode","_pathCount","_precision","_quality","_currentPath","_currentStyle","_this","_clipBox","_elemBox","_color","_diffuseColor","_ambientLight","_directionalLights","_pointLights","_clearColor","_vector3","_centroid","_normal","_normalViewMatrix","_viewMatrix","_viewProjectionMatrix","_svgPathPool","_projector","_svg","document","createElementNS","domElement","autoClear","sortObjects","sortElements","overdraw","info","render","vertices","faces","setQuality","quality","setClearColor","color","set","setPixelRatio","setSize","width","height","setAttribute","min","max","getSize","setPrecision","precision","removeChildNodes","childNodes","length","removeChild","convert","c","toFixed","clear","style","backgroundColor","getStyle","scene","camera","console","error","background","isColor","copy","matrixWorldInverse","multiplyMatrices","projectionMatrix","projectScene","elements","lights","getNormalMatrix","calculateLights","e","el","element","material","undefined","opacity","makeEmpty","x","y","renderSprite","v1","v2","positionScreen","setFromPoints","intersectsBox","renderLine","v3","z","expand","renderFace3","flushPath","traverseVisible","object","setFromMatrixPosition","matrixWorld","applyMatrix4","appendChild","setRGB","l","ll","light","lightColor","isAmbientLight","r","g","b","isDirectionalLight","isPointLight","calculateLight","position","normal","lightPosition","normalize","amount","dot","intensity","subVectors","distance","Math","distanceTo","scaleX","scale","scaleY","isPointsMaterial","size","path","isSpriteMaterial","addPath","isLineBasicMaterial","linewidth","linecap","isLineDashedMaterial","dashSize","gapSize","isMeshBasicMaterial","vertexColors","multiply","isMeshLambertMaterial","isMeshPhongMaterial","isMeshStandardMaterial","positionWorld","add","divideScalar","normalModel","emissive","isMeshNormalMaterial","applyMatrix3","multiplyScalar","addScalar","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","pixels","det","idet","sqrt","getPathNode","id"],"sources":["/Users/cabrera/Documents/GyroscopeVisualizer/frontend/node_modules/three/examples/jsm/renderers/SVGRenderer.js"],"sourcesContent":["import {\n\tBox2,\n\tCamera,\n\tColor,\n\tMatrix3,\n\tMatrix4,\n\tObject3D,\n\tVector3\n} from 'three';\nimport { Projector } from '../renderers/Projector.js';\nimport { RenderableFace } from '../renderers/Projector.js';\nimport { RenderableLine } from '../renderers/Projector.js';\nimport { RenderableSprite } from '../renderers/Projector.js';\n\nclass SVGObject extends Object3D {\n\n\tconstructor( node ) {\n\n\t\tsuper();\n\n\t\tthis.isSVGObject = true;\n\n\t\tthis.node = node;\n\n\t}\n\n}\n\nclass SVGRenderer {\n\n\tconstructor() {\n\n\t\tlet _renderData, _elements, _lights,\n\t\t\t_svgWidth, _svgHeight, _svgWidthHalf, _svgHeightHalf,\n\n\t\t\t_v1, _v2, _v3,\n\n\t\t\t_svgNode,\n\t\t\t_pathCount = 0,\n\n\t\t\t_precision = null,\n\t\t\t_quality = 1,\n\n\t\t\t_currentPath, _currentStyle;\n\n\t\tconst _this = this,\n\t\t\t_clipBox = new Box2(),\n\t\t\t_elemBox = new Box2(),\n\n\t\t\t_color = new Color(),\n\t\t\t_diffuseColor = new Color(),\n\t\t\t_ambientLight = new Color(),\n\t\t\t_directionalLights = new Color(),\n\t\t\t_pointLights = new Color(),\n\t\t\t_clearColor = new Color(),\n\n\t\t\t_vector3 = new Vector3(), // Needed for PointLight\n\t\t\t_centroid = new Vector3(),\n\t\t\t_normal = new Vector3(),\n\t\t\t_normalViewMatrix = new Matrix3(),\n\n\t\t\t_viewMatrix = new Matrix4(),\n\t\t\t_viewProjectionMatrix = new Matrix4(),\n\n\t\t\t_svgPathPool = [],\n\n\t\t\t_projector = new Projector(),\n\t\t\t_svg = document.createElementNS( 'http://www.w3.org/2000/svg', 'svg' );\n\n\t\tthis.domElement = _svg;\n\n\t\tthis.autoClear = true;\n\t\tthis.sortObjects = true;\n\t\tthis.sortElements = true;\n\n\t\tthis.overdraw = 0.5;\n\n\t\tthis.info = {\n\n\t\t\trender: {\n\n\t\t\t\tvertices: 0,\n\t\t\t\tfaces: 0\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setQuality = function ( quality ) {\n\n\t\t\tswitch ( quality ) {\n\n\t\t\t\tcase 'high': _quality = 1; break;\n\t\t\t\tcase 'low': _quality = 0; break;\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setClearColor = function ( color ) {\n\n\t\t\t_clearColor.set( color );\n\n\t\t};\n\n\t\tthis.setPixelRatio = function () {};\n\n\t\tthis.setSize = function ( width, height ) {\n\n\t\t\t_svgWidth = width; _svgHeight = height;\n\t\t\t_svgWidthHalf = _svgWidth / 2; _svgHeightHalf = _svgHeight / 2;\n\n\t\t\t_svg.setAttribute( 'viewBox', ( - _svgWidthHalf ) + ' ' + ( - _svgHeightHalf ) + ' ' + _svgWidth + ' ' + _svgHeight );\n\t\t\t_svg.setAttribute( 'width', _svgWidth );\n\t\t\t_svg.setAttribute( 'height', _svgHeight );\n\n\t\t\t_clipBox.min.set( - _svgWidthHalf, - _svgHeightHalf );\n\t\t\t_clipBox.max.set( _svgWidthHalf, _svgHeightHalf );\n\n\t\t};\n\n\t\tthis.getSize = function () {\n\n\t\t\treturn {\n\t\t\t\twidth: _svgWidth,\n\t\t\t\theight: _svgHeight\n\t\t\t};\n\n\t\t};\n\n\t\tthis.setPrecision = function ( precision ) {\n\n\t\t\t_precision = precision;\n\n\t\t};\n\n\t\tfunction removeChildNodes() {\n\n\t\t\t_pathCount = 0;\n\n\t\t\twhile ( _svg.childNodes.length > 0 ) {\n\n\t\t\t\t_svg.removeChild( _svg.childNodes[ 0 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction convert( c ) {\n\n\t\t\treturn _precision !== null ? c.toFixed( _precision ) : c;\n\n\t\t}\n\n\t\tthis.clear = function () {\n\n\t\t\tremoveChildNodes();\n\t\t\t_svg.style.backgroundColor = _clearColor.getStyle();\n\n\t\t};\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera instanceof Camera === false ) {\n\n\t\t\t\tconsole.error( 'THREE.SVGRenderer.render: camera is not an instance of Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst background = scene.background;\n\n\t\t\tif ( background && background.isColor ) {\n\n\t\t\t\tremoveChildNodes();\n\t\t\t\t_svg.style.backgroundColor = background.getStyle();\n\n\t\t\t} else if ( this.autoClear === true ) {\n\n\t\t\t\tthis.clear();\n\n\t\t\t}\n\n\t\t\t_this.info.render.vertices = 0;\n\t\t\t_this.info.render.faces = 0;\n\n\t\t\t_viewMatrix.copy( camera.matrixWorldInverse );\n\t\t\t_viewProjectionMatrix.multiplyMatrices( camera.projectionMatrix, _viewMatrix );\n\n\t\t\t_renderData = _projector.projectScene( scene, camera, this.sortObjects, this.sortElements );\n\t\t\t_elements = _renderData.elements;\n\t\t\t_lights = _renderData.lights;\n\n\t\t\t_normalViewMatrix.getNormalMatrix( camera.matrixWorldInverse );\n\n\t\t\tcalculateLights( _lights );\n\n\t\t\t // reset accumulated path\n\n\t\t\t_currentPath = '';\n\t\t\t_currentStyle = '';\n\n\t\t\tfor ( let e = 0, el = _elements.length; e < el; e ++ ) {\n\n\t\t\t\tconst element = _elements[ e ];\n\t\t\t\tconst material = element.material;\n\n\t\t\t\tif ( material === undefined || material.opacity === 0 ) continue;\n\n\t\t\t\t_elemBox.makeEmpty();\n\n\t\t\t\tif ( element instanceof RenderableSprite ) {\n\n\t\t\t\t\t_v1 = element;\n\t\t\t\t\t_v1.x *= _svgWidthHalf; _v1.y *= - _svgHeightHalf;\n\n\t\t\t\t\trenderSprite( _v1, element, material );\n\n\t\t\t\t} else if ( element instanceof RenderableLine ) {\n\n\t\t\t\t\t_v1 = element.v1; _v2 = element.v2;\n\n\t\t\t\t\t_v1.positionScreen.x *= _svgWidthHalf; _v1.positionScreen.y *= - _svgHeightHalf;\n\t\t\t\t\t_v2.positionScreen.x *= _svgWidthHalf; _v2.positionScreen.y *= - _svgHeightHalf;\n\n\t\t\t\t\t_elemBox.setFromPoints( [ _v1.positionScreen, _v2.positionScreen ] );\n\n\t\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\t\trenderLine( _v1, _v2, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( element instanceof RenderableFace ) {\n\n\t\t\t\t\t_v1 = element.v1; _v2 = element.v2; _v3 = element.v3;\n\n\t\t\t\t\tif ( _v1.positionScreen.z < - 1 || _v1.positionScreen.z > 1 ) continue;\n\t\t\t\t\tif ( _v2.positionScreen.z < - 1 || _v2.positionScreen.z > 1 ) continue;\n\t\t\t\t\tif ( _v3.positionScreen.z < - 1 || _v3.positionScreen.z > 1 ) continue;\n\n\t\t\t\t\t_v1.positionScreen.x *= _svgWidthHalf; _v1.positionScreen.y *= - _svgHeightHalf;\n\t\t\t\t\t_v2.positionScreen.x *= _svgWidthHalf; _v2.positionScreen.y *= - _svgHeightHalf;\n\t\t\t\t\t_v3.positionScreen.x *= _svgWidthHalf; _v3.positionScreen.y *= - _svgHeightHalf;\n\n\t\t\t\t\tif ( this.overdraw > 0 ) {\n\n\t\t\t\t\t\texpand( _v1.positionScreen, _v2.positionScreen, this.overdraw );\n\t\t\t\t\t\texpand( _v2.positionScreen, _v3.positionScreen, this.overdraw );\n\t\t\t\t\t\texpand( _v3.positionScreen, _v1.positionScreen, this.overdraw );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_elemBox.setFromPoints( [\n\t\t\t\t\t\t_v1.positionScreen,\n\t\t\t\t\t\t_v2.positionScreen,\n\t\t\t\t\t\t_v3.positionScreen\n\t\t\t\t\t] );\n\n\t\t\t\t\tif ( _clipBox.intersectsBox( _elemBox ) === true ) {\n\n\t\t\t\t\t\trenderFace3( _v1, _v2, _v3, element, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tflushPath(); // just to flush last svg:path\n\n\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t if ( object.isSVGObject ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n\t\t\t\t\t_vector3.applyMatrix4( _viewProjectionMatrix );\n\n\t\t\t\t\tif ( _vector3.z < - 1 || _vector3.z > 1 ) return;\n\n\t\t\t\t\tconst x = _vector3.x * _svgWidthHalf;\n\t\t\t\t\tconst y = - _vector3.y * _svgHeightHalf;\n\n\t\t\t\t\tconst node = object.node;\n\t\t\t\t\tnode.setAttribute( 'transform', 'translate(' + x + ',' + y + ')' );\n\n\t\t\t\t\t_svg.appendChild( node );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\tfunction calculateLights( lights ) {\n\n\t\t\t_ambientLight.setRGB( 0, 0, 0 );\n\t\t\t_directionalLights.setRGB( 0, 0, 0 );\n\t\t\t_pointLights.setRGB( 0, 0, 0 );\n\n\t\t\tfor ( let l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\t\tconst light = lights[ l ];\n\t\t\t\tconst lightColor = light.color;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\t_ambientLight.r += lightColor.r;\n\t\t\t\t\t_ambientLight.g += lightColor.g;\n\t\t\t\t\t_ambientLight.b += lightColor.b;\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\t_directionalLights.r += lightColor.r;\n\t\t\t\t\t_directionalLights.g += lightColor.g;\n\t\t\t\t\t_directionalLights.b += lightColor.b;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\t_pointLights.r += lightColor.r;\n\t\t\t\t\t_pointLights.g += lightColor.g;\n\t\t\t\t\t_pointLights.b += lightColor.b;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction calculateLight( lights, position, normal, color ) {\n\n\t\t\tfor ( let l = 0, ll = lights.length; l < ll; l ++ ) {\n\n\t\t\t\tconst light = lights[ l ];\n\t\t\t\tconst lightColor = light.color;\n\n\t\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\t\tconst lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld ).normalize();\n\n\t\t\t\t\tlet amount = normal.dot( lightPosition );\n\n\t\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\t\tamount *= light.intensity;\n\n\t\t\t\t\tcolor.r += lightColor.r * amount;\n\t\t\t\t\tcolor.g += lightColor.g * amount;\n\t\t\t\t\tcolor.b += lightColor.b * amount;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tconst lightPosition = _vector3.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\t\tlet amount = normal.dot( _vector3.subVectors( lightPosition, position ).normalize() );\n\n\t\t\t\t\tif ( amount <= 0 ) continue;\n\n\t\t\t\t\tamount *= light.distance == 0 ? 1 : 1 - Math.min( position.distanceTo( lightPosition ) / light.distance, 1 );\n\n\t\t\t\t\tif ( amount == 0 ) continue;\n\n\t\t\t\t\tamount *= light.intensity;\n\n\t\t\t\t\tcolor.r += lightColor.r * amount;\n\t\t\t\t\tcolor.g += lightColor.g * amount;\n\t\t\t\t\tcolor.b += lightColor.b * amount;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderSprite( v1, element, material ) {\n\n\t\t\tlet scaleX = element.scale.x * _svgWidthHalf;\n\t\t\tlet scaleY = element.scale.y * _svgHeightHalf;\n\n\t\t\tif ( material.isPointsMaterial ) {\n\n\t\t\t\tscaleX *= material.size;\n\t\t\t\tscaleY *= material.size;\n\n\t\t\t}\n\n\t\t\tconst path = 'M' + convert( v1.x - scaleX * 0.5 ) + ',' + convert( v1.y - scaleY * 0.5 ) + 'h' + convert( scaleX ) + 'v' + convert( scaleY ) + 'h' + convert( - scaleX ) + 'z';\n\t\t\tlet style = '';\n\n\t\t\tif ( material.isSpriteMaterial || material.isPointsMaterial ) {\n\n\t\t\t\tstyle = 'fill:' + material.color.getStyle() + ';fill-opacity:' + material.opacity;\n\n\t\t\t}\n\n\t\t\taddPath( style, path );\n\n\t\t}\n\n\t\tfunction renderLine( v1, v2, material ) {\n\n\t\t\tconst path = 'M' + convert( v1.positionScreen.x ) + ',' + convert( v1.positionScreen.y ) + 'L' + convert( v2.positionScreen.x ) + ',' + convert( v2.positionScreen.y );\n\n\t\t\tif ( material.isLineBasicMaterial ) {\n\n\t\t\t\tlet style = 'fill:none;stroke:' + material.color.getStyle() + ';stroke-opacity:' + material.opacity + ';stroke-width:' + material.linewidth + ';stroke-linecap:' + material.linecap;\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\tstyle = style + ';stroke-dasharray:' + material.dashSize + ',' + material.gapSize;\n\n\t\t\t\t}\n\n\t\t\t\taddPath( style, path );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderFace3( v1, v2, v3, element, material ) {\n\n\t\t\t_this.info.render.vertices += 3;\n\t\t\t_this.info.render.faces ++;\n\n\t\t\tconst path = 'M' + convert( v1.positionScreen.x ) + ',' + convert( v1.positionScreen.y ) + 'L' + convert( v2.positionScreen.x ) + ',' + convert( v2.positionScreen.y ) + 'L' + convert( v3.positionScreen.x ) + ',' + convert( v3.positionScreen.y ) + 'z';\n\t\t\tlet style = '';\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\t_color.copy( material.color );\n\n\t\t\t\tif ( material.vertexColors ) {\n\n\t\t\t\t\t_color.multiply( element.color );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial ) {\n\n\t\t\t\t_diffuseColor.copy( material.color );\n\n\t\t\t\tif ( material.vertexColors ) {\n\n\t\t\t\t\t_diffuseColor.multiply( element.color );\n\n\t\t\t\t}\n\n\t\t\t\t_color.copy( _ambientLight );\n\n\t\t\t\t_centroid.copy( v1.positionWorld ).add( v2.positionWorld ).add( v3.positionWorld ).divideScalar( 3 );\n\n\t\t\t\tcalculateLight( _lights, _centroid, element.normalModel, _color );\n\n\t\t\t\t_color.multiply( _diffuseColor ).add( material.emissive );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\t_normal.copy( element.normalModel ).applyMatrix3( _normalViewMatrix ).normalize();\n\n\t\t\t\t_color.setRGB( _normal.x, _normal.y, _normal.z ).multiplyScalar( 0.5 ).addScalar( 0.5 );\n\n\t\t\t}\n\n\t\t\tif ( material.wireframe ) {\n\n\t\t\t\tstyle = 'fill:none;stroke:' + _color.getStyle() + ';stroke-opacity:' + material.opacity + ';stroke-width:' + material.wireframeLinewidth + ';stroke-linecap:' + material.wireframeLinecap + ';stroke-linejoin:' + material.wireframeLinejoin;\n\n\t\t\t} else {\n\n\t\t\t\tstyle = 'fill:' + _color.getStyle() + ';fill-opacity:' + material.opacity;\n\n\t\t\t}\n\n\t\t\taddPath( style, path );\n\n\t\t}\n\n\t\t// Hide anti-alias gaps\n\n\t\tfunction expand( v1, v2, pixels ) {\n\n\t\t\tlet x = v2.x - v1.x, y = v2.y - v1.y;\n\t\t\tconst det = x * x + y * y;\n\n\t\t\tif ( det === 0 ) return;\n\n\t\t\tconst idet = pixels / Math.sqrt( det );\n\n\t\t\tx *= idet; y *= idet;\n\n\t\t\tv2.x += x; v2.y += y;\n\t\t\tv1.x -= x; v1.y -= y;\n\n\t\t}\n\n\t\tfunction addPath( style, path ) {\n\n\t\t\tif ( _currentStyle === style ) {\n\n\t\t\t\t_currentPath += path;\n\n\t\t\t} else {\n\n\t\t\t\tflushPath();\n\n\t\t\t\t_currentStyle = style;\n\t\t\t\t_currentPath = path;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction flushPath() {\n\n\t\t\tif ( _currentPath ) {\n\n\t\t\t\t_svgNode = getPathNode( _pathCount ++ );\n\t\t\t\t_svgNode.setAttribute( 'd', _currentPath );\n\t\t\t\t_svgNode.setAttribute( 'style', _currentStyle );\n\t\t\t\t_svg.appendChild( _svgNode );\n\n\t\t\t}\n\n\t\t\t_currentPath = '';\n\t\t\t_currentStyle = '';\n\n\t\t}\n\n\t\tfunction getPathNode( id ) {\n\n\t\t\tif ( _svgPathPool[ id ] == null ) {\n\n\t\t\t\t_svgPathPool[ id ] = document.createElementNS( 'http://www.w3.org/2000/svg', 'path' );\n\n\t\t\t\tif ( _quality == 0 ) {\n\n\t\t\t\t\t_svgPathPool[ id ].setAttribute( 'shape-rendering', 'crispEdges' ); //optimizeSpeed\n\n\t\t\t\t}\n\n\t\t\t\treturn _svgPathPool[ id ];\n\n\t\t\t}\n\n\t\t\treturn _svgPathPool[ id ];\n\n\t\t}\n\n\t}\n\n}\n\nexport { SVGObject, SVGRenderer };\n"],"mappings":"AAAA,SACCA,IAAI,EACJC,MAAM,EACNC,KAAK,EACLC,OAAO,EACPC,OAAO,EACPC,QAAQ,EACRC,OAAO,QACD,OAAO;AACd,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,gBAAgB,QAAQ,2BAA2B;AAE5D,MAAMC,SAAS,SAASN,QAAQ,CAAC;EAEhCO,WAAWA,CAAEC,IAAI,EAAG;IAEnB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,WAAW,GAAG,IAAI;IAEvB,IAAI,CAACD,IAAI,GAAGA,IAAI;EAEjB;AAED;AAEA,MAAME,WAAW,CAAC;EAEjBH,WAAWA,CAAA,EAAG;IAEb,IAAII,WAAW;MAAEC,SAAS;MAAEC,OAAO;MAClCC,SAAS;MAAEC,UAAU;MAAEC,aAAa;MAAEC,cAAc;MAEpDC,GAAG;MAAEC,GAAG;MAAEC,GAAG;MAEbC,QAAQ;MACRC,UAAU,GAAG,CAAC;MAEdC,UAAU,GAAG,IAAI;MACjBC,QAAQ,GAAG,CAAC;MAEZC,YAAY;MAAEC,aAAa;IAE5B,MAAMC,KAAK,GAAG,IAAI;MACjBC,QAAQ,GAAG,IAAIjC,IAAI,CAAC,CAAC;MACrBkC,QAAQ,GAAG,IAAIlC,IAAI,CAAC,CAAC;MAErBmC,MAAM,GAAG,IAAIjC,KAAK,CAAC,CAAC;MACpBkC,aAAa,GAAG,IAAIlC,KAAK,CAAC,CAAC;MAC3BmC,aAAa,GAAG,IAAInC,KAAK,CAAC,CAAC;MAC3BoC,kBAAkB,GAAG,IAAIpC,KAAK,CAAC,CAAC;MAChCqC,YAAY,GAAG,IAAIrC,KAAK,CAAC,CAAC;MAC1BsC,WAAW,GAAG,IAAItC,KAAK,CAAC,CAAC;MAEzBuC,QAAQ,GAAG,IAAInC,OAAO,CAAC,CAAC;MAAE;MAC1BoC,SAAS,GAAG,IAAIpC,OAAO,CAAC,CAAC;MACzBqC,OAAO,GAAG,IAAIrC,OAAO,CAAC,CAAC;MACvBsC,iBAAiB,GAAG,IAAIzC,OAAO,CAAC,CAAC;MAEjC0C,WAAW,GAAG,IAAIzC,OAAO,CAAC,CAAC;MAC3B0C,qBAAqB,GAAG,IAAI1C,OAAO,CAAC,CAAC;MAErC2C,YAAY,GAAG,EAAE;MAEjBC,UAAU,GAAG,IAAIzC,SAAS,CAAC,CAAC;MAC5B0C,IAAI,GAAGC,QAAQ,CAACC,eAAe,CAAE,4BAA4B,EAAE,KAAM,CAAC;IAEvE,IAAI,CAACC,UAAU,GAAGH,IAAI;IAEtB,IAAI,CAACI,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,YAAY,GAAG,IAAI;IAExB,IAAI,CAACC,QAAQ,GAAG,GAAG;IAEnB,IAAI,CAACC,IAAI,GAAG;MAEXC,MAAM,EAAE;QAEPC,QAAQ,EAAE,CAAC;QACXC,KAAK,EAAE;MAER;IAED,CAAC;IAED,IAAI,CAACC,UAAU,GAAG,UAAWC,OAAO,EAAG;MAEtC,QAASA,OAAO;QAEf,KAAK,MAAM;UAAEjC,QAAQ,GAAG,CAAC;UAAE;QAC3B,KAAK,KAAK;UAAEA,QAAQ,GAAG,CAAC;UAAE;MAE3B;IAED,CAAC;IAED,IAAI,CAACkC,aAAa,GAAG,UAAWC,KAAK,EAAG;MAEvCxB,WAAW,CAACyB,GAAG,CAAED,KAAM,CAAC;IAEzB,CAAC;IAED,IAAI,CAACE,aAAa,GAAG,YAAY,CAAC,CAAC;IAEnC,IAAI,CAACC,OAAO,GAAG,UAAWC,KAAK,EAAEC,MAAM,EAAG;MAEzClD,SAAS,GAAGiD,KAAK;MAAEhD,UAAU,GAAGiD,MAAM;MACtChD,aAAa,GAAGF,SAAS,GAAG,CAAC;MAAEG,cAAc,GAAGF,UAAU,GAAG,CAAC;MAE9D6B,IAAI,CAACqB,YAAY,CAAE,SAAS,EAAI,CAAEjD,aAAa,GAAK,GAAG,GAAK,CAAEC,cAAgB,GAAG,GAAG,GAAGH,SAAS,GAAG,GAAG,GAAGC,UAAW,CAAC;MACrH6B,IAAI,CAACqB,YAAY,CAAE,OAAO,EAAEnD,SAAU,CAAC;MACvC8B,IAAI,CAACqB,YAAY,CAAE,QAAQ,EAAElD,UAAW,CAAC;MAEzCa,QAAQ,CAACsC,GAAG,CAACN,GAAG,CAAE,CAAE5C,aAAa,EAAE,CAAEC,cAAe,CAAC;MACrDW,QAAQ,CAACuC,GAAG,CAACP,GAAG,CAAE5C,aAAa,EAAEC,cAAe,CAAC;IAElD,CAAC;IAED,IAAI,CAACmD,OAAO,GAAG,YAAY;MAE1B,OAAO;QACNL,KAAK,EAAEjD,SAAS;QAChBkD,MAAM,EAAEjD;MACT,CAAC;IAEF,CAAC;IAED,IAAI,CAACsD,YAAY,GAAG,UAAWC,SAAS,EAAG;MAE1C/C,UAAU,GAAG+C,SAAS;IAEvB,CAAC;IAED,SAASC,gBAAgBA,CAAA,EAAG;MAE3BjD,UAAU,GAAG,CAAC;MAEd,OAAQsB,IAAI,CAAC4B,UAAU,CAACC,MAAM,GAAG,CAAC,EAAG;QAEpC7B,IAAI,CAAC8B,WAAW,CAAE9B,IAAI,CAAC4B,UAAU,CAAE,CAAC,CAAG,CAAC;MAEzC;IAED;IAEA,SAASG,OAAOA,CAAEC,CAAC,EAAG;MAErB,OAAOrD,UAAU,KAAK,IAAI,GAAGqD,CAAC,CAACC,OAAO,CAAEtD,UAAW,CAAC,GAAGqD,CAAC;IAEzD;IAEA,IAAI,CAACE,KAAK,GAAG,YAAY;MAExBP,gBAAgB,CAAC,CAAC;MAClB3B,IAAI,CAACmC,KAAK,CAACC,eAAe,GAAG7C,WAAW,CAAC8C,QAAQ,CAAC,CAAC;IAEpD,CAAC;IAED,IAAI,CAAC5B,MAAM,GAAG,UAAW6B,KAAK,EAAEC,MAAM,EAAG;MAExC,IAAKA,MAAM,YAAYvF,MAAM,KAAK,KAAK,EAAG;QAEzCwF,OAAO,CAACC,KAAK,CAAE,gEAAiE,CAAC;QACjF;MAED;MAEA,MAAMC,UAAU,GAAGJ,KAAK,CAACI,UAAU;MAEnC,IAAKA,UAAU,IAAIA,UAAU,CAACC,OAAO,EAAG;QAEvChB,gBAAgB,CAAC,CAAC;QAClB3B,IAAI,CAACmC,KAAK,CAACC,eAAe,GAAGM,UAAU,CAACL,QAAQ,CAAC,CAAC;MAEnD,CAAC,MAAM,IAAK,IAAI,CAACjC,SAAS,KAAK,IAAI,EAAG;QAErC,IAAI,CAAC8B,KAAK,CAAC,CAAC;MAEb;MAEAnD,KAAK,CAACyB,IAAI,CAACC,MAAM,CAACC,QAAQ,GAAG,CAAC;MAC9B3B,KAAK,CAACyB,IAAI,CAACC,MAAM,CAACE,KAAK,GAAG,CAAC;MAE3Bf,WAAW,CAACgD,IAAI,CAAEL,MAAM,CAACM,kBAAmB,CAAC;MAC7ChD,qBAAqB,CAACiD,gBAAgB,CAAEP,MAAM,CAACQ,gBAAgB,EAAEnD,WAAY,CAAC;MAE9E7B,WAAW,GAAGgC,UAAU,CAACiD,YAAY,CAAEV,KAAK,EAAEC,MAAM,EAAE,IAAI,CAAClC,WAAW,EAAE,IAAI,CAACC,YAAa,CAAC;MAC3FtC,SAAS,GAAGD,WAAW,CAACkF,QAAQ;MAChChF,OAAO,GAAGF,WAAW,CAACmF,MAAM;MAE5BvD,iBAAiB,CAACwD,eAAe,CAAEZ,MAAM,CAACM,kBAAmB,CAAC;MAE9DO,eAAe,CAAEnF,OAAQ,CAAC;;MAEzB;;MAEDY,YAAY,GAAG,EAAE;MACjBC,aAAa,GAAG,EAAE;MAElB,KAAM,IAAIuE,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGtF,SAAS,CAAC6D,MAAM,EAAEwB,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAG,EAAG;QAEtD,MAAME,OAAO,GAAGvF,SAAS,CAAEqF,CAAC,CAAE;QAC9B,MAAMG,QAAQ,GAAGD,OAAO,CAACC,QAAQ;QAEjC,IAAKA,QAAQ,KAAKC,SAAS,IAAID,QAAQ,CAACE,OAAO,KAAK,CAAC,EAAG;QAExDzE,QAAQ,CAAC0E,SAAS,CAAC,CAAC;QAEpB,IAAKJ,OAAO,YAAY9F,gBAAgB,EAAG;UAE1Ca,GAAG,GAAGiF,OAAO;UACbjF,GAAG,CAACsF,CAAC,IAAIxF,aAAa;UAAEE,GAAG,CAACuF,CAAC,IAAI,CAAExF,cAAc;UAEjDyF,YAAY,CAAExF,GAAG,EAAEiF,OAAO,EAAEC,QAAS,CAAC;QAEvC,CAAC,MAAM,IAAKD,OAAO,YAAY/F,cAAc,EAAG;UAE/Cc,GAAG,GAAGiF,OAAO,CAACQ,EAAE;UAAExF,GAAG,GAAGgF,OAAO,CAACS,EAAE;UAElC1F,GAAG,CAAC2F,cAAc,CAACL,CAAC,IAAIxF,aAAa;UAAEE,GAAG,CAAC2F,cAAc,CAACJ,CAAC,IAAI,CAAExF,cAAc;UAC/EE,GAAG,CAAC0F,cAAc,CAACL,CAAC,IAAIxF,aAAa;UAAEG,GAAG,CAAC0F,cAAc,CAACJ,CAAC,IAAI,CAAExF,cAAc;UAE/EY,QAAQ,CAACiF,aAAa,CAAE,CAAE5F,GAAG,CAAC2F,cAAc,EAAE1F,GAAG,CAAC0F,cAAc,CAAG,CAAC;UAEpE,IAAKjF,QAAQ,CAACmF,aAAa,CAAElF,QAAS,CAAC,KAAK,IAAI,EAAG;YAElDmF,UAAU,CAAE9F,GAAG,EAAEC,GAAG,EAAEiF,QAAS,CAAC;UAEjC;QAED,CAAC,MAAM,IAAKD,OAAO,YAAYhG,cAAc,EAAG;UAE/Ce,GAAG,GAAGiF,OAAO,CAACQ,EAAE;UAAExF,GAAG,GAAGgF,OAAO,CAACS,EAAE;UAAExF,GAAG,GAAG+E,OAAO,CAACc,EAAE;UAEpD,IAAK/F,GAAG,CAAC2F,cAAc,CAACK,CAAC,GAAG,CAAE,CAAC,IAAIhG,GAAG,CAAC2F,cAAc,CAACK,CAAC,GAAG,CAAC,EAAG;UAC9D,IAAK/F,GAAG,CAAC0F,cAAc,CAACK,CAAC,GAAG,CAAE,CAAC,IAAI/F,GAAG,CAAC0F,cAAc,CAACK,CAAC,GAAG,CAAC,EAAG;UAC9D,IAAK9F,GAAG,CAACyF,cAAc,CAACK,CAAC,GAAG,CAAE,CAAC,IAAI9F,GAAG,CAACyF,cAAc,CAACK,CAAC,GAAG,CAAC,EAAG;UAE9DhG,GAAG,CAAC2F,cAAc,CAACL,CAAC,IAAIxF,aAAa;UAAEE,GAAG,CAAC2F,cAAc,CAACJ,CAAC,IAAI,CAAExF,cAAc;UAC/EE,GAAG,CAAC0F,cAAc,CAACL,CAAC,IAAIxF,aAAa;UAAEG,GAAG,CAAC0F,cAAc,CAACJ,CAAC,IAAI,CAAExF,cAAc;UAC/EG,GAAG,CAACyF,cAAc,CAACL,CAAC,IAAIxF,aAAa;UAAEI,GAAG,CAACyF,cAAc,CAACJ,CAAC,IAAI,CAAExF,cAAc;UAE/E,IAAK,IAAI,CAACkC,QAAQ,GAAG,CAAC,EAAG;YAExBgE,MAAM,CAAEjG,GAAG,CAAC2F,cAAc,EAAE1F,GAAG,CAAC0F,cAAc,EAAE,IAAI,CAAC1D,QAAS,CAAC;YAC/DgE,MAAM,CAAEhG,GAAG,CAAC0F,cAAc,EAAEzF,GAAG,CAACyF,cAAc,EAAE,IAAI,CAAC1D,QAAS,CAAC;YAC/DgE,MAAM,CAAE/F,GAAG,CAACyF,cAAc,EAAE3F,GAAG,CAAC2F,cAAc,EAAE,IAAI,CAAC1D,QAAS,CAAC;UAEhE;UAEAtB,QAAQ,CAACiF,aAAa,CAAE,CACvB5F,GAAG,CAAC2F,cAAc,EAClB1F,GAAG,CAAC0F,cAAc,EAClBzF,GAAG,CAACyF,cAAc,CACjB,CAAC;UAEH,IAAKjF,QAAQ,CAACmF,aAAa,CAAElF,QAAS,CAAC,KAAK,IAAI,EAAG;YAElDuF,WAAW,CAAElG,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE+E,OAAO,EAAEC,QAAS,CAAC;UAEhD;QAED;MAED;MAEAiB,SAAS,CAAC,CAAC,CAAC,CAAC;;MAEbnC,KAAK,CAACoC,eAAe,CAAE,UAAWC,MAAM,EAAG;QAEzC,IAAKA,MAAM,CAAC9G,WAAW,EAAG;UAE1B2B,QAAQ,CAACoF,qBAAqB,CAAED,MAAM,CAACE,WAAY,CAAC;UACpDrF,QAAQ,CAACsF,YAAY,CAAEjF,qBAAsB,CAAC;UAE9C,IAAKL,QAAQ,CAAC8E,CAAC,GAAG,CAAE,CAAC,IAAI9E,QAAQ,CAAC8E,CAAC,GAAG,CAAC,EAAG;UAE1C,MAAMV,CAAC,GAAGpE,QAAQ,CAACoE,CAAC,GAAGxF,aAAa;UACpC,MAAMyF,CAAC,GAAG,CAAErE,QAAQ,CAACqE,CAAC,GAAGxF,cAAc;UAEvC,MAAMT,IAAI,GAAG+G,MAAM,CAAC/G,IAAI;UACxBA,IAAI,CAACyD,YAAY,CAAE,WAAW,EAAE,YAAY,GAAGuC,CAAC,GAAG,GAAG,GAAGC,CAAC,GAAG,GAAI,CAAC;UAElE7D,IAAI,CAAC+E,WAAW,CAAEnH,IAAK,CAAC;QAEzB;MAED,CAAE,CAAC;IAEJ,CAAC;IAED,SAASwF,eAAeA,CAAEF,MAAM,EAAG;MAElC9D,aAAa,CAAC4F,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAC/B3F,kBAAkB,CAAC2F,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MACpC1F,YAAY,CAAC0F,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;MAE9B,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGhC,MAAM,CAACrB,MAAM,EAAEoD,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAG,EAAG;QAEnD,MAAME,KAAK,GAAGjC,MAAM,CAAE+B,CAAC,CAAE;QACzB,MAAMG,UAAU,GAAGD,KAAK,CAACpE,KAAK;QAE9B,IAAKoE,KAAK,CAACE,cAAc,EAAG;UAE3BjG,aAAa,CAACkG,CAAC,IAAIF,UAAU,CAACE,CAAC;UAC/BlG,aAAa,CAACmG,CAAC,IAAIH,UAAU,CAACG,CAAC;UAC/BnG,aAAa,CAACoG,CAAC,IAAIJ,UAAU,CAACI,CAAC;QAEhC,CAAC,MAAM,IAAKL,KAAK,CAACM,kBAAkB,EAAG;UAEtCpG,kBAAkB,CAACiG,CAAC,IAAIF,UAAU,CAACE,CAAC;UACpCjG,kBAAkB,CAACkG,CAAC,IAAIH,UAAU,CAACG,CAAC;UACpClG,kBAAkB,CAACmG,CAAC,IAAIJ,UAAU,CAACI,CAAC;QAErC,CAAC,MAAM,IAAKL,KAAK,CAACO,YAAY,EAAG;UAEhCpG,YAAY,CAACgG,CAAC,IAAIF,UAAU,CAACE,CAAC;UAC9BhG,YAAY,CAACiG,CAAC,IAAIH,UAAU,CAACG,CAAC;UAC9BjG,YAAY,CAACkG,CAAC,IAAIJ,UAAU,CAACI,CAAC;QAE/B;MAED;IAED;IAEA,SAASG,cAAcA,CAAEzC,MAAM,EAAE0C,QAAQ,EAAEC,MAAM,EAAE9E,KAAK,EAAG;MAE1D,KAAM,IAAIkE,CAAC,GAAG,CAAC,EAAEC,EAAE,GAAGhC,MAAM,CAACrB,MAAM,EAAEoD,CAAC,GAAGC,EAAE,EAAED,CAAC,EAAG,EAAG;QAEnD,MAAME,KAAK,GAAGjC,MAAM,CAAE+B,CAAC,CAAE;QACzB,MAAMG,UAAU,GAAGD,KAAK,CAACpE,KAAK;QAE9B,IAAKoE,KAAK,CAACM,kBAAkB,EAAG;UAE/B,MAAMK,aAAa,GAAGtG,QAAQ,CAACoF,qBAAqB,CAAEO,KAAK,CAACN,WAAY,CAAC,CAACkB,SAAS,CAAC,CAAC;UAErF,IAAIC,MAAM,GAAGH,MAAM,CAACI,GAAG,CAAEH,aAAc,CAAC;UAExC,IAAKE,MAAM,IAAI,CAAC,EAAG;UAEnBA,MAAM,IAAIb,KAAK,CAACe,SAAS;UAEzBnF,KAAK,CAACuE,CAAC,IAAIF,UAAU,CAACE,CAAC,GAAGU,MAAM;UAChCjF,KAAK,CAACwE,CAAC,IAAIH,UAAU,CAACG,CAAC,GAAGS,MAAM;UAChCjF,KAAK,CAACyE,CAAC,IAAIJ,UAAU,CAACI,CAAC,GAAGQ,MAAM;QAEjC,CAAC,MAAM,IAAKb,KAAK,CAACO,YAAY,EAAG;UAEhC,MAAMI,aAAa,GAAGtG,QAAQ,CAACoF,qBAAqB,CAAEO,KAAK,CAACN,WAAY,CAAC;UAEzE,IAAImB,MAAM,GAAGH,MAAM,CAACI,GAAG,CAAEzG,QAAQ,CAAC2G,UAAU,CAAEL,aAAa,EAAEF,QAAS,CAAC,CAACG,SAAS,CAAC,CAAE,CAAC;UAErF,IAAKC,MAAM,IAAI,CAAC,EAAG;UAEnBA,MAAM,IAAIb,KAAK,CAACiB,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAGC,IAAI,CAAC/E,GAAG,CAAEsE,QAAQ,CAACU,UAAU,CAAER,aAAc,CAAC,GAAGX,KAAK,CAACiB,QAAQ,EAAE,CAAE,CAAC;UAE5G,IAAKJ,MAAM,IAAI,CAAC,EAAG;UAEnBA,MAAM,IAAIb,KAAK,CAACe,SAAS;UAEzBnF,KAAK,CAACuE,CAAC,IAAIF,UAAU,CAACE,CAAC,GAAGU,MAAM;UAChCjF,KAAK,CAACwE,CAAC,IAAIH,UAAU,CAACG,CAAC,GAAGS,MAAM;UAChCjF,KAAK,CAACyE,CAAC,IAAIJ,UAAU,CAACI,CAAC,GAAGQ,MAAM;QAEjC;MAED;IAED;IAEA,SAASlC,YAAYA,CAAEC,EAAE,EAAER,OAAO,EAAEC,QAAQ,EAAG;MAE9C,IAAI+C,MAAM,GAAGhD,OAAO,CAACiD,KAAK,CAAC5C,CAAC,GAAGxF,aAAa;MAC5C,IAAIqI,MAAM,GAAGlD,OAAO,CAACiD,KAAK,CAAC3C,CAAC,GAAGxF,cAAc;MAE7C,IAAKmF,QAAQ,CAACkD,gBAAgB,EAAG;QAEhCH,MAAM,IAAI/C,QAAQ,CAACmD,IAAI;QACvBF,MAAM,IAAIjD,QAAQ,CAACmD,IAAI;MAExB;MAEA,MAAMC,IAAI,GAAG,GAAG,GAAG7E,OAAO,CAAEgC,EAAE,CAACH,CAAC,GAAG2C,MAAM,GAAG,GAAI,CAAC,GAAG,GAAG,GAAGxE,OAAO,CAAEgC,EAAE,CAACF,CAAC,GAAG4C,MAAM,GAAG,GAAI,CAAC,GAAG,GAAG,GAAG1E,OAAO,CAAEwE,MAAO,CAAC,GAAG,GAAG,GAAGxE,OAAO,CAAE0E,MAAO,CAAC,GAAG,GAAG,GAAG1E,OAAO,CAAE,CAAEwE,MAAO,CAAC,GAAG,GAAG;MAC9K,IAAIpE,KAAK,GAAG,EAAE;MAEd,IAAKqB,QAAQ,CAACqD,gBAAgB,IAAIrD,QAAQ,CAACkD,gBAAgB,EAAG;QAE7DvE,KAAK,GAAG,OAAO,GAAGqB,QAAQ,CAACzC,KAAK,CAACsB,QAAQ,CAAC,CAAC,GAAG,gBAAgB,GAAGmB,QAAQ,CAACE,OAAO;MAElF;MAEAoD,OAAO,CAAE3E,KAAK,EAAEyE,IAAK,CAAC;IAEvB;IAEA,SAASxC,UAAUA,CAAEL,EAAE,EAAEC,EAAE,EAAER,QAAQ,EAAG;MAEvC,MAAMoD,IAAI,GAAG,GAAG,GAAG7E,OAAO,CAAEgC,EAAE,CAACE,cAAc,CAACL,CAAE,CAAC,GAAG,GAAG,GAAG7B,OAAO,CAAEgC,EAAE,CAACE,cAAc,CAACJ,CAAE,CAAC,GAAG,GAAG,GAAG9B,OAAO,CAAEiC,EAAE,CAACC,cAAc,CAACL,CAAE,CAAC,GAAG,GAAG,GAAG7B,OAAO,CAAEiC,EAAE,CAACC,cAAc,CAACJ,CAAE,CAAC;MAEtK,IAAKL,QAAQ,CAACuD,mBAAmB,EAAG;QAEnC,IAAI5E,KAAK,GAAG,mBAAmB,GAAGqB,QAAQ,CAACzC,KAAK,CAACsB,QAAQ,CAAC,CAAC,GAAG,kBAAkB,GAAGmB,QAAQ,CAACE,OAAO,GAAG,gBAAgB,GAAGF,QAAQ,CAACwD,SAAS,GAAG,kBAAkB,GAAGxD,QAAQ,CAACyD,OAAO;QAEnL,IAAKzD,QAAQ,CAAC0D,oBAAoB,EAAG;UAEpC/E,KAAK,GAAGA,KAAK,GAAG,oBAAoB,GAAGqB,QAAQ,CAAC2D,QAAQ,GAAG,GAAG,GAAG3D,QAAQ,CAAC4D,OAAO;QAElF;QAEAN,OAAO,CAAE3E,KAAK,EAAEyE,IAAK,CAAC;MAEvB;IAED;IAEA,SAASpC,WAAWA,CAAET,EAAE,EAAEC,EAAE,EAAEK,EAAE,EAAEd,OAAO,EAAEC,QAAQ,EAAG;MAErDzE,KAAK,CAACyB,IAAI,CAACC,MAAM,CAACC,QAAQ,IAAI,CAAC;MAC/B3B,KAAK,CAACyB,IAAI,CAACC,MAAM,CAACE,KAAK,EAAG;MAE1B,MAAMiG,IAAI,GAAG,GAAG,GAAG7E,OAAO,CAAEgC,EAAE,CAACE,cAAc,CAACL,CAAE,CAAC,GAAG,GAAG,GAAG7B,OAAO,CAAEgC,EAAE,CAACE,cAAc,CAACJ,CAAE,CAAC,GAAG,GAAG,GAAG9B,OAAO,CAAEiC,EAAE,CAACC,cAAc,CAACL,CAAE,CAAC,GAAG,GAAG,GAAG7B,OAAO,CAAEiC,EAAE,CAACC,cAAc,CAACJ,CAAE,CAAC,GAAG,GAAG,GAAG9B,OAAO,CAAEsC,EAAE,CAACJ,cAAc,CAACL,CAAE,CAAC,GAAG,GAAG,GAAG7B,OAAO,CAAEsC,EAAE,CAACJ,cAAc,CAACJ,CAAE,CAAC,GAAG,GAAG;MAC1P,IAAI1B,KAAK,GAAG,EAAE;MAEd,IAAKqB,QAAQ,CAAC6D,mBAAmB,EAAG;QAEnCnI,MAAM,CAAC0D,IAAI,CAAEY,QAAQ,CAACzC,KAAM,CAAC;QAE7B,IAAKyC,QAAQ,CAAC8D,YAAY,EAAG;UAE5BpI,MAAM,CAACqI,QAAQ,CAAEhE,OAAO,CAACxC,KAAM,CAAC;QAEjC;MAED,CAAC,MAAM,IAAKyC,QAAQ,CAACgE,qBAAqB,IAAIhE,QAAQ,CAACiE,mBAAmB,IAAIjE,QAAQ,CAACkE,sBAAsB,EAAG;QAE/GvI,aAAa,CAACyD,IAAI,CAAEY,QAAQ,CAACzC,KAAM,CAAC;QAEpC,IAAKyC,QAAQ,CAAC8D,YAAY,EAAG;UAE5BnI,aAAa,CAACoI,QAAQ,CAAEhE,OAAO,CAACxC,KAAM,CAAC;QAExC;QAEA7B,MAAM,CAAC0D,IAAI,CAAExD,aAAc,CAAC;QAE5BK,SAAS,CAACmD,IAAI,CAAEmB,EAAE,CAAC4D,aAAc,CAAC,CAACC,GAAG,CAAE5D,EAAE,CAAC2D,aAAc,CAAC,CAACC,GAAG,CAAEvD,EAAE,CAACsD,aAAc,CAAC,CAACE,YAAY,CAAE,CAAE,CAAC;QAEpGlC,cAAc,CAAE1H,OAAO,EAAEwB,SAAS,EAAE8D,OAAO,CAACuE,WAAW,EAAE5I,MAAO,CAAC;QAEjEA,MAAM,CAACqI,QAAQ,CAAEpI,aAAc,CAAC,CAACyI,GAAG,CAAEpE,QAAQ,CAACuE,QAAS,CAAC;MAE1D,CAAC,MAAM,IAAKvE,QAAQ,CAACwE,oBAAoB,EAAG;QAE3CtI,OAAO,CAACkD,IAAI,CAAEW,OAAO,CAACuE,WAAY,CAAC,CAACG,YAAY,CAAEtI,iBAAkB,CAAC,CAACoG,SAAS,CAAC,CAAC;QAEjF7G,MAAM,CAAC8F,MAAM,CAAEtF,OAAO,CAACkE,CAAC,EAAElE,OAAO,CAACmE,CAAC,EAAEnE,OAAO,CAAC4E,CAAE,CAAC,CAAC4D,cAAc,CAAE,GAAI,CAAC,CAACC,SAAS,CAAE,GAAI,CAAC;MAExF;MAEA,IAAK3E,QAAQ,CAAC4E,SAAS,EAAG;QAEzBjG,KAAK,GAAG,mBAAmB,GAAGjD,MAAM,CAACmD,QAAQ,CAAC,CAAC,GAAG,kBAAkB,GAAGmB,QAAQ,CAACE,OAAO,GAAG,gBAAgB,GAAGF,QAAQ,CAAC6E,kBAAkB,GAAG,kBAAkB,GAAG7E,QAAQ,CAAC8E,gBAAgB,GAAG,mBAAmB,GAAG9E,QAAQ,CAAC+E,iBAAiB;MAE7O,CAAC,MAAM;QAENpG,KAAK,GAAG,OAAO,GAAGjD,MAAM,CAACmD,QAAQ,CAAC,CAAC,GAAG,gBAAgB,GAAGmB,QAAQ,CAACE,OAAO;MAE1E;MAEAoD,OAAO,CAAE3E,KAAK,EAAEyE,IAAK,CAAC;IAEvB;;IAEA;;IAEA,SAASrC,MAAMA,CAAER,EAAE,EAAEC,EAAE,EAAEwE,MAAM,EAAG;MAEjC,IAAI5E,CAAC,GAAGI,EAAE,CAACJ,CAAC,GAAGG,EAAE,CAACH,CAAC;QAAEC,CAAC,GAAGG,EAAE,CAACH,CAAC,GAAGE,EAAE,CAACF,CAAC;MACpC,MAAM4E,GAAG,GAAG7E,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC;MAEzB,IAAK4E,GAAG,KAAK,CAAC,EAAG;MAEjB,MAAMC,IAAI,GAAGF,MAAM,GAAGnC,IAAI,CAACsC,IAAI,CAAEF,GAAI,CAAC;MAEtC7E,CAAC,IAAI8E,IAAI;MAAE7E,CAAC,IAAI6E,IAAI;MAEpB1E,EAAE,CAACJ,CAAC,IAAIA,CAAC;MAAEI,EAAE,CAACH,CAAC,IAAIA,CAAC;MACpBE,EAAE,CAACH,CAAC,IAAIA,CAAC;MAAEG,EAAE,CAACF,CAAC,IAAIA,CAAC;IAErB;IAEA,SAASiD,OAAOA,CAAE3E,KAAK,EAAEyE,IAAI,EAAG;MAE/B,IAAK9H,aAAa,KAAKqD,KAAK,EAAG;QAE9BtD,YAAY,IAAI+H,IAAI;MAErB,CAAC,MAAM;QAENnC,SAAS,CAAC,CAAC;QAEX3F,aAAa,GAAGqD,KAAK;QACrBtD,YAAY,GAAG+H,IAAI;MAEpB;IAED;IAEA,SAASnC,SAASA,CAAA,EAAG;MAEpB,IAAK5F,YAAY,EAAG;QAEnBJ,QAAQ,GAAGmK,WAAW,CAAElK,UAAU,EAAI,CAAC;QACvCD,QAAQ,CAAC4C,YAAY,CAAE,GAAG,EAAExC,YAAa,CAAC;QAC1CJ,QAAQ,CAAC4C,YAAY,CAAE,OAAO,EAAEvC,aAAc,CAAC;QAC/CkB,IAAI,CAAC+E,WAAW,CAAEtG,QAAS,CAAC;MAE7B;MAEAI,YAAY,GAAG,EAAE;MACjBC,aAAa,GAAG,EAAE;IAEnB;IAEA,SAAS8J,WAAWA,CAAEC,EAAE,EAAG;MAE1B,IAAK/I,YAAY,CAAE+I,EAAE,CAAE,IAAI,IAAI,EAAG;QAEjC/I,YAAY,CAAE+I,EAAE,CAAE,GAAG5I,QAAQ,CAACC,eAAe,CAAE,4BAA4B,EAAE,MAAO,CAAC;QAErF,IAAKtB,QAAQ,IAAI,CAAC,EAAG;UAEpBkB,YAAY,CAAE+I,EAAE,CAAE,CAACxH,YAAY,CAAE,iBAAiB,EAAE,YAAa,CAAC,CAAC,CAAC;QAErE;;QAEA,OAAOvB,YAAY,CAAE+I,EAAE,CAAE;MAE1B;MAEA,OAAO/I,YAAY,CAAE+I,EAAE,CAAE;IAE1B;EAED;AAED;AAEA,SAASnL,SAAS,EAAEI,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}