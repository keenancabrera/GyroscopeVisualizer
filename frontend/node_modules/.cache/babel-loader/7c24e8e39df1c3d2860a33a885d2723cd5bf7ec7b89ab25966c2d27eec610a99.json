{"ast":null,"code":"// import { Clock } from \"three\";\n\nclass Loop {\n  constructor(camera, scene, renderer) {\n    this.camera = camera;\n    this.scene = scene;\n    this.renderer = renderer;\n    this.updatables = [];\n    this.solution = [];\n    this.state = {};\n  }\n  start(state) {\n    this.state = state;\n    console.log(this.state);\n    console.log(this.solution[0]);\n    let i = 1;\n    let lenSolution = this.solution.length;\n    this.renderer.setAnimationLoop(() => {\n      for (const object of this.updatables) {\n        object.tick(this.solution[i]);\n      }\n      i = i + 1;\n      this.renderer.render(this.scene, this.camera);\n      if (i >= lenSolution) {\n        this.stop();\n      }\n    });\n  }\n  stop() {\n    this.renderer.setAnimationLoop(null);\n    for (const object of this.updatables) {\n      object.tick(this.state);\n    }\n    this.renderer.render(scene, camera);\n  }\n  tick() {\n    for (const object of this.updatables) {\n      object.tick();\n    }\n  }\n}\nexport { Loop };","map":{"version":3,"names":["Loop","constructor","camera","scene","renderer","updatables","solution","state","start","console","log","i","lenSolution","length","setAnimationLoop","object","tick","render","stop"],"sources":["/Users/cabrera/Documents/PortfolioWebiste/frontend/src/gyroscopeRenderer/systems/Loop.js"],"sourcesContent":["// import { Clock } from \"three\";\n\nclass Loop {\n  constructor(camera, scene, renderer) {\n    this.camera = camera\n    this.scene = scene\n    this.renderer = renderer\n    this.updatables = []\n    this.solution = []\n    this.state = {}\n  }\n\n   start(state) {\n    this.state = state\n    console.log(this.state)\n    console.log(this.solution[0])\n    let i = 1\n    let lenSolution = this.solution.length\n    this.renderer.setAnimationLoop(() => {\n      for(const object of this.updatables) {\n        object.tick(this.solution[i]);\n      }\n\n      i = i + 1\n      this.renderer.render(this.scene, this.camera)\n\n      if (i >= lenSolution){\n        this.stop() \n      }\n    })\n  }\n\n  stop() {\n    this.renderer.setAnimationLoop(null);\n    for(const object of this.updatables){\n      object.tick(this.state)\n    }\n    this.renderer.render(scene, camera)\n  }\n  \n  tick() {\n    for (const object of this.updatables){\n      object.tick()\n    }\n  }\n}\n\nexport { Loop };"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,CAAC;EACTC,WAAWA,CAACC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAE;IACnC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;EACjB;EAECC,KAAKA,CAACD,KAAK,EAAE;IACZ,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,KAAK,CAAC;IACvBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAIK,CAAC,GAAG,CAAC;IACT,IAAIC,WAAW,GAAG,IAAI,CAACN,QAAQ,CAACO,MAAM;IACtC,IAAI,CAACT,QAAQ,CAACU,gBAAgB,CAAC,MAAM;MACnC,KAAI,MAAMC,MAAM,IAAI,IAAI,CAACV,UAAU,EAAE;QACnCU,MAAM,CAACC,IAAI,CAAC,IAAI,CAACV,QAAQ,CAACK,CAAC,CAAC,CAAC;MAC/B;MAEAA,CAAC,GAAGA,CAAC,GAAG,CAAC;MACT,IAAI,CAACP,QAAQ,CAACa,MAAM,CAAC,IAAI,CAACd,KAAK,EAAE,IAAI,CAACD,MAAM,CAAC;MAE7C,IAAIS,CAAC,IAAIC,WAAW,EAAC;QACnB,IAAI,CAACM,IAAI,CAAC,CAAC;MACb;IACF,CAAC,CAAC;EACJ;EAEAA,IAAIA,CAAA,EAAG;IACL,IAAI,CAACd,QAAQ,CAACU,gBAAgB,CAAC,IAAI,CAAC;IACpC,KAAI,MAAMC,MAAM,IAAI,IAAI,CAACV,UAAU,EAAC;MAClCU,MAAM,CAACC,IAAI,CAAC,IAAI,CAACT,KAAK,CAAC;IACzB;IACA,IAAI,CAACH,QAAQ,CAACa,MAAM,CAACd,KAAK,EAAED,MAAM,CAAC;EACrC;EAEAc,IAAIA,CAAA,EAAG;IACL,KAAK,MAAMD,MAAM,IAAI,IAAI,CAACV,UAAU,EAAC;MACnCU,MAAM,CAACC,IAAI,CAAC,CAAC;IACf;EACF;AACF;AAEA,SAAShB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}